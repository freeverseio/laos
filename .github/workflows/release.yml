name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      proceed: ${{ steps.check_version.outputs.proceed }}
    steps:
      - uses: actions/checkout@v3
      - id: check_version
        run: |
          VERSION=$(grep -m1 version Cargo.toml | sed -E 's/.*"(.*)".*/\1/')
          if [ "v$VERSION" == "${{ github.ref_name }}" ]; then
            echo "::set-output name=proceed::true"
          else
            echo "Version in Cargo.toml ($VERSION) does not match current tag ${{ github.ref_name }}. Canceling release..."
            echo "::set-output name=proceed::false"
          fi

  dockerize:
    needs: check-version
    if: needs.check-version.outputs.proceed == 'true'
    runs-on: 
      group: laos
      labels: ubuntu-16-cores
    strategy:
      matrix:
        chain: ["laos-ownership"]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/cache
        with:
          cache-key: build_and_push
      - name: Srtool build
        id: srtool_build
        uses: chevdor/srtool-actions@v0.8.0
        with:
          chain: ${{ matrix.chain }}
          runtime_dir: ownership-chain/runtime
      - name: Summary
        run: |
          echo '${{ steps.srtool_build.outputs.json }}' | jq . > ${{ matrix.chain }}-srtool-digest.json
          cat ${{ matrix.chain }}-srtool-digest.json
          echo "Runtime location: ${{ steps.srtool_build.outputs.wasm }}"
      - name: Archive Runtime
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.chain }}-runtime-${{ github.sha }}
          path: |
            ${{ steps.srtool_build.outputs.wasm }}
            ${{ matrix.chain }}-srtool-digest.json
      