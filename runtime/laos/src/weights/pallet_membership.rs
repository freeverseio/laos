
//! Autogenerated weights for `pallet_membership`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 42.0.1
//! DATE: 2024-12-17, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `giove`, CPU: `AMD Ryzen 7 5700G with Radeon Graphics`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: 1024

// Executed Command:
// ./target/release/laos
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_membership
// --extrinsic=*
// --wasm-execution=compiled
// --output=./runtime/laos/src/weights/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_membership`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_membership::WeightInfo for WeightInfo<T> {
	/// Storage: `TechnicalCommitteeMembership::Members` (r:1 w:1)
	/// Proof: `TechnicalCommitteeMembership::Members` (`max_values`: Some(1), `max_size`: Some(101), added: 596, mode: `MaxEncodedLen`)
	/// Storage: `TechnicalCommittee::Proposals` (r:1 w:0)
	/// Proof: `TechnicalCommittee::Proposals` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TechnicalCommittee::Members` (r:0 w:1)
	/// Proof: `TechnicalCommittee::Members` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TechnicalCommittee::Prime` (r:0 w:1)
	/// Proof: `TechnicalCommittee::Prime` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `m` is `[1, 4]`.
	fn add_member(m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `165 + m * (42 ±0)`
		//  Estimated: `1651 + m * (42 ±0)`
		// Minimum execution time: 13_689_000 picoseconds.
		Weight::from_parts(14_411_274, 0)
			.saturating_add(Weight::from_parts(0, 1651))
			// Standard Error: 8_942
			.saturating_add(Weight::from_parts(192_831, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(3))
			.saturating_add(Weight::from_parts(0, 42).saturating_mul(m.into()))
	}
	/// Storage: `TechnicalCommitteeMembership::Members` (r:1 w:1)
	/// Proof: `TechnicalCommitteeMembership::Members` (`max_values`: Some(1), `max_size`: Some(101), added: 596, mode: `MaxEncodedLen`)
	/// Storage: `TechnicalCommittee::Proposals` (r:1 w:0)
	/// Proof: `TechnicalCommittee::Proposals` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TechnicalCommitteeMembership::Prime` (r:1 w:0)
	/// Proof: `TechnicalCommitteeMembership::Prime` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	/// Storage: `TechnicalCommittee::Members` (r:0 w:1)
	/// Proof: `TechnicalCommittee::Members` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TechnicalCommittee::Prime` (r:0 w:1)
	/// Proof: `TechnicalCommittee::Prime` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `m` is `[2, 5]`.
	fn remove_member(m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `249 + m * (41 ±0)`
		//  Estimated: `1734 + m * (41 ±0)`
		// Minimum execution time: 15_365_000 picoseconds.
		Weight::from_parts(16_875_242, 0)
			.saturating_add(Weight::from_parts(0, 1734))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
			.saturating_add(Weight::from_parts(0, 41).saturating_mul(m.into()))
	}
	/// Storage: `TechnicalCommitteeMembership::Members` (r:1 w:1)
	/// Proof: `TechnicalCommitteeMembership::Members` (`max_values`: Some(1), `max_size`: Some(101), added: 596, mode: `MaxEncodedLen`)
	/// Storage: `TechnicalCommittee::Proposals` (r:1 w:0)
	/// Proof: `TechnicalCommittee::Proposals` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TechnicalCommitteeMembership::Prime` (r:1 w:0)
	/// Proof: `TechnicalCommitteeMembership::Prime` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	/// Storage: `TechnicalCommittee::Members` (r:0 w:1)
	/// Proof: `TechnicalCommittee::Members` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TechnicalCommittee::Prime` (r:0 w:1)
	/// Proof: `TechnicalCommittee::Prime` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `m` is `[2, 5]`.
	fn swap_member(m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `249 + m * (41 ±0)`
		//  Estimated: `1734 + m * (41 ±0)`
		// Minimum execution time: 15_785_000 picoseconds.
		Weight::from_parts(16_692_209, 0)
			.saturating_add(Weight::from_parts(0, 1734))
			// Standard Error: 8_964
			.saturating_add(Weight::from_parts(47_157, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
			.saturating_add(Weight::from_parts(0, 41).saturating_mul(m.into()))
	}
	/// Storage: `TechnicalCommitteeMembership::Members` (r:1 w:1)
	/// Proof: `TechnicalCommitteeMembership::Members` (`max_values`: Some(1), `max_size`: Some(101), added: 596, mode: `MaxEncodedLen`)
	/// Storage: `TechnicalCommittee::Proposals` (r:1 w:0)
	/// Proof: `TechnicalCommittee::Proposals` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TechnicalCommitteeMembership::Prime` (r:1 w:0)
	/// Proof: `TechnicalCommitteeMembership::Prime` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	/// Storage: `TechnicalCommittee::Members` (r:0 w:1)
	/// Proof: `TechnicalCommittee::Members` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TechnicalCommittee::Prime` (r:0 w:1)
	/// Proof: `TechnicalCommittee::Prime` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `m` is `[1, 5]`.
	fn reset_members(m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `245 + m * (42 ±0)`
		//  Estimated: `1731 + m * (42 ±0)`
		// Minimum execution time: 15_226_000 picoseconds.
		Weight::from_parts(16_266_756, 0)
			.saturating_add(Weight::from_parts(0, 1731))
			// Standard Error: 13_079
			.saturating_add(Weight::from_parts(280_544, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
			.saturating_add(Weight::from_parts(0, 42).saturating_mul(m.into()))
	}
	/// Storage: `TechnicalCommitteeMembership::Members` (r:1 w:1)
	/// Proof: `TechnicalCommitteeMembership::Members` (`max_values`: Some(1), `max_size`: Some(101), added: 596, mode: `MaxEncodedLen`)
	/// Storage: `TechnicalCommittee::Proposals` (r:1 w:0)
	/// Proof: `TechnicalCommittee::Proposals` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TechnicalCommitteeMembership::Prime` (r:1 w:1)
	/// Proof: `TechnicalCommitteeMembership::Prime` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	/// Storage: `TechnicalCommittee::Members` (r:0 w:1)
	/// Proof: `TechnicalCommittee::Members` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `TechnicalCommittee::Prime` (r:0 w:1)
	/// Proof: `TechnicalCommittee::Prime` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `m` is `[1, 5]`.
	fn change_key(m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `245 + m * (42 ±0)`
		//  Estimated: `1731 + m * (42 ±0)`
		// Minimum execution time: 16_063_000 picoseconds.
		Weight::from_parts(16_850_820, 0)
			.saturating_add(Weight::from_parts(0, 1731))
			// Standard Error: 7_531
			.saturating_add(Weight::from_parts(104_711, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(4))
			.saturating_add(Weight::from_parts(0, 42).saturating_mul(m.into()))
	}
	/// Storage: `TechnicalCommitteeMembership::Members` (r:1 w:0)
	/// Proof: `TechnicalCommitteeMembership::Members` (`max_values`: Some(1), `max_size`: Some(101), added: 596, mode: `MaxEncodedLen`)
	/// Storage: `TechnicalCommitteeMembership::Prime` (r:0 w:1)
	/// Proof: `TechnicalCommitteeMembership::Prime` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	/// Storage: `TechnicalCommittee::Prime` (r:0 w:1)
	/// Proof: `TechnicalCommittee::Prime` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `m` is `[1, 5]`.
	fn set_prime(m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `138 + m * (21 ±0)`
		//  Estimated: `1586 + m * (21 ±0)`
		// Minimum execution time: 8_101_000 picoseconds.
		Weight::from_parts(8_954_433, 0)
			.saturating_add(Weight::from_parts(0, 1586))
			// Standard Error: 5_220
			.saturating_add(Weight::from_parts(81_136, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(2))
			.saturating_add(Weight::from_parts(0, 21).saturating_mul(m.into()))
	}
	/// Storage: `TechnicalCommitteeMembership::Prime` (r:0 w:1)
	/// Proof: `TechnicalCommitteeMembership::Prime` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	/// Storage: `TechnicalCommittee::Prime` (r:0 w:1)
	/// Proof: `TechnicalCommittee::Prime` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn clear_prime() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 3_771_000 picoseconds.
		Weight::from_parts(4_191_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(2))
	}
}
