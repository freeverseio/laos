[
  1635018093,
  {
    "V15": {
      "types": {
        "types": [
          {
            "id": 0,
            "type": {
              "path": [
                "fp_account",
                "AccountId20"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 1,
                      "typeName": "[u8; 20]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 1,
            "type": {
              "def": {
                "array": {
                  "len": 20,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 2,
            "type": {
              "def": {
                "primitive": "u8"
              }
            }
          },
          {
            "id": 3,
            "type": {
              "path": [
                "frame_system",
                "AccountInfo"
              ],
              "params": [
                {
                  "name": "Nonce",
                  "type": 4
                },
                {
                  "name": "AccountData",
                  "type": 5
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "nonce",
                      "type": 4,
                      "typeName": "Nonce"
                    },
                    {
                      "name": "consumers",
                      "type": 4,
                      "typeName": "RefCount"
                    },
                    {
                      "name": "providers",
                      "type": 4,
                      "typeName": "RefCount"
                    },
                    {
                      "name": "sufficients",
                      "type": 4,
                      "typeName": "RefCount"
                    },
                    {
                      "name": "data",
                      "type": 5,
                      "typeName": "AccountData"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 4,
            "type": {
              "def": {
                "primitive": "u32"
              }
            }
          },
          {
            "id": 5,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "AccountData"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "free",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "reserved",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "frozen",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "flags",
                      "type": 7,
                      "typeName": "ExtraFlags"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 6,
            "type": {
              "def": {
                "primitive": "u128"
              }
            }
          },
          {
            "id": 7,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "ExtraFlags"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 6,
                      "typeName": "u128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 8,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 9
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 9,
                      "typeName": "T"
                    },
                    {
                      "name": "operational",
                      "type": 9,
                      "typeName": "T"
                    },
                    {
                      "name": "mandatory",
                      "type": 9,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 9,
            "type": {
              "path": [
                "sp_weights",
                "weight_v2",
                "Weight"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ref_time",
                      "type": 10,
                      "typeName": "u64"
                    },
                    {
                      "name": "proof_size",
                      "type": 10,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 10,
            "type": {
              "def": {
                "compact": {
                  "type": 11
                }
              }
            }
          },
          {
            "id": 11,
            "type": {
              "def": {
                "primitive": "u64"
              }
            }
          },
          {
            "id": 12,
            "type": {
              "path": [
                "primitive_types",
                "H256"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 13,
            "type": {
              "def": {
                "array": {
                  "len": 32,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 14,
            "type": {
              "def": {
                "sequence": {
                  "type": 2
                }
              }
            }
          },
          {
            "id": 15,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "Digest"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "logs",
                      "type": 16,
                      "typeName": "Vec<DigestItem>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 16,
            "type": {
              "def": {
                "sequence": {
                  "type": 17
                }
              }
            }
          },
          {
            "id": 17,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "DigestItem"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PreRuntime",
                      "fields": [
                        {
                          "type": 18,
                          "typeName": "ConsensusEngineId"
                        },
                        {
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Consensus",
                      "fields": [
                        {
                          "type": 18,
                          "typeName": "ConsensusEngineId"
                        },
                        {
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Seal",
                      "fields": [
                        {
                          "type": 18,
                          "typeName": "ConsensusEngineId"
                        },
                        {
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Other",
                      "fields": [
                        {
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "RuntimeEnvironmentUpdated",
                      "index": 8
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 18,
            "type": {
              "def": {
                "array": {
                  "len": 4,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 19,
            "type": {
              "def": {
                "sequence": {
                  "type": 20
                }
              }
            }
          },
          {
            "id": 20,
            "type": {
              "path": [
                "frame_system",
                "EventRecord"
              ],
              "params": [
                {
                  "name": "E",
                  "type": 21
                },
                {
                  "name": "T",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "phase",
                      "type": 135,
                      "typeName": "Phase"
                    },
                    {
                      "name": "event",
                      "type": 21,
                      "typeName": "E"
                    },
                    {
                      "name": "topics",
                      "type": 126,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 21,
            "type": {
              "path": [
                "laos_runtime",
                "RuntimeEvent"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "type": 22,
                          "typeName": "frame_system::Event<Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ParachainSystem",
                      "fields": [
                        {
                          "type": 31,
                          "typeName": "cumulus_pallet_parachain_system::Event<Runtime>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Sudo",
                      "fields": [
                        {
                          "type": 33,
                          "typeName": "pallet_sudo::Event<Runtime>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "type": 37,
                          "typeName": "pallet_utility::Event"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Multisig",
                      "fields": [
                        {
                          "type": 38,
                          "typeName": "pallet_multisig::Event<Runtime>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Proxy",
                      "fields": [
                        {
                          "type": 40,
                          "typeName": "pallet_proxy::Event<Runtime>"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "type": 43,
                          "typeName": "pallet_balances::Event<Runtime>"
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "TransactionPayment",
                      "fields": [
                        {
                          "type": 45,
                          "typeName": "pallet_transaction_payment::Event<Runtime>"
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "Vesting",
                      "fields": [
                        {
                          "type": 46,
                          "typeName": "pallet_vesting::Event<Runtime>"
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "type": 47,
                          "typeName": "pallet_session::Event"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "ParachainStaking",
                      "fields": [
                        {
                          "type": 48,
                          "typeName": "pallet_parachain_staking::Event<Runtime>"
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "XcmpQueue",
                      "fields": [
                        {
                          "type": 55,
                          "typeName": "cumulus_pallet_xcmp_queue::Event<Runtime>"
                        }
                      ],
                      "index": 30
                    },
                    {
                      "name": "PolkadotXcm",
                      "fields": [
                        {
                          "type": 58,
                          "typeName": "pallet_xcm::Event<Runtime>"
                        }
                      ],
                      "index": 31
                    },
                    {
                      "name": "CumulusXcm",
                      "fields": [
                        {
                          "type": 112,
                          "typeName": "cumulus_pallet_xcm::Event<Runtime>"
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "DmpQueue",
                      "fields": [
                        {
                          "type": 113,
                          "typeName": "cumulus_pallet_dmp_queue::Event<Runtime>"
                        }
                      ],
                      "index": 33
                    },
                    {
                      "name": "Ethereum",
                      "fields": [
                        {
                          "type": 114,
                          "typeName": "pallet_ethereum::Event"
                        }
                      ],
                      "index": 50
                    },
                    {
                      "name": "EVM",
                      "fields": [
                        {
                          "type": 124,
                          "typeName": "pallet_evm::Event<Runtime>"
                        }
                      ],
                      "index": 51
                    },
                    {
                      "name": "BaseFee",
                      "fields": [
                        {
                          "type": 127,
                          "typeName": "pallet_base_fee::Event"
                        }
                      ],
                      "index": 53
                    },
                    {
                      "name": "LaosEvolution",
                      "fields": [
                        {
                          "type": 131,
                          "typeName": "pallet_laos_evolution::Event<Runtime>"
                        }
                      ],
                      "index": 100
                    },
                    {
                      "name": "AssetMetadataExtender",
                      "fields": [
                        {
                          "type": 133,
                          "typeName": "pallet_asset_metadata_extender::Event<Runtime>"
                        }
                      ],
                      "index": 101
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 22,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ExtrinsicSuccess",
                      "fields": [
                        {
                          "name": "dispatch_info",
                          "type": 23,
                          "typeName": "DispatchInfo"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An extrinsic completed successfully."
                      ]
                    },
                    {
                      "name": "ExtrinsicFailed",
                      "fields": [
                        {
                          "name": "dispatch_error",
                          "type": 26,
                          "typeName": "DispatchError"
                        },
                        {
                          "name": "dispatch_info",
                          "type": 23,
                          "typeName": "DispatchInfo"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An extrinsic failed."
                      ]
                    },
                    {
                      "name": "CodeUpdated",
                      "index": 2,
                      "docs": [
                        "`:code` was updated."
                      ]
                    },
                    {
                      "name": "NewAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A new account was created."
                      ]
                    },
                    {
                      "name": "KilledAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An account was reaped."
                      ]
                    },
                    {
                      "name": "Remarked",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "On on-chain remark happened."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Event for the System pallet."
              ]
            }
          },
          {
            "id": 23,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "DispatchInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "weight",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "class",
                      "type": 24,
                      "typeName": "DispatchClass"
                    },
                    {
                      "name": "pays_fee",
                      "type": 25,
                      "typeName": "Pays"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 24,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "DispatchClass"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Normal",
                      "index": 0
                    },
                    {
                      "name": "Operational",
                      "index": 1
                    },
                    {
                      "name": "Mandatory",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 25,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "Pays"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Yes",
                      "index": 0
                    },
                    {
                      "name": "No",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 26,
            "type": {
              "path": [
                "sp_runtime",
                "DispatchError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Other",
                      "index": 0
                    },
                    {
                      "name": "CannotLookup",
                      "index": 1
                    },
                    {
                      "name": "BadOrigin",
                      "index": 2
                    },
                    {
                      "name": "Module",
                      "fields": [
                        {
                          "type": 27,
                          "typeName": "ModuleError"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "ConsumerRemaining",
                      "index": 4
                    },
                    {
                      "name": "NoProviders",
                      "index": 5
                    },
                    {
                      "name": "TooManyConsumers",
                      "index": 6
                    },
                    {
                      "name": "Token",
                      "fields": [
                        {
                          "type": 28,
                          "typeName": "TokenError"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Arithmetic",
                      "fields": [
                        {
                          "type": 29,
                          "typeName": "ArithmeticError"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "Transactional",
                      "fields": [
                        {
                          "type": 30,
                          "typeName": "TransactionalError"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "Exhausted",
                      "index": 10
                    },
                    {
                      "name": "Corruption",
                      "index": 11
                    },
                    {
                      "name": "Unavailable",
                      "index": 12
                    },
                    {
                      "name": "RootNotAllowed",
                      "index": 13
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 27,
            "type": {
              "path": [
                "sp_runtime",
                "ModuleError"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 2,
                      "typeName": "u8"
                    },
                    {
                      "name": "error",
                      "type": 18,
                      "typeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 28,
            "type": {
              "path": [
                "sp_runtime",
                "TokenError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FundsUnavailable",
                      "index": 0
                    },
                    {
                      "name": "OnlyProvider",
                      "index": 1
                    },
                    {
                      "name": "BelowMinimum",
                      "index": 2
                    },
                    {
                      "name": "CannotCreate",
                      "index": 3
                    },
                    {
                      "name": "UnknownAsset",
                      "index": 4
                    },
                    {
                      "name": "Frozen",
                      "index": 5
                    },
                    {
                      "name": "Unsupported",
                      "index": 6
                    },
                    {
                      "name": "CannotCreateHold",
                      "index": 7
                    },
                    {
                      "name": "NotExpendable",
                      "index": 8
                    },
                    {
                      "name": "Blocked",
                      "index": 9
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 29,
            "type": {
              "path": [
                "sp_arithmetic",
                "ArithmeticError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Underflow",
                      "index": 0
                    },
                    {
                      "name": "Overflow",
                      "index": 1
                    },
                    {
                      "name": "DivisionByZero",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 30,
            "type": {
              "path": [
                "sp_runtime",
                "TransactionalError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "LimitReached",
                      "index": 0
                    },
                    {
                      "name": "NoLayer",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 31,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ValidationFunctionStored",
                      "index": 0,
                      "docs": [
                        "The validation function has been scheduled to apply."
                      ]
                    },
                    {
                      "name": "ValidationFunctionApplied",
                      "fields": [
                        {
                          "name": "relay_chain_block_num",
                          "type": 4,
                          "typeName": "RelayChainBlockNumber"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The validation function was applied as of the contained relay chain block number."
                      ]
                    },
                    {
                      "name": "ValidationFunctionDiscarded",
                      "index": 2,
                      "docs": [
                        "The relay-chain aborted the upgrade process."
                      ]
                    },
                    {
                      "name": "UpgradeAuthorized",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "An upgrade has been authorized."
                      ]
                    },
                    {
                      "name": "DownwardMessagesReceived",
                      "fields": [
                        {
                          "name": "count",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some downward messages have been received and will be processed."
                      ]
                    },
                    {
                      "name": "DownwardMessagesProcessed",
                      "fields": [
                        {
                          "name": "weight_used",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "dmq_head",
                          "type": 12,
                          "typeName": "relay_chain::Hash"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Downward messages were processed using the given weight."
                      ]
                    },
                    {
                      "name": "UpwardMessageSent",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 32,
                          "typeName": "Option<XcmHash>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "An upward message was sent to the relay chain."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 32,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 13
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 13
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 33,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Sudid",
                      "fields": [
                        {
                          "name": "sudo_result",
                          "type": 34,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A sudo just took place. \\[result\\]"
                      ]
                    },
                    {
                      "name": "KeyChanged",
                      "fields": [
                        {
                          "name": "old_sudoer",
                          "type": 36,
                          "typeName": "Option<T::AccountId>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The \\[sudoer\\] just switched identity; the old key is supplied if one existed."
                      ]
                    },
                    {
                      "name": "SudoAsDone",
                      "fields": [
                        {
                          "name": "sudo_result",
                          "type": 34,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A sudo just took place. \\[result\\]"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 34,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 35
                },
                {
                  "name": "E",
                  "type": 26
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 35
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 26
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 35,
            "type": {
              "def": {
                "tuple": []
              }
            }
          },
          {
            "id": 36,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 0
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 37,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Event"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BatchInterrupted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "error",
                          "type": 26,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
                        "well as the error."
                      ]
                    },
                    {
                      "name": "BatchCompleted",
                      "index": 1,
                      "docs": [
                        "Batch of dispatches completed fully with no error."
                      ]
                    },
                    {
                      "name": "BatchCompletedWithErrors",
                      "index": 2,
                      "docs": [
                        "Batch of dispatches completed but has errors."
                      ]
                    },
                    {
                      "name": "ItemCompleted",
                      "index": 3,
                      "docs": [
                        "A single item within a Batch of dispatches has completed with no error."
                      ]
                    },
                    {
                      "name": "ItemFailed",
                      "fields": [
                        {
                          "name": "error",
                          "type": 26,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A single item within a Batch of dispatches has completed with error."
                      ]
                    },
                    {
                      "name": "DispatchedAs",
                      "fields": [
                        {
                          "name": "result",
                          "type": 34,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A call was dispatched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 38,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewMultisig",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "call_hash",
                          "type": 13,
                          "typeName": "CallHash"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new multisig operation has begun."
                      ]
                    },
                    {
                      "name": "MultisigApproval",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "timepoint",
                          "type": 39,
                          "typeName": "Timepoint<BlockNumberFor<T>>"
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "call_hash",
                          "type": 13,
                          "typeName": "CallHash"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A multisig operation has been approved by someone."
                      ]
                    },
                    {
                      "name": "MultisigExecuted",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "timepoint",
                          "type": 39,
                          "typeName": "Timepoint<BlockNumberFor<T>>"
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "call_hash",
                          "type": 13,
                          "typeName": "CallHash"
                        },
                        {
                          "name": "result",
                          "type": 34,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A multisig operation has been executed."
                      ]
                    },
                    {
                      "name": "MultisigCancelled",
                      "fields": [
                        {
                          "name": "cancelling",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "timepoint",
                          "type": 39,
                          "typeName": "Timepoint<BlockNumberFor<T>>"
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "call_hash",
                          "type": 13,
                          "typeName": "CallHash"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A multisig operation has been cancelled."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 39,
            "type": {
              "path": [
                "pallet_multisig",
                "Timepoint"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "height",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "index",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 40,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ProxyExecuted",
                      "fields": [
                        {
                          "name": "result",
                          "type": 34,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A proxy was executed correctly, with the given."
                      ]
                    },
                    {
                      "name": "PureCreated",
                      "fields": [
                        {
                          "name": "pure",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "proxy_type",
                          "type": 41,
                          "typeName": "T::ProxyType"
                        },
                        {
                          "name": "disambiguation_index",
                          "type": 42,
                          "typeName": "u16"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A pure account has been created by new proxy with given",
                        "disambiguation index and proxy type."
                      ]
                    },
                    {
                      "name": "Announced",
                      "fields": [
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "proxy",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "An announcement was placed to make a call in the future."
                      ]
                    },
                    {
                      "name": "ProxyAdded",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "delegatee",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "proxy_type",
                          "type": 41,
                          "typeName": "T::ProxyType"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A proxy was added."
                      ]
                    },
                    {
                      "name": "ProxyRemoved",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "delegatee",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "proxy_type",
                          "type": 41,
                          "typeName": "T::ProxyType"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A proxy was removed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 41,
            "type": {
              "path": [
                "laos_runtime",
                "configs",
                "proxy",
                "ProxyType"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Any",
                      "index": 0
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 42,
            "type": {
              "def": {
                "primitive": "u16"
              }
            }
          },
          {
            "id": 43,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Endowed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "free_balance",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An account was created with some free balance."
                      ]
                    },
                    {
                      "name": "DustLost",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An account was removed whose balance was non-zero but below ExistentialDeposit,",
                        "resulting in an outright loss."
                      ]
                    },
                    {
                      "name": "Transfer",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Transfer succeeded."
                      ]
                    },
                    {
                      "name": "BalanceSet",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "free",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A balance was set by root."
                      ]
                    },
                    {
                      "name": "Reserved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some balance was reserved (moved from free to reserved)."
                      ]
                    },
                    {
                      "name": "Unreserved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Some balance was unreserved (moved from reserved to free)."
                      ]
                    },
                    {
                      "name": "ReserveRepatriated",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        },
                        {
                          "name": "destination_status",
                          "type": 44,
                          "typeName": "Status"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some balance was moved from the reserve of the first account to the second account.",
                        "Final argument indicates the destination balance type."
                      ]
                    },
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Some amount was deposited (e.g. for transaction fees)."
                      ]
                    },
                    {
                      "name": "Withdraw",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Some amount was withdrawn from the account (e.g. for transaction fees)."
                      ]
                    },
                    {
                      "name": "Slashed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some amount was removed from the account (e.g. for misbehavior)."
                      ]
                    },
                    {
                      "name": "Minted",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Some amount was minted into an account."
                      ]
                    },
                    {
                      "name": "Burned",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Some amount was burned from an account."
                      ]
                    },
                    {
                      "name": "Suspended",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "Some amount was suspended from an account (it can be restored later)."
                      ]
                    },
                    {
                      "name": "Restored",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "Some amount was restored into an account."
                      ]
                    },
                    {
                      "name": "Upgraded",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "An account was upgraded."
                      ]
                    },
                    {
                      "name": "Issued",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Total issuance was increased by `amount`, creating a credit to be balanced."
                      ]
                    },
                    {
                      "name": "Rescinded",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Total issuance was decreased by `amount`, creating a debt to be balanced."
                      ]
                    },
                    {
                      "name": "Locked",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "Some balance was locked."
                      ]
                    },
                    {
                      "name": "Unlocked",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "Some balance was unlocked."
                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "Some balance was frozen."
                      ]
                    },
                    {
                      "name": "Thawed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "Some balance was thawed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 44,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "tokens",
                "misc",
                "BalanceStatus"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Free",
                      "index": 0
                    },
                    {
                      "name": "Reserved",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 45,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TransactionFeePaid",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "actual_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "tip",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                        "has been paid by `who`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 46,
            "type": {
              "path": [
                "pallet_vesting",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VestingUpdated",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "unvested",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "The amount vested has been updated. This could indicate a change in funds available.",
                        "The balance given is the amount which is left unvested (and thus locked)."
                      ]
                    },
                    {
                      "name": "VestingCompleted",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An \\[account\\] has become fully vested."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 47,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Event"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewSession",
                      "fields": [
                        {
                          "name": "session_index",
                          "type": 4,
                          "typeName": "SessionIndex"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New session has happened. Note that the argument is the session index, not the",
                        "block number as the type might suggest."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 48,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewRound",
                      "fields": [
                        {
                          "name": "starting_block",
                          "type": 11,
                          "typeName": "u64"
                        },
                        {
                          "name": "round",
                          "type": 4,
                          "typeName": "RoundIndex"
                        },
                        {
                          "name": "selected_collators_number",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "total_balance",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Started new round."
                      ]
                    },
                    {
                      "name": "JoinedCollatorCandidates",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount_locked",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "new_total_amt_locked",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Account joined the set of collator candidates."
                      ]
                    },
                    {
                      "name": "CollatorChosen",
                      "fields": [
                        {
                          "name": "round",
                          "type": 4,
                          "typeName": "RoundIndex"
                        },
                        {
                          "name": "collator_account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "total_exposed_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Candidate selected for collators. Total Exposed Amount includes all delegations."
                      ]
                    },
                    {
                      "name": "CandidateBondLessRequested",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount_to_decrease",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "execute_round",
                          "type": 4,
                          "typeName": "RoundIndex"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Candidate requested to decrease a self bond."
                      ]
                    },
                    {
                      "name": "CandidateBondedMore",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "new_total_bond",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Candidate has increased a self bond."
                      ]
                    },
                    {
                      "name": "CandidateBondedLess",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "new_bond",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Candidate has decreased a self bond."
                      ]
                    },
                    {
                      "name": "CandidateWentOffline",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Candidate temporarily leave the set of collator candidates without unbonding."
                      ]
                    },
                    {
                      "name": "CandidateBackOnline",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Candidate rejoins the set of collator candidates."
                      ]
                    },
                    {
                      "name": "CandidateScheduledExit",
                      "fields": [
                        {
                          "name": "exit_allowed_round",
                          "type": 4,
                          "typeName": "RoundIndex"
                        },
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "scheduled_exit",
                          "type": 4,
                          "typeName": "RoundIndex"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Candidate has requested to leave the set of candidates."
                      ]
                    },
                    {
                      "name": "CancelledCandidateExit",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Cancelled request to leave the set of candidates."
                      ]
                    },
                    {
                      "name": "CancelledCandidateBondLess",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "execute_round",
                          "type": 4,
                          "typeName": "RoundIndex"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Cancelled request to decrease candidate's bond."
                      ]
                    },
                    {
                      "name": "CandidateLeft",
                      "fields": [
                        {
                          "name": "ex_candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "unlocked_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "new_total_amt_locked",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Candidate has left the set of candidates."
                      ]
                    },
                    {
                      "name": "DelegationDecreaseScheduled",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount_to_decrease",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "execute_round",
                          "type": 4,
                          "typeName": "RoundIndex"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "Delegator requested to decrease a bond for the collator candidate."
                      ]
                    },
                    {
                      "name": "DelegationIncreased",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "in_top",
                          "type": 49,
                          "typeName": "bool"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "DelegationDecreased",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "in_top",
                          "type": 49,
                          "typeName": "bool"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "DelegatorExitScheduled",
                      "fields": [
                        {
                          "name": "round",
                          "type": 4,
                          "typeName": "RoundIndex"
                        },
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "scheduled_exit",
                          "type": 4,
                          "typeName": "RoundIndex"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Delegator requested to leave the set of delegators."
                      ]
                    },
                    {
                      "name": "DelegationRevocationScheduled",
                      "fields": [
                        {
                          "name": "round",
                          "type": 4,
                          "typeName": "RoundIndex"
                        },
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "scheduled_exit",
                          "type": 4,
                          "typeName": "RoundIndex"
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Delegator requested to revoke delegation."
                      ]
                    },
                    {
                      "name": "DelegatorLeft",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "unstaked_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "Delegator has left the set of delegators."
                      ]
                    },
                    {
                      "name": "DelegationRevoked",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "unstaked_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "Delegation revoked."
                      ]
                    },
                    {
                      "name": "DelegationKicked",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "unstaked_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "Delegation kicked."
                      ]
                    },
                    {
                      "name": "DelegatorExitCancelled",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "Cancelled a pending request to exit the set of delegators."
                      ]
                    },
                    {
                      "name": "CancelledDelegationRequest",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "cancelled_request",
                          "type": 50,
                          "typeName": "CancelledScheduledRequest<BalanceOf<T>>"
                        },
                        {
                          "name": "collator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "Cancelled request to change an existing delegation."
                      ]
                    },
                    {
                      "name": "Delegation",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "locked_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "delegator_position",
                          "type": 52,
                          "typeName": "DelegatorAdded<BalanceOf<T>>"
                        },
                        {
                          "name": "auto_compound",
                          "type": 53,
                          "typeName": "Percent"
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "New delegation (increase of the existing one)."
                      ]
                    },
                    {
                      "name": "DelegatorLeftCandidate",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "unstaked_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "total_candidate_staked",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "Delegation from candidate state has been remove."
                      ]
                    },
                    {
                      "name": "Rewarded",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "rewards",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "Paid the account (delegator or collator) the balance as liquid rewards."
                      ]
                    },
                    {
                      "name": "ReservedForParachainBond",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "Transferred to account which holds funds reserved for parachain bond."
                      ]
                    },
                    {
                      "name": "ParachainBondAccountSet",
                      "fields": [
                        {
                          "name": "old",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "new",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 26,
                      "docs": [
                        "Account (re)set for parachain bond treasury."
                      ]
                    },
                    {
                      "name": "ParachainBondReservePercentSet",
                      "fields": [
                        {
                          "name": "old",
                          "type": 53,
                          "typeName": "Percent"
                        },
                        {
                          "name": "new",
                          "type": 53,
                          "typeName": "Percent"
                        }
                      ],
                      "index": 27,
                      "docs": [
                        "Percent of inflation reserved for parachain bond (re)set."
                      ]
                    },
                    {
                      "name": "InflationSet",
                      "fields": [
                        {
                          "name": "annual_min",
                          "type": 54,
                          "typeName": "Perbill"
                        },
                        {
                          "name": "annual_ideal",
                          "type": 54,
                          "typeName": "Perbill"
                        },
                        {
                          "name": "annual_max",
                          "type": 54,
                          "typeName": "Perbill"
                        },
                        {
                          "name": "round_min",
                          "type": 54,
                          "typeName": "Perbill"
                        },
                        {
                          "name": "round_ideal",
                          "type": 54,
                          "typeName": "Perbill"
                        },
                        {
                          "name": "round_max",
                          "type": 54,
                          "typeName": "Perbill"
                        }
                      ],
                      "index": 28,
                      "docs": [
                        "Annual inflation input (first 3) was used to derive new per-round inflation (last 3)"
                      ]
                    },
                    {
                      "name": "StakeExpectationsSet",
                      "fields": [
                        {
                          "name": "expect_min",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "expect_ideal",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "expect_max",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 29,
                      "docs": [
                        "Staking expectations set."
                      ]
                    },
                    {
                      "name": "TotalSelectedSet",
                      "fields": [
                        {
                          "name": "old",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 30,
                      "docs": [
                        "Set total selected candidates to this value."
                      ]
                    },
                    {
                      "name": "CollatorCommissionSet",
                      "fields": [
                        {
                          "name": "old",
                          "type": 54,
                          "typeName": "Perbill"
                        },
                        {
                          "name": "new",
                          "type": 54,
                          "typeName": "Perbill"
                        }
                      ],
                      "index": 31,
                      "docs": [
                        "Set collator commission to this value."
                      ]
                    },
                    {
                      "name": "BlocksPerRoundSet",
                      "fields": [
                        {
                          "name": "current_round",
                          "type": 4,
                          "typeName": "RoundIndex"
                        },
                        {
                          "name": "first_block",
                          "type": 11,
                          "typeName": "u64"
                        },
                        {
                          "name": "old",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "new_per_round_inflation_min",
                          "type": 54,
                          "typeName": "Perbill"
                        },
                        {
                          "name": "new_per_round_inflation_ideal",
                          "type": 54,
                          "typeName": "Perbill"
                        },
                        {
                          "name": "new_per_round_inflation_max",
                          "type": 54,
                          "typeName": "Perbill"
                        }
                      ],
                      "index": 32,
                      "docs": [
                        "Set blocks per round"
                      ]
                    },
                    {
                      "name": "AutoCompoundSet",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "value",
                          "type": 53,
                          "typeName": "Percent"
                        }
                      ],
                      "index": 33,
                      "docs": [
                        "Auto-compounding reward percent was set for a delegation."
                      ]
                    },
                    {
                      "name": "Compounded",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 34,
                      "docs": [
                        "Compounded a portion of rewards towards the delegation."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 49,
            "type": {
              "def": {
                "primitive": "bool"
              }
            }
          },
          {
            "id": 50,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "delegation_requests",
                "CancelledScheduledRequest"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "when_executable",
                      "type": 4,
                      "typeName": "RoundIndex"
                    },
                    {
                      "name": "action",
                      "type": 51,
                      "typeName": "DelegationAction<Balance>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 51,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "delegation_requests",
                "DelegationAction"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Revoke",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "Balance"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Decrease",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "Balance"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 52,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "types",
                "DelegatorAdded"
              ],
              "params": [
                {
                  "name": "B",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AddedToTop",
                      "fields": [
                        {
                          "name": "new_total",
                          "type": 6,
                          "typeName": "B"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "AddedToBottom",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 53,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Percent"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 2,
                      "typeName": "u8"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 54,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Perbill"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 55,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Success",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash"
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash"
                        },
                        {
                          "name": "weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Some XCM was executed ok."
                      ]
                    },
                    {
                      "name": "Fail",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash"
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash"
                        },
                        {
                          "name": "error",
                          "type": 56,
                          "typeName": "XcmError"
                        },
                        {
                          "name": "weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Some XCM failed."
                      ]
                    },
                    {
                      "name": "BadVersion",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Bad XCM version used."
                      ]
                    },
                    {
                      "name": "BadFormat",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Bad XCM format used."
                      ]
                    },
                    {
                      "name": "XcmpMessageSent",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An HRMP message was sent to a sibling parachain."
                      ]
                    },
                    {
                      "name": "OverweightEnqueued",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 57,
                          "typeName": "ParaId"
                        },
                        {
                          "name": "sent_at",
                          "type": 4,
                          "typeName": "RelayBlockNumber"
                        },
                        {
                          "name": "index",
                          "type": 11,
                          "typeName": "OverweightIndex"
                        },
                        {
                          "name": "required",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "An XCM exceeded the individual message weight budget."
                      ]
                    },
                    {
                      "name": "OverweightServiced",
                      "fields": [
                        {
                          "name": "index",
                          "type": 11,
                          "typeName": "OverweightIndex"
                        },
                        {
                          "name": "used",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "An XCM from the overweight queue was executed with the given actual weight used."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 56,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "traits",
                "Error"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Overflow",
                      "index": 0
                    },
                    {
                      "name": "Unimplemented",
                      "index": 1
                    },
                    {
                      "name": "UntrustedReserveLocation",
                      "index": 2
                    },
                    {
                      "name": "UntrustedTeleportLocation",
                      "index": 3
                    },
                    {
                      "name": "LocationFull",
                      "index": 4
                    },
                    {
                      "name": "LocationNotInvertible",
                      "index": 5
                    },
                    {
                      "name": "BadOrigin",
                      "index": 6
                    },
                    {
                      "name": "InvalidLocation",
                      "index": 7
                    },
                    {
                      "name": "AssetNotFound",
                      "index": 8
                    },
                    {
                      "name": "FailedToTransactAsset",
                      "index": 9
                    },
                    {
                      "name": "NotWithdrawable",
                      "index": 10
                    },
                    {
                      "name": "LocationCannotHold",
                      "index": 11
                    },
                    {
                      "name": "ExceedsMaxMessageSize",
                      "index": 12
                    },
                    {
                      "name": "DestinationUnsupported",
                      "index": 13
                    },
                    {
                      "name": "Transport",
                      "index": 14
                    },
                    {
                      "name": "Unroutable",
                      "index": 15
                    },
                    {
                      "name": "UnknownClaim",
                      "index": 16
                    },
                    {
                      "name": "FailedToDecode",
                      "index": 17
                    },
                    {
                      "name": "MaxWeightInvalid",
                      "index": 18
                    },
                    {
                      "name": "NotHoldingFees",
                      "index": 19
                    },
                    {
                      "name": "TooExpensive",
                      "index": 20
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "type": 11,
                          "typeName": "u64"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "ExpectationFalse",
                      "index": 22
                    },
                    {
                      "name": "PalletNotFound",
                      "index": 23
                    },
                    {
                      "name": "NameMismatch",
                      "index": 24
                    },
                    {
                      "name": "VersionIncompatible",
                      "index": 25
                    },
                    {
                      "name": "HoldingWouldOverflow",
                      "index": 26
                    },
                    {
                      "name": "ExportError",
                      "index": 27
                    },
                    {
                      "name": "ReanchorFailed",
                      "index": 28
                    },
                    {
                      "name": "NoDeal",
                      "index": 29
                    },
                    {
                      "name": "FeesNotMet",
                      "index": 30
                    },
                    {
                      "name": "LockError",
                      "index": 31
                    },
                    {
                      "name": "NoPermission",
                      "index": 32
                    },
                    {
                      "name": "Unanchored",
                      "index": 33
                    },
                    {
                      "name": "NotDepositable",
                      "index": 34
                    },
                    {
                      "name": "UnhandledXcmVersion",
                      "index": 35
                    },
                    {
                      "name": "WeightLimitReached",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 36
                    },
                    {
                      "name": "Barrier",
                      "index": 37
                    },
                    {
                      "name": "WeightNotComputable",
                      "index": 38
                    },
                    {
                      "name": "ExceedsStackLimit",
                      "index": 39
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 57,
            "type": {
              "path": [
                "polkadot_parachain_primitives",
                "primitives",
                "Id"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 58,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Attempted",
                      "fields": [
                        {
                          "name": "outcome",
                          "type": 59,
                          "typeName": "xcm::latest::Outcome"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Execution of an XCM message was attempted."
                      ]
                    },
                    {
                      "name": "Sent",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "destination",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "message",
                          "type": 69,
                          "typeName": "Xcm<()>"
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A XCM message was sent."
                      ]
                    },
                    {
                      "name": "UnexpectedResponse",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Query response received which does not match a registered query. This may be because a",
                        "matching query was never registered, it may be because it is a duplicate response, or",
                        "because the query timed out."
                      ]
                    },
                    {
                      "name": "ResponseReady",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "response",
                          "type": 80,
                          "typeName": "Response"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Query response has been received and is ready for taking with `take_response`. There is",
                        "no registered notification call."
                      ]
                    },
                    {
                      "name": "Notified",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "pallet_index",
                          "type": 2,
                          "typeName": "u8"
                        },
                        {
                          "name": "call_index",
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Query response has been received and query is removed. The registered notification has",
                        "been dispatched and executed successfully."
                      ]
                    },
                    {
                      "name": "NotifyOverweight",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "pallet_index",
                          "type": 2,
                          "typeName": "u8"
                        },
                        {
                          "name": "call_index",
                          "type": 2,
                          "typeName": "u8"
                        },
                        {
                          "name": "actual_weight",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "max_budgeted_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Query response has been received and query is removed. The registered notification",
                        "could not be dispatched because the dispatch weight is greater than the maximum weight",
                        "originally budgeted by this runtime for the query result."
                      ]
                    },
                    {
                      "name": "NotifyDispatchError",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "pallet_index",
                          "type": 2,
                          "typeName": "u8"
                        },
                        {
                          "name": "call_index",
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Query response has been received and query is removed. There was a general error with",
                        "dispatching the notification call."
                      ]
                    },
                    {
                      "name": "NotifyDecodeFailed",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "pallet_index",
                          "type": 2,
                          "typeName": "u8"
                        },
                        {
                          "name": "call_index",
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Query response has been received and query is removed. The dispatch was unable to be",
                        "decoded into a `Call`; this might be due to dispatch function having a signature which",
                        "is not `(origin, QueryId, Response)`."
                      ]
                    },
                    {
                      "name": "InvalidResponder",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "expected_location",
                          "type": 89,
                          "typeName": "Option<MultiLocation>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Expected query response has been received but the origin location of the response does",
                        "not match that expected. The query remains registered for a later, valid, response to",
                        "be received and acted upon."
                      ]
                    },
                    {
                      "name": "InvalidResponderVersion",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Expected query response has been received but the expected origin location placed in",
                        "storage by this runtime previously cannot be decoded. The query remains registered.",
                        "",
                        "This is unexpected (since a location placed in storage in a previously executing",
                        "runtime should be readable prior to query timeout) and dangerous since the possibly",
                        "valid response will be dropped. Manual governance intervention is probably going to be",
                        "needed."
                      ]
                    },
                    {
                      "name": "ResponseTaken",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Received query response has been read and removed."
                      ]
                    },
                    {
                      "name": "AssetsTrapped",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "origin",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "assets",
                          "type": 97,
                          "typeName": "VersionedMultiAssets"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Some assets have been placed in an asset trap."
                      ]
                    },
                    {
                      "name": "VersionChangeNotified",
                      "fields": [
                        {
                          "name": "destination",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "result",
                          "type": 4,
                          "typeName": "XcmVersion"
                        },
                        {
                          "name": "cost",
                          "type": 72,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "An XCM version change notification message has been attempted to be sent.",
                        "",
                        "The cost of sending it (borne by the chain) is included."
                      ]
                    },
                    {
                      "name": "SupportedVersionChanged",
                      "fields": [
                        {
                          "name": "location",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "version",
                          "type": 4,
                          "typeName": "XcmVersion"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "The supported version of a location has been changed. This might be through an",
                        "automatic notification or a manual intervention."
                      ]
                    },
                    {
                      "name": "NotifyTargetSendFail",
                      "fields": [
                        {
                          "name": "location",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "error",
                          "type": 56,
                          "typeName": "XcmError"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "A given location which had a version change subscription was dropped owing to an error",
                        "sending the notification to it."
                      ]
                    },
                    {
                      "name": "NotifyTargetMigrationFail",
                      "fields": [
                        {
                          "name": "location",
                          "type": 111,
                          "typeName": "VersionedMultiLocation"
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "A given location which had a version change subscription was dropped owing to an error",
                        "migrating the location to our new XCM format."
                      ]
                    },
                    {
                      "name": "InvalidQuerierVersion",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Expected query response has been received but the expected querier location placed in",
                        "storage by this runtime previously cannot be decoded. The query remains registered.",
                        "",
                        "This is unexpected (since a location placed in storage in a previously executing",
                        "runtime should be readable prior to query timeout) and dangerous since the possibly",
                        "valid response will be dropped. Manual governance intervention is probably going to be",
                        "needed."
                      ]
                    },
                    {
                      "name": "InvalidQuerier",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "expected_querier",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "maybe_actual_querier",
                          "type": 89,
                          "typeName": "Option<MultiLocation>"
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "Expected query response has been received but the querier location of the response does",
                        "not match the expected. The query remains registered for a later, valid, response to",
                        "be received and acted upon."
                      ]
                    },
                    {
                      "name": "VersionNotifyStarted",
                      "fields": [
                        {
                          "name": "destination",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "cost",
                          "type": 72,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash"
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "A remote has requested XCM version change notification from us and we have honored it.",
                        "A version information message is sent to them and its cost is included."
                      ]
                    },
                    {
                      "name": "VersionNotifyRequested",
                      "fields": [
                        {
                          "name": "destination",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "cost",
                          "type": 72,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash"
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "We have requested that a remote chain send us XCM version change notifications."
                      ]
                    },
                    {
                      "name": "VersionNotifyUnrequested",
                      "fields": [
                        {
                          "name": "destination",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "cost",
                          "type": 72,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash"
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "We have requested that a remote chain stops sending us XCM version change",
                        "notifications."
                      ]
                    },
                    {
                      "name": "FeesPaid",
                      "fields": [
                        {
                          "name": "paying",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "fees",
                          "type": 72,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "Fees were paid from a location for an operation (often for using `SendXcm`)."
                      ]
                    },
                    {
                      "name": "AssetsClaimed",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "origin",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "assets",
                          "type": 97,
                          "typeName": "VersionedMultiAssets"
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "Some assets have been claimed from an asset trap"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 59,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "traits",
                "Outcome"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Complete",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Incomplete",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "type": 56,
                          "typeName": "Error"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Error",
                      "fields": [
                        {
                          "type": 56,
                          "typeName": "Error"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 60,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multilocation",
                "MultiLocation"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parents",
                      "type": 2,
                      "typeName": "u8"
                    },
                    {
                      "name": "interior",
                      "type": 61,
                      "typeName": "Junctions"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 61,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "junctions",
                "Junctions"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Here",
                      "index": 0
                    },
                    {
                      "name": "X1",
                      "fields": [
                        {
                          "type": 62,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "X2",
                      "fields": [
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "X3",
                      "fields": [
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "X4",
                      "fields": [
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "X5",
                      "fields": [
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "X6",
                      "fields": [
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "X7",
                      "fields": [
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "X8",
                      "fields": [
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        },
                        {
                          "type": 62,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 8
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 62,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "junction",
                "Junction"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Parachain",
                      "fields": [
                        {
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "AccountId32",
                      "fields": [
                        {
                          "name": "network",
                          "type": 64,
                          "typeName": "Option<NetworkId>"
                        },
                        {
                          "name": "id",
                          "type": 13,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "AccountIndex64",
                      "fields": [
                        {
                          "name": "network",
                          "type": 64,
                          "typeName": "Option<NetworkId>"
                        },
                        {
                          "name": "index",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "AccountKey20",
                      "fields": [
                        {
                          "name": "network",
                          "type": 64,
                          "typeName": "Option<NetworkId>"
                        },
                        {
                          "name": "key",
                          "type": 1,
                          "typeName": "[u8; 20]"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "PalletInstance",
                      "fields": [
                        {
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "GeneralIndex",
                      "fields": [
                        {
                          "type": 66,
                          "typeName": "u128"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "GeneralKey",
                      "fields": [
                        {
                          "name": "length",
                          "type": 2,
                          "typeName": "u8"
                        },
                        {
                          "name": "data",
                          "type": 13,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "OnlyChild",
                      "index": 7
                    },
                    {
                      "name": "Plurality",
                      "fields": [
                        {
                          "name": "id",
                          "type": 67,
                          "typeName": "BodyId"
                        },
                        {
                          "name": "part",
                          "type": 68,
                          "typeName": "BodyPart"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "GlobalConsensus",
                      "fields": [
                        {
                          "type": 65,
                          "typeName": "NetworkId"
                        }
                      ],
                      "index": 9
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 63,
            "type": {
              "def": {
                "compact": {
                  "type": 4
                }
              }
            }
          },
          {
            "id": 64,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 65
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 65
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 65,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "junction",
                "NetworkId"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ByGenesis",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ByFork",
                      "fields": [
                        {
                          "name": "block_number",
                          "type": 11,
                          "typeName": "u64"
                        },
                        {
                          "name": "block_hash",
                          "type": 13,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Polkadot",
                      "index": 2
                    },
                    {
                      "name": "Kusama",
                      "index": 3
                    },
                    {
                      "name": "Westend",
                      "index": 4
                    },
                    {
                      "name": "Rococo",
                      "index": 5
                    },
                    {
                      "name": "Wococo",
                      "index": 6
                    },
                    {
                      "name": "Ethereum",
                      "fields": [
                        {
                          "name": "chain_id",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "BitcoinCore",
                      "index": 8
                    },
                    {
                      "name": "BitcoinCash",
                      "index": 9
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 66,
            "type": {
              "def": {
                "compact": {
                  "type": 6
                }
              }
            }
          },
          {
            "id": 67,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "junction",
                "BodyId"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unit",
                      "index": 0
                    },
                    {
                      "name": "Moniker",
                      "fields": [
                        {
                          "type": 18,
                          "typeName": "[u8; 4]"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Executive",
                      "index": 3
                    },
                    {
                      "name": "Technical",
                      "index": 4
                    },
                    {
                      "name": "Legislative",
                      "index": 5
                    },
                    {
                      "name": "Judicial",
                      "index": 6
                    },
                    {
                      "name": "Defense",
                      "index": 7
                    },
                    {
                      "name": "Administration",
                      "index": 8
                    },
                    {
                      "name": "Treasury",
                      "index": 9
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 68,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "junction",
                "BodyPart"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Voice",
                      "index": 0
                    },
                    {
                      "name": "Members",
                      "fields": [
                        {
                          "name": "count",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Fraction",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "denom",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "AtLeastProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "denom",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "MoreThanProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "denom",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 69,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "Xcm"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 70,
                      "typeName": "Vec<Instruction<Call>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 70,
            "type": {
              "def": {
                "sequence": {
                  "type": 71
                }
              }
            }
          },
          {
            "id": 71,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "Instruction"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "type": 72,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "type": 72,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "type": 72,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "response",
                          "type": 80,
                          "typeName": "Response"
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "querier",
                          "type": 89,
                          "typeName": "Option<MultiLocation>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 72,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "beneficiary",
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 72,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "dest",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 69,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_kind",
                          "type": 90,
                          "typeName": "OriginKind"
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "call",
                          "type": 91,
                          "typeName": "DoubleEncoded<Call>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "max_message_size",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "max_capacity",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "sender",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "recipient",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "ClearOrigin",
                      "index": 10
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "type": 61,
                          "typeName": "InteriorMultiLocation"
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "type": 92,
                          "typeName": "QueryResponseInfo"
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 93,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "beneficiary",
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 93,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "dest",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 69,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 93,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "want",
                          "type": 72,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "maximal",
                          "type": 49,
                          "typeName": "bool"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 93,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "reserve",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 69,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 93,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "dest",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 69,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "ReportHolding",
                      "fields": [
                        {
                          "name": "response_info",
                          "type": 92,
                          "typeName": "QueryResponseInfo"
                        },
                        {
                          "name": "assets",
                          "type": 93,
                          "typeName": "MultiAssetFilter"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 74,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "weight_limit",
                          "type": 96,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "RefundSurplus",
                      "index": 20
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "type": 69,
                          "typeName": "Xcm<Call>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "type": 69,
                          "typeName": "Xcm<Call>"
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "ClearError",
                      "index": 23
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 72,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "ticket",
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 25
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "max_response_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "index": 27
                    },
                    {
                      "name": "BurnAsset",
                      "fields": [
                        {
                          "type": 72,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 28
                    },
                    {
                      "name": "ExpectAsset",
                      "fields": [
                        {
                          "type": 72,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 29
                    },
                    {
                      "name": "ExpectOrigin",
                      "fields": [
                        {
                          "type": 89,
                          "typeName": "Option<MultiLocation>"
                        }
                      ],
                      "index": 30
                    },
                    {
                      "name": "ExpectError",
                      "fields": [
                        {
                          "type": 81,
                          "typeName": "Option<(u32, Error)>"
                        }
                      ],
                      "index": 31
                    },
                    {
                      "name": "ExpectTransactStatus",
                      "fields": [
                        {
                          "type": 87,
                          "typeName": "MaybeErrorCode"
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "QueryPallet",
                      "fields": [
                        {
                          "name": "module_name",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "response_info",
                          "type": 92,
                          "typeName": "QueryResponseInfo"
                        }
                      ],
                      "index": 33
                    },
                    {
                      "name": "ExpectPallet",
                      "fields": [
                        {
                          "name": "index",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "name",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "module_name",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "crate_major",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "min_crate_minor",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 34
                    },
                    {
                      "name": "ReportTransactStatus",
                      "fields": [
                        {
                          "type": 92,
                          "typeName": "QueryResponseInfo"
                        }
                      ],
                      "index": 35
                    },
                    {
                      "name": "ClearTransactStatus",
                      "index": 36
                    },
                    {
                      "name": "UniversalOrigin",
                      "fields": [
                        {
                          "type": 62,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 37
                    },
                    {
                      "name": "ExportMessage",
                      "fields": [
                        {
                          "name": "network",
                          "type": 65,
                          "typeName": "NetworkId"
                        },
                        {
                          "name": "destination",
                          "type": 61,
                          "typeName": "InteriorMultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 69,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 38
                    },
                    {
                      "name": "LockAsset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 74,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "unlocker",
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 39
                    },
                    {
                      "name": "UnlockAsset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 74,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "target",
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 40
                    },
                    {
                      "name": "NoteUnlockable",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 74,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "owner",
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 41
                    },
                    {
                      "name": "RequestUnlock",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 74,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "locker",
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 42
                    },
                    {
                      "name": "SetFeesMode",
                      "fields": [
                        {
                          "name": "jit_withdraw",
                          "type": 49,
                          "typeName": "bool"
                        }
                      ],
                      "index": 43
                    },
                    {
                      "name": "SetTopic",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 44
                    },
                    {
                      "name": "ClearTopic",
                      "index": 45
                    },
                    {
                      "name": "AliasOrigin",
                      "fields": [
                        {
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 46
                    },
                    {
                      "name": "UnpaidExecution",
                      "fields": [
                        {
                          "name": "weight_limit",
                          "type": 96,
                          "typeName": "WeightLimit"
                        },
                        {
                          "name": "check_origin",
                          "type": 89,
                          "typeName": "Option<MultiLocation>"
                        }
                      ],
                      "index": 47
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 72,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multiasset",
                "MultiAssets"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 73,
                      "typeName": "Vec<MultiAsset>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 73,
            "type": {
              "def": {
                "sequence": {
                  "type": 74
                }
              }
            }
          },
          {
            "id": 74,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multiasset",
                "MultiAsset"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 75,
                      "typeName": "AssetId"
                    },
                    {
                      "name": "fun",
                      "type": 76,
                      "typeName": "Fungibility"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 75,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multiasset",
                "AssetId"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Concrete",
                      "fields": [
                        {
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Abstract",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 76,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multiasset",
                "Fungibility"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "fields": [
                        {
                          "type": 66,
                          "typeName": "u128"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "NonFungible",
                      "fields": [
                        {
                          "type": 77,
                          "typeName": "AssetInstance"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 77,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multiasset",
                "AssetInstance"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Undefined",
                      "index": 0
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "type": 66,
                          "typeName": "u128"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Array4",
                      "fields": [
                        {
                          "type": 18,
                          "typeName": "[u8; 4]"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Array8",
                      "fields": [
                        {
                          "type": 78,
                          "typeName": "[u8; 8]"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Array16",
                      "fields": [
                        {
                          "type": 79,
                          "typeName": "[u8; 16]"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Array32",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 5
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 78,
            "type": {
              "def": {
                "array": {
                  "len": 8,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 79,
            "type": {
              "def": {
                "array": {
                  "len": 16,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 80,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "Response"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Null",
                      "index": 0
                    },
                    {
                      "name": "Assets",
                      "fields": [
                        {
                          "type": 72,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ExecutionResult",
                      "fields": [
                        {
                          "type": 81,
                          "typeName": "Option<(u32, Error)>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Version",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "super::Version"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "PalletsInfo",
                      "fields": [
                        {
                          "type": 83,
                          "typeName": "BoundedVec<PalletInfo, MaxPalletsInfo>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "DispatchResult",
                      "fields": [
                        {
                          "type": 87,
                          "typeName": "MaybeErrorCode"
                        }
                      ],
                      "index": 5
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 81,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 82
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 82
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 82,
            "type": {
              "def": {
                "tuple": [
                  4,
                  56
                ]
              }
            }
          },
          {
            "id": 83,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 84
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 86,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 84,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "PalletInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 63,
                      "typeName": "u32"
                    },
                    {
                      "name": "name",
                      "type": 85,
                      "typeName": "BoundedVec<u8, MaxPalletNameLen>"
                    },
                    {
                      "name": "module_name",
                      "type": 85,
                      "typeName": "BoundedVec<u8, MaxPalletNameLen>"
                    },
                    {
                      "name": "major",
                      "type": 63,
                      "typeName": "u32"
                    },
                    {
                      "name": "minor",
                      "type": 63,
                      "typeName": "u32"
                    },
                    {
                      "name": "patch",
                      "type": 63,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 85,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 14,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 86,
            "type": {
              "def": {
                "sequence": {
                  "type": 84
                }
              }
            }
          },
          {
            "id": 87,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "MaybeErrorCode"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Success",
                      "index": 0
                    },
                    {
                      "name": "Error",
                      "fields": [
                        {
                          "type": 88,
                          "typeName": "BoundedVec<u8, MaxDispatchErrorLen>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "TruncatedError",
                      "fields": [
                        {
                          "type": 88,
                          "typeName": "BoundedVec<u8, MaxDispatchErrorLen>"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 88,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 14,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 89,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 60
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 60
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 90,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "OriginKind"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Native",
                      "index": 0
                    },
                    {
                      "name": "SovereignAccount",
                      "index": 1
                    },
                    {
                      "name": "Superuser",
                      "index": 2
                    },
                    {
                      "name": "Xcm",
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 91,
            "type": {
              "path": [
                "staging_xcm",
                "double_encoded",
                "DoubleEncoded"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "encoded",
                      "type": 14,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 92,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "QueryResponseInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "destination",
                      "type": 60,
                      "typeName": "MultiLocation"
                    },
                    {
                      "name": "query_id",
                      "type": 10,
                      "typeName": "QueryId"
                    },
                    {
                      "name": "max_weight",
                      "type": 9,
                      "typeName": "Weight"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 93,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multiasset",
                "MultiAssetFilter"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Definite",
                      "fields": [
                        {
                          "type": 72,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Wild",
                      "fields": [
                        {
                          "type": 94,
                          "typeName": "WildMultiAsset"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 94,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multiasset",
                "WildMultiAsset"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "All",
                      "index": 0
                    },
                    {
                      "name": "AllOf",
                      "fields": [
                        {
                          "name": "id",
                          "type": 75,
                          "typeName": "AssetId"
                        },
                        {
                          "name": "fun",
                          "type": 95,
                          "typeName": "WildFungibility"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "AllCounted",
                      "fields": [
                        {
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "AllOfCounted",
                      "fields": [
                        {
                          "name": "id",
                          "type": 75,
                          "typeName": "AssetId"
                        },
                        {
                          "name": "fun",
                          "type": 95,
                          "typeName": "WildFungibility"
                        },
                        {
                          "name": "count",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 95,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multiasset",
                "WildFungibility"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "index": 0
                    },
                    {
                      "name": "NonFungible",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 96,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "WeightLimit"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unlimited",
                      "index": 0
                    },
                    {
                      "name": "Limited",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 97,
            "type": {
              "path": [
                "staging_xcm",
                "VersionedMultiAssets"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "type": 98,
                          "typeName": "v2::MultiAssets"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "type": 72,
                          "typeName": "v3::MultiAssets"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 98,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multiasset",
                "MultiAssets"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 99,
                      "typeName": "Vec<MultiAsset>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 99,
            "type": {
              "def": {
                "sequence": {
                  "type": 100
                }
              }
            }
          },
          {
            "id": 100,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multiasset",
                "MultiAsset"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 101,
                      "typeName": "AssetId"
                    },
                    {
                      "name": "fun",
                      "type": 109,
                      "typeName": "Fungibility"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 101,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multiasset",
                "AssetId"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Concrete",
                      "fields": [
                        {
                          "type": 102,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Abstract",
                      "fields": [
                        {
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 102,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multilocation",
                "MultiLocation"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parents",
                      "type": 2,
                      "typeName": "u8"
                    },
                    {
                      "name": "interior",
                      "type": 103,
                      "typeName": "Junctions"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 103,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multilocation",
                "Junctions"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Here",
                      "index": 0
                    },
                    {
                      "name": "X1",
                      "fields": [
                        {
                          "type": 104,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "X2",
                      "fields": [
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "X3",
                      "fields": [
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "X4",
                      "fields": [
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "X5",
                      "fields": [
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "X6",
                      "fields": [
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "X7",
                      "fields": [
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "X8",
                      "fields": [
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        },
                        {
                          "type": 104,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 8
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 104,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "junction",
                "Junction"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Parachain",
                      "fields": [
                        {
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "AccountId32",
                      "fields": [
                        {
                          "name": "network",
                          "type": 105,
                          "typeName": "NetworkId"
                        },
                        {
                          "name": "id",
                          "type": 13,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "AccountIndex64",
                      "fields": [
                        {
                          "name": "network",
                          "type": 105,
                          "typeName": "NetworkId"
                        },
                        {
                          "name": "index",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "AccountKey20",
                      "fields": [
                        {
                          "name": "network",
                          "type": 105,
                          "typeName": "NetworkId"
                        },
                        {
                          "name": "key",
                          "type": 1,
                          "typeName": "[u8; 20]"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "PalletInstance",
                      "fields": [
                        {
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "GeneralIndex",
                      "fields": [
                        {
                          "type": 66,
                          "typeName": "u128"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "GeneralKey",
                      "fields": [
                        {
                          "type": 106,
                          "typeName": "WeakBoundedVec<u8, ConstU32<32>>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "OnlyChild",
                      "index": 7
                    },
                    {
                      "name": "Plurality",
                      "fields": [
                        {
                          "name": "id",
                          "type": 107,
                          "typeName": "BodyId"
                        },
                        {
                          "name": "part",
                          "type": 108,
                          "typeName": "BodyPart"
                        }
                      ],
                      "index": 8
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 105,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "NetworkId"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Any",
                      "index": 0
                    },
                    {
                      "name": "Named",
                      "fields": [
                        {
                          "type": 106,
                          "typeName": "WeakBoundedVec<u8, ConstU32<32>>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Polkadot",
                      "index": 2
                    },
                    {
                      "name": "Kusama",
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 106,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 14,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 107,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "BodyId"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unit",
                      "index": 0
                    },
                    {
                      "name": "Named",
                      "fields": [
                        {
                          "type": 106,
                          "typeName": "WeakBoundedVec<u8, ConstU32<32>>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Executive",
                      "index": 3
                    },
                    {
                      "name": "Technical",
                      "index": 4
                    },
                    {
                      "name": "Legislative",
                      "index": 5
                    },
                    {
                      "name": "Judicial",
                      "index": 6
                    },
                    {
                      "name": "Defense",
                      "index": 7
                    },
                    {
                      "name": "Administration",
                      "index": 8
                    },
                    {
                      "name": "Treasury",
                      "index": 9
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 108,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "BodyPart"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Voice",
                      "index": 0
                    },
                    {
                      "name": "Members",
                      "fields": [
                        {
                          "name": "count",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Fraction",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "denom",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "AtLeastProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "denom",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "MoreThanProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "denom",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 109,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multiasset",
                "Fungibility"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "fields": [
                        {
                          "type": 66,
                          "typeName": "u128"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "NonFungible",
                      "fields": [
                        {
                          "type": 110,
                          "typeName": "AssetInstance"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 110,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multiasset",
                "AssetInstance"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Undefined",
                      "index": 0
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "type": 66,
                          "typeName": "u128"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Array4",
                      "fields": [
                        {
                          "type": 18,
                          "typeName": "[u8; 4]"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Array8",
                      "fields": [
                        {
                          "type": 78,
                          "typeName": "[u8; 8]"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Array16",
                      "fields": [
                        {
                          "type": 79,
                          "typeName": "[u8; 16]"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Array32",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Blob",
                      "fields": [
                        {
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 6
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 111,
            "type": {
              "path": [
                "staging_xcm",
                "VersionedMultiLocation"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "type": 102,
                          "typeName": "v2::MultiLocation"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "type": 60,
                          "typeName": "v3::MultiLocation"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 112,
            "type": {
              "path": [
                "cumulus_pallet_xcm",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidFormat",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Downward message is invalid XCM.",
                        "\\[ id \\]"
                      ]
                    },
                    {
                      "name": "UnsupportedVersion",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Downward message is unsupported version of XCM.",
                        "\\[ id \\]"
                      ]
                    },
                    {
                      "name": "ExecutedDownward",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "[u8; 32]"
                        },
                        {
                          "type": 59,
                          "typeName": "Outcome"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Downward message executed with the given outcome.",
                        "\\[ id, outcome \\]"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 113,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidFormat",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Downward message is invalid XCM."
                      ]
                    },
                    {
                      "name": "UnsupportedVersion",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Downward message is unsupported version of XCM."
                      ]
                    },
                    {
                      "name": "ExecutedDownward",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash"
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash"
                        },
                        {
                          "name": "outcome",
                          "type": 59,
                          "typeName": "Outcome"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Downward message executed with the given outcome."
                      ]
                    },
                    {
                      "name": "WeightExhausted",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash"
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash"
                        },
                        {
                          "name": "remaining_weight",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "required_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "The weight limit for handling downward messages was reached."
                      ]
                    },
                    {
                      "name": "OverweightEnqueued",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash"
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash"
                        },
                        {
                          "name": "overweight_index",
                          "type": 11,
                          "typeName": "OverweightIndex"
                        },
                        {
                          "name": "required_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Downward message is overweight and was placed in the overweight queue."
                      ]
                    },
                    {
                      "name": "OverweightServiced",
                      "fields": [
                        {
                          "name": "overweight_index",
                          "type": 11,
                          "typeName": "OverweightIndex"
                        },
                        {
                          "name": "weight_used",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Downward message from the overweight queue was executed."
                      ]
                    },
                    {
                      "name": "MaxMessagesExhausted",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "The maximum number of downward messages was reached."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 114,
            "type": {
              "path": [
                "pallet_ethereum",
                "pallet",
                "Event"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Executed",
                      "fields": [
                        {
                          "name": "from",
                          "type": 115,
                          "typeName": "H160"
                        },
                        {
                          "name": "to",
                          "type": 115,
                          "typeName": "H160"
                        },
                        {
                          "name": "transaction_hash",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "exit_reason",
                          "type": 116,
                          "typeName": "ExitReason"
                        },
                        {
                          "name": "extra_data",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An ethereum transaction was successfully executed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 115,
            "type": {
              "path": [
                "primitive_types",
                "H160"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 1,
                      "typeName": "[u8; 20]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 116,
            "type": {
              "path": [
                "evm_core",
                "error",
                "ExitReason"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Succeed",
                      "fields": [
                        {
                          "type": 117,
                          "typeName": "ExitSucceed"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Error",
                      "fields": [
                        {
                          "type": 118,
                          "typeName": "ExitError"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Revert",
                      "fields": [
                        {
                          "type": 122,
                          "typeName": "ExitRevert"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Fatal",
                      "fields": [
                        {
                          "type": 123,
                          "typeName": "ExitFatal"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 117,
            "type": {
              "path": [
                "evm_core",
                "error",
                "ExitSucceed"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Stopped",
                      "index": 0
                    },
                    {
                      "name": "Returned",
                      "index": 1
                    },
                    {
                      "name": "Suicided",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 118,
            "type": {
              "path": [
                "evm_core",
                "error",
                "ExitError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "StackUnderflow",
                      "index": 0
                    },
                    {
                      "name": "StackOverflow",
                      "index": 1
                    },
                    {
                      "name": "InvalidJump",
                      "index": 2
                    },
                    {
                      "name": "InvalidRange",
                      "index": 3
                    },
                    {
                      "name": "DesignatedInvalid",
                      "index": 4
                    },
                    {
                      "name": "CallTooDeep",
                      "index": 5
                    },
                    {
                      "name": "CreateCollision",
                      "index": 6
                    },
                    {
                      "name": "CreateContractLimit",
                      "index": 7
                    },
                    {
                      "name": "InvalidCode",
                      "fields": [
                        {
                          "type": 119,
                          "typeName": "Opcode"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "OutOfOffset",
                      "index": 8
                    },
                    {
                      "name": "OutOfGas",
                      "index": 9
                    },
                    {
                      "name": "OutOfFund",
                      "index": 10
                    },
                    {
                      "name": "PCUnderflow",
                      "index": 11
                    },
                    {
                      "name": "CreateEmpty",
                      "index": 12
                    },
                    {
                      "name": "Other",
                      "fields": [
                        {
                          "type": 120,
                          "typeName": "Cow<'static, str>"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "MaxNonce",
                      "index": 14
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 119,
            "type": {
              "path": [
                "evm_core",
                "opcode",
                "Opcode"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 2,
                      "typeName": "u8"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 120,
            "type": {
              "path": [
                "Cow"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 121
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 121
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 121,
            "type": {
              "def": {
                "primitive": "str"
              }
            }
          },
          {
            "id": 122,
            "type": {
              "path": [
                "evm_core",
                "error",
                "ExitRevert"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Reverted",
                      "index": 0
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 123,
            "type": {
              "path": [
                "evm_core",
                "error",
                "ExitFatal"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotSupported",
                      "index": 0
                    },
                    {
                      "name": "UnhandledInterrupt",
                      "index": 1
                    },
                    {
                      "name": "CallErrorAsFatal",
                      "fields": [
                        {
                          "type": 118,
                          "typeName": "ExitError"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Other",
                      "fields": [
                        {
                          "type": 120,
                          "typeName": "Cow<'static, str>"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 124,
            "type": {
              "path": [
                "pallet_evm",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Log",
                      "fields": [
                        {
                          "name": "log",
                          "type": 125,
                          "typeName": "Log"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Ethereum events from contracts."
                      ]
                    },
                    {
                      "name": "Created",
                      "fields": [
                        {
                          "name": "address",
                          "type": 115,
                          "typeName": "H160"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A contract has been created at given address."
                      ]
                    },
                    {
                      "name": "CreatedFailed",
                      "fields": [
                        {
                          "name": "address",
                          "type": 115,
                          "typeName": "H160"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A contract was attempted to be created, but the execution failed."
                      ]
                    },
                    {
                      "name": "Executed",
                      "fields": [
                        {
                          "name": "address",
                          "type": 115,
                          "typeName": "H160"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A contract has been executed successfully with states applied."
                      ]
                    },
                    {
                      "name": "ExecutedFailed",
                      "fields": [
                        {
                          "name": "address",
                          "type": 115,
                          "typeName": "H160"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A contract has been executed with errors. States are reverted with only gas fees applied."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 125,
            "type": {
              "path": [
                "ethereum",
                "log",
                "Log"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "address",
                      "type": 115,
                      "typeName": "H160"
                    },
                    {
                      "name": "topics",
                      "type": 126,
                      "typeName": "Vec<H256>"
                    },
                    {
                      "name": "data",
                      "type": 14,
                      "typeName": "Bytes"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 126,
            "type": {
              "def": {
                "sequence": {
                  "type": 12
                }
              }
            }
          },
          {
            "id": 127,
            "type": {
              "path": [
                "pallet_base_fee",
                "pallet",
                "Event"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewBaseFeePerGas",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 128,
                          "typeName": "U256"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "BaseFeeOverflow",
                      "index": 1
                    },
                    {
                      "name": "NewElasticity",
                      "fields": [
                        {
                          "name": "elasticity",
                          "type": 130,
                          "typeName": "Permill"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 128,
            "type": {
              "path": [
                "primitive_types",
                "U256"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 129,
                      "typeName": "[u64; 4]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 129,
            "type": {
              "def": {
                "array": {
                  "len": 4,
                  "type": 11
                }
              }
            }
          },
          {
            "id": 130,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Permill"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 131,
            "type": {
              "path": [
                "pallet_laos_evolution",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CollectionCreated",
                      "fields": [
                        {
                          "name": "collection_id",
                          "type": 11,
                          "typeName": "CollectionId"
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "AccountIdOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Collection created",
                        "parameters. [collection_id, who]"
                      ]
                    },
                    {
                      "name": "MintedWithExternalURI",
                      "fields": [
                        {
                          "name": "collection_id",
                          "type": 11,
                          "typeName": "CollectionId"
                        },
                        {
                          "name": "slot",
                          "type": 6,
                          "typeName": "Slot"
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "AccountIdOf<T>"
                        },
                        {
                          "name": "token_uri",
                          "type": 132,
                          "typeName": "TokenUriOf<T>"
                        },
                        {
                          "name": "token_id",
                          "type": 128,
                          "typeName": "TokenId"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Asset minted",
                        "[collection_id, slot, to, token_uri]"
                      ]
                    },
                    {
                      "name": "EvolvedWithExternalURI",
                      "fields": [
                        {
                          "name": "collection_id",
                          "type": 11,
                          "typeName": "CollectionId"
                        },
                        {
                          "name": "token_id",
                          "type": 128,
                          "typeName": "TokenId"
                        },
                        {
                          "name": "token_uri",
                          "type": 132,
                          "typeName": "TokenUriOf<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Asset evolved",
                        "[collection_id, token_uri, token_id]"
                      ]
                    },
                    {
                      "name": "CollectionTransferred",
                      "fields": [
                        {
                          "name": "collection_id",
                          "type": 11,
                          "typeName": "CollectionId"
                        },
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "AccountIdOf<T>"
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "AccountIdOf<T>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Ownership of collection was transferred",
                        "[collection_id, from, to]"
                      ]
                    },
                    {
                      "name": "PublicMintingEnabled",
                      "fields": [
                        {
                          "name": "collection_id",
                          "type": 11,
                          "typeName": "CollectionId"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Public minting enabled",
                        "[collection_id]"
                      ]
                    },
                    {
                      "name": "PublicMintingDisabled",
                      "fields": [
                        {
                          "name": "collection_id",
                          "type": 11,
                          "typeName": "CollectionId"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Public minting disabled",
                        "[collection_id]"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Events for this pallet."
              ]
            }
          },
          {
            "id": 132,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 14,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 133,
            "type": {
              "path": [
                "pallet_asset_metadata_extender",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ExtensionCreated",
                      "fields": [
                        {
                          "name": "universal_location",
                          "type": 134,
                          "typeName": "UniversalLocationOf<T>"
                        },
                        {
                          "name": "claimer",
                          "type": 0,
                          "typeName": "AccountIdOf<T>"
                        },
                        {
                          "name": "token_uri",
                          "type": 132,
                          "typeName": "TokenUriOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Extension created",
                        "parameters. [universal_location, claimer, token_uri]"
                      ]
                    },
                    {
                      "name": "ExtensionUpdated",
                      "fields": [
                        {
                          "name": "universal_location",
                          "type": 134,
                          "typeName": "UniversalLocationOf<T>"
                        },
                        {
                          "name": "claimer",
                          "type": 0,
                          "typeName": "AccountIdOf<T>"
                        },
                        {
                          "name": "token_uri",
                          "type": 132,
                          "typeName": "TokenUriOf<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Extension updated",
                        "parameters. [universal_location, claimer, token_uri]"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Events for this pallet."
              ]
            }
          },
          {
            "id": 134,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 14,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 135,
            "type": {
              "path": [
                "frame_system",
                "Phase"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ApplyExtrinsic",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Finalization",
                      "index": 1
                    },
                    {
                      "name": "Initialization",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 136,
            "type": {
              "def": {
                "sequence": {
                  "type": 137
                }
              }
            }
          },
          {
            "id": 137,
            "type": {
              "def": {
                "tuple": [
                  4,
                  4
                ]
              }
            }
          },
          {
            "id": 138,
            "type": {
              "path": [
                "frame_system",
                "LastRuntimeUpgradeInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_version",
                      "type": 63,
                      "typeName": "codec::Compact<u32>"
                    },
                    {
                      "name": "spec_name",
                      "type": 121,
                      "typeName": "sp_runtime::RuntimeString"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 139,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "remark",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::remark`]."
                      ]
                    },
                    {
                      "name": "set_heap_pages",
                      "fields": [
                        {
                          "name": "pages",
                          "type": 11,
                          "typeName": "u64"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_heap_pages`]."
                      ]
                    },
                    {
                      "name": "set_code",
                      "fields": [
                        {
                          "name": "code",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_code`]."
                      ]
                    },
                    {
                      "name": "set_code_without_checks",
                      "fields": [
                        {
                          "name": "code",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::set_code_without_checks`]."
                      ]
                    },
                    {
                      "name": "set_storage",
                      "fields": [
                        {
                          "name": "items",
                          "type": 140,
                          "typeName": "Vec<KeyValue>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::set_storage`]."
                      ]
                    },
                    {
                      "name": "kill_storage",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 142,
                          "typeName": "Vec<Key>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::kill_storage`]."
                      ]
                    },
                    {
                      "name": "kill_prefix",
                      "fields": [
                        {
                          "name": "prefix",
                          "type": 14,
                          "typeName": "Key"
                        },
                        {
                          "name": "subkeys",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::kill_prefix`]."
                      ]
                    },
                    {
                      "name": "remark_with_event",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::remark_with_event`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 140,
            "type": {
              "def": {
                "sequence": {
                  "type": 141
                }
              }
            }
          },
          {
            "id": 141,
            "type": {
              "def": {
                "tuple": [
                  14,
                  14
                ]
              }
            }
          },
          {
            "id": 142,
            "type": {
              "def": {
                "sequence": {
                  "type": 14
                }
              }
            }
          },
          {
            "id": 143,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockWeights"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_block",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "max_block",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "per_class",
                      "type": 144,
                      "typeName": "PerDispatchClass<WeightsPerClass>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 144,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 145
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 145,
                      "typeName": "T"
                    },
                    {
                      "name": "operational",
                      "type": 145,
                      "typeName": "T"
                    },
                    {
                      "name": "mandatory",
                      "type": 145,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 145,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "WeightsPerClass"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_extrinsic",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "max_extrinsic",
                      "type": 146,
                      "typeName": "Option<Weight>"
                    },
                    {
                      "name": "max_total",
                      "type": 146,
                      "typeName": "Option<Weight>"
                    },
                    {
                      "name": "reserved",
                      "type": 146,
                      "typeName": "Option<Weight>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 146,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 9
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 9
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 147,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockLength"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max",
                      "type": 148,
                      "typeName": "PerDispatchClass<u32>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 148,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 4,
                      "typeName": "T"
                    },
                    {
                      "name": "operational",
                      "type": 4,
                      "typeName": "T"
                    },
                    {
                      "name": "mandatory",
                      "type": 4,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 149,
            "type": {
              "path": [
                "sp_weights",
                "RuntimeDbWeight"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "read",
                      "type": 11,
                      "typeName": "u64"
                    },
                    {
                      "name": "write",
                      "type": 11,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 150,
            "type": {
              "path": [
                "sp_version",
                "RuntimeVersion"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_name",
                      "type": 121,
                      "typeName": "RuntimeString"
                    },
                    {
                      "name": "impl_name",
                      "type": 121,
                      "typeName": "RuntimeString"
                    },
                    {
                      "name": "authoring_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "spec_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "impl_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "apis",
                      "type": 151,
                      "typeName": "ApisVec"
                    },
                    {
                      "name": "transaction_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "state_version",
                      "type": 2,
                      "typeName": "u8"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 151,
            "type": {
              "path": [
                "Cow"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 152
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 152
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 152,
            "type": {
              "def": {
                "sequence": {
                  "type": 153
                }
              }
            }
          },
          {
            "id": 153,
            "type": {
              "def": {
                "tuple": [
                  78,
                  4
                ]
              }
            }
          },
          {
            "id": 154,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidSpecName",
                      "index": 0,
                      "docs": [
                        "The name of specification does not match between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "SpecVersionNeedsToIncrease",
                      "index": 1,
                      "docs": [
                        "The specification version is not allowed to decrease between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "FailedToExtractRuntimeVersion",
                      "index": 2,
                      "docs": [
                        "Failed to extract the runtime version from the new runtime.",
                        "",
                        "Either calling `Core_version` or decoding `RuntimeVersion` failed."
                      ]
                    },
                    {
                      "name": "NonDefaultComposite",
                      "index": 3,
                      "docs": [
                        "Suicide called when the account has non-default composite data."
                      ]
                    },
                    {
                      "name": "NonZeroRefCount",
                      "index": 4,
                      "docs": [
                        "There is a non-zero reference count preventing the account from being purged."
                      ]
                    },
                    {
                      "name": "CallFiltered",
                      "index": 5,
                      "docs": [
                        "The origin filter prevent the call to be dispatched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the System pallet"
              ]
            }
          },
          {
            "id": 155,
            "type": {
              "def": {
                "sequence": {
                  "type": 156
                }
              }
            }
          },
          {
            "id": 156,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "unincluded_segment",
                "Ancestor"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "used_bandwidth",
                      "type": 157,
                      "typeName": "UsedBandwidth"
                    },
                    {
                      "name": "para_head_hash",
                      "type": 162,
                      "typeName": "Option<H>"
                    },
                    {
                      "name": "consumed_go_ahead_signal",
                      "type": 163,
                      "typeName": "Option<relay_chain::UpgradeGoAhead>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 157,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "unincluded_segment",
                "UsedBandwidth"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ump_msg_count",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "ump_total_bytes",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "hrmp_outgoing",
                      "type": 158,
                      "typeName": "BTreeMap<ParaId, HrmpChannelUpdate>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 158,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 57
                },
                {
                  "name": "V",
                  "type": 159
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 160
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 159,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "unincluded_segment",
                "HrmpChannelUpdate"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "msg_count",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "total_bytes",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 160,
            "type": {
              "def": {
                "sequence": {
                  "type": 161
                }
              }
            }
          },
          {
            "id": 161,
            "type": {
              "def": {
                "tuple": [
                  57,
                  159
                ]
              }
            }
          },
          {
            "id": 162,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 12
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 12
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 163,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 164
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 164
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 164,
            "type": {
              "path": [
                "polkadot_primitives",
                "v5",
                "UpgradeGoAhead"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Abort",
                      "index": 0
                    },
                    {
                      "name": "GoAhead",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 165,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "unincluded_segment",
                "SegmentTracker"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "used_bandwidth",
                      "type": 157,
                      "typeName": "UsedBandwidth"
                    },
                    {
                      "name": "hrmp_watermark",
                      "type": 166,
                      "typeName": "Option<relay_chain::BlockNumber>"
                    },
                    {
                      "name": "consumed_go_ahead_signal",
                      "type": 163,
                      "typeName": "Option<relay_chain::UpgradeGoAhead>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 166,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 4
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 167,
            "type": {
              "path": [
                "polkadot_primitives",
                "v5",
                "PersistedValidationData"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parent_head",
                      "type": 168,
                      "typeName": "HeadData"
                    },
                    {
                      "name": "relay_parent_number",
                      "type": 4,
                      "typeName": "N"
                    },
                    {
                      "name": "relay_parent_storage_root",
                      "type": 12,
                      "typeName": "H"
                    },
                    {
                      "name": "max_pov_size",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 168,
            "type": {
              "path": [
                "polkadot_parachain_primitives",
                "primitives",
                "HeadData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 14,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 169,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 170
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 170
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 170,
            "type": {
              "path": [
                "polkadot_primitives",
                "v5",
                "UpgradeRestriction"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Present",
                      "index": 0
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 171,
            "type": {
              "path": [
                "sp_trie",
                "storage_proof",
                "StorageProof"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "trie_nodes",
                      "type": 172,
                      "typeName": "BTreeSet<Vec<u8>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 172,
            "type": {
              "path": [
                "BTreeSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 14
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 142
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 173,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "relay_state_snapshot",
                "MessagingStateSnapshot"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "dmq_mqc_head",
                      "type": 12,
                      "typeName": "relay_chain::Hash"
                    },
                    {
                      "name": "relay_dispatch_queue_remaining_capacity",
                      "type": 174,
                      "typeName": "RelayDispatchQueueRemainingCapacity"
                    },
                    {
                      "name": "ingress_channels",
                      "type": 175,
                      "typeName": "Vec<(ParaId, AbridgedHrmpChannel)>"
                    },
                    {
                      "name": "egress_channels",
                      "type": 175,
                      "typeName": "Vec<(ParaId, AbridgedHrmpChannel)>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 174,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "relay_state_snapshot",
                "RelayDispatchQueueRemainingCapacity"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "remaining_count",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "remaining_size",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 175,
            "type": {
              "def": {
                "sequence": {
                  "type": 176
                }
              }
            }
          },
          {
            "id": 176,
            "type": {
              "def": {
                "tuple": [
                  57,
                  177
                ]
              }
            }
          },
          {
            "id": 177,
            "type": {
              "path": [
                "polkadot_primitives",
                "v5",
                "AbridgedHrmpChannel"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_capacity",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "max_total_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "max_message_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "msg_count",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "total_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "mqc_head",
                      "type": 162,
                      "typeName": "Option<Hash>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 178,
            "type": {
              "path": [
                "polkadot_primitives",
                "v5",
                "AbridgedHostConfiguration"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_code_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "max_head_data_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "max_upward_queue_count",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "max_upward_queue_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "max_upward_message_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "max_upward_message_num_per_candidate",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "hrmp_max_message_num_per_candidate",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "validation_upgrade_cooldown",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "validation_upgrade_delay",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "async_backing_params",
                      "type": 179,
                      "typeName": "super::vstaging::AsyncBackingParams"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 179,
            "type": {
              "path": [
                "polkadot_primitives",
                "vstaging",
                "AsyncBackingParams"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_candidate_depth",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "allowed_ancestry_len",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 180,
            "type": {
              "path": [
                "cumulus_primitives_parachain_inherent",
                "MessageQueueChain"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 12,
                      "typeName": "RelayHash"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 181,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 57
                },
                {
                  "name": "V",
                  "type": 180
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 182
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 182,
            "type": {
              "def": {
                "sequence": {
                  "type": 183
                }
              }
            }
          },
          {
            "id": 183,
            "type": {
              "def": {
                "tuple": [
                  57,
                  180
                ]
              }
            }
          },
          {
            "id": 184,
            "type": {
              "def": {
                "sequence": {
                  "type": 185
                }
              }
            }
          },
          {
            "id": 185,
            "type": {
              "path": [
                "polkadot_core_primitives",
                "OutboundHrmpMessage"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 57
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "recipient",
                      "type": 57,
                      "typeName": "Id"
                    },
                    {
                      "name": "data",
                      "type": 14,
                      "typeName": "sp_std::vec::Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 186,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "CodeUpgradeAuthorization"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "code_hash",
                      "type": 12,
                      "typeName": "T::Hash"
                    },
                    {
                      "name": "check_version",
                      "type": 49,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 187,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_validation_data",
                      "fields": [
                        {
                          "name": "data",
                          "type": 188,
                          "typeName": "ParachainInherentData"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_validation_data`]."
                      ]
                    },
                    {
                      "name": "sudo_send_upward_message",
                      "fields": [
                        {
                          "name": "message",
                          "type": 14,
                          "typeName": "UpwardMessage"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::sudo_send_upward_message`]."
                      ]
                    },
                    {
                      "name": "authorize_upgrade",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "check_version",
                          "type": 49,
                          "typeName": "bool"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::authorize_upgrade`]."
                      ]
                    },
                    {
                      "name": "enact_authorized_upgrade",
                      "fields": [
                        {
                          "name": "code",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::enact_authorized_upgrade`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 188,
            "type": {
              "path": [
                "cumulus_primitives_parachain_inherent",
                "ParachainInherentData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "validation_data",
                      "type": 167,
                      "typeName": "PersistedValidationData"
                    },
                    {
                      "name": "relay_chain_state",
                      "type": 171,
                      "typeName": "sp_trie::StorageProof"
                    },
                    {
                      "name": "downward_messages",
                      "type": 189,
                      "typeName": "Vec<InboundDownwardMessage>"
                    },
                    {
                      "name": "horizontal_messages",
                      "type": 191,
                      "typeName": "BTreeMap<ParaId, Vec<InboundHrmpMessage>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 189,
            "type": {
              "def": {
                "sequence": {
                  "type": 190
                }
              }
            }
          },
          {
            "id": 190,
            "type": {
              "path": [
                "polkadot_core_primitives",
                "InboundDownwardMessage"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sent_at",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "msg",
                      "type": 14,
                      "typeName": "DownwardMessage"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 191,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 57
                },
                {
                  "name": "V",
                  "type": 192
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 194
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 192,
            "type": {
              "def": {
                "sequence": {
                  "type": 193
                }
              }
            }
          },
          {
            "id": 193,
            "type": {
              "path": [
                "polkadot_core_primitives",
                "InboundHrmpMessage"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sent_at",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "data",
                      "type": 14,
                      "typeName": "sp_std::vec::Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 194,
            "type": {
              "def": {
                "sequence": {
                  "type": 195
                }
              }
            }
          },
          {
            "id": 195,
            "type": {
              "def": {
                "tuple": [
                  57,
                  192
                ]
              }
            }
          },
          {
            "id": 196,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "OverlappingUpgrades",
                      "index": 0,
                      "docs": [
                        "Attempt to upgrade validation function while existing upgrade pending."
                      ]
                    },
                    {
                      "name": "ProhibitedByPolkadot",
                      "index": 1,
                      "docs": [
                        "Polkadot currently prohibits this parachain from upgrading its validation function."
                      ]
                    },
                    {
                      "name": "TooBig",
                      "index": 2,
                      "docs": [
                        "The supplied validation function has compiled into a blob larger than Polkadot is",
                        "willing to run."
                      ]
                    },
                    {
                      "name": "ValidationDataNotAvailable",
                      "index": 3,
                      "docs": [
                        "The inherent which supplies the validation data did not run this block."
                      ]
                    },
                    {
                      "name": "HostConfigurationNotAvailable",
                      "index": 4,
                      "docs": [
                        "The inherent which supplies the host configuration did not run this block."
                      ]
                    },
                    {
                      "name": "NotScheduled",
                      "index": 5,
                      "docs": [
                        "No validation function upgrade is currently scheduled."
                      ]
                    },
                    {
                      "name": "NothingAuthorized",
                      "index": 6,
                      "docs": [
                        "No code upgrade has been authorized."
                      ]
                    },
                    {
                      "name": "Unauthorized",
                      "index": 7,
                      "docs": [
                        "The given code upgrade has not been authorized."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 197,
            "type": {
              "path": [
                "pallet_timestamp",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set",
                      "fields": [
                        {
                          "name": "now",
                          "type": 10,
                          "typeName": "T::Moment"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 198,
            "type": {
              "path": [
                "parachain_info",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {}
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 199,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "sudo",
                      "fields": [
                        {
                          "name": "call",
                          "type": 200,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::sudo`]."
                      ]
                    },
                    {
                      "name": "sudo_unchecked_weight",
                      "fields": [
                        {
                          "name": "call",
                          "type": 200,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        },
                        {
                          "name": "weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::sudo_unchecked_weight`]."
                      ]
                    },
                    {
                      "name": "set_key",
                      "fields": [
                        {
                          "name": "new",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_key`]."
                      ]
                    },
                    {
                      "name": "sudo_as",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "call",
                          "type": 200,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::sudo_as`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 200,
            "type": {
              "path": [
                "laos_runtime",
                "RuntimeCall"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "type": 139,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ParachainSystem",
                      "fields": [
                        {
                          "type": 187,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainSystem, Runtime>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Timestamp",
                      "fields": [
                        {
                          "type": 197,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "ParachainInfo",
                      "fields": [
                        {
                          "type": 198,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainInfo, Runtime>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Sudo",
                      "fields": [
                        {
                          "type": 199,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Sudo, Runtime>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "type": 201,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Multisig",
                      "fields": [
                        {
                          "type": 209,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Multisig, Runtime>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Proxy",
                      "fields": [
                        {
                          "type": 212,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Proxy, Runtime>"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "type": 214,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>"
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "Vesting",
                      "fields": [
                        {
                          "type": 215,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Vesting, Runtime>"
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "type": 217,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "ParachainStaking",
                      "fields": [
                        {
                          "type": 221,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainStaking, Runtime>"
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "XcmpQueue",
                      "fields": [
                        {
                          "type": 224,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XcmpQueue, Runtime>"
                        }
                      ],
                      "index": 30
                    },
                    {
                      "name": "PolkadotXcm",
                      "fields": [
                        {
                          "type": 225,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PolkadotXcm, Runtime>"
                        }
                      ],
                      "index": 31
                    },
                    {
                      "name": "CumulusXcm",
                      "fields": [
                        {
                          "type": 246,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CumulusXcm, Runtime>"
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "DmpQueue",
                      "fields": [
                        {
                          "type": 247,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<DmpQueue, Runtime>"
                        }
                      ],
                      "index": 33
                    },
                    {
                      "name": "Ethereum",
                      "fields": [
                        {
                          "type": 248,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Ethereum, Runtime>"
                        }
                      ],
                      "index": 50
                    },
                    {
                      "name": "EVM",
                      "fields": [
                        {
                          "type": 258,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<EVM, Runtime>"
                        }
                      ],
                      "index": 51
                    },
                    {
                      "name": "BaseFee",
                      "fields": [
                        {
                          "type": 262,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<BaseFee, Runtime>"
                        }
                      ],
                      "index": 53
                    },
                    {
                      "name": "LaosEvolution",
                      "fields": [
                        {
                          "type": 263,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<LaosEvolution, Runtime>"
                        }
                      ],
                      "index": 100
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 201,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "batch",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 202,
                          "typeName": "Vec<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::batch`]."
                      ]
                    },
                    {
                      "name": "as_derivative",
                      "fields": [
                        {
                          "name": "index",
                          "type": 42,
                          "typeName": "u16"
                        },
                        {
                          "name": "call",
                          "type": 200,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::as_derivative`]."
                      ]
                    },
                    {
                      "name": "batch_all",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 202,
                          "typeName": "Vec<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::batch_all`]."
                      ]
                    },
                    {
                      "name": "dispatch_as",
                      "fields": [
                        {
                          "name": "as_origin",
                          "type": 203,
                          "typeName": "Box<T::PalletsOrigin>"
                        },
                        {
                          "name": "call",
                          "type": 200,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::dispatch_as`]."
                      ]
                    },
                    {
                      "name": "force_batch",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 202,
                          "typeName": "Vec<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::force_batch`]."
                      ]
                    },
                    {
                      "name": "with_weight",
                      "fields": [
                        {
                          "name": "call",
                          "type": 200,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        },
                        {
                          "name": "weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::with_weight`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 202,
            "type": {
              "def": {
                "sequence": {
                  "type": 200
                }
              }
            }
          },
          {
            "id": 203,
            "type": {
              "path": [
                "laos_runtime",
                "OriginCaller"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "system",
                      "fields": [
                        {
                          "type": 204,
                          "typeName": "frame_system::Origin<Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "PolkadotXcm",
                      "fields": [
                        {
                          "type": 205,
                          "typeName": "pallet_xcm::Origin"
                        }
                      ],
                      "index": 31
                    },
                    {
                      "name": "CumulusXcm",
                      "fields": [
                        {
                          "type": 206,
                          "typeName": "cumulus_pallet_xcm::Origin"
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "Ethereum",
                      "fields": [
                        {
                          "type": 207,
                          "typeName": "pallet_ethereum::Origin"
                        }
                      ],
                      "index": 50
                    },
                    {
                      "name": "Void",
                      "fields": [
                        {
                          "type": 208,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::\n__private::Void"
                        }
                      ],
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 204,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "RawOrigin"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Root",
                      "index": 0
                    },
                    {
                      "name": "Signed",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "None",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 205,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Origin"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Xcm",
                      "fields": [
                        {
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Response",
                      "fields": [
                        {
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 206,
            "type": {
              "path": [
                "cumulus_pallet_xcm",
                "pallet",
                "Origin"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Relay",
                      "index": 0
                    },
                    {
                      "name": "SiblingParachain",
                      "fields": [
                        {
                          "type": 57,
                          "typeName": "ParaId"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 207,
            "type": {
              "path": [
                "pallet_ethereum",
                "RawOrigin"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "EthereumTransaction",
                      "fields": [
                        {
                          "type": 115,
                          "typeName": "H160"
                        }
                      ],
                      "index": 0
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 208,
            "type": {
              "path": [
                "sp_core",
                "Void"
              ],
              "def": {
                "variant": {}
              }
            }
          },
          {
            "id": 209,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "as_multi_threshold_1",
                      "fields": [
                        {
                          "name": "other_signatories",
                          "type": 210,
                          "typeName": "Vec<T::AccountId>"
                        },
                        {
                          "name": "call",
                          "type": 200,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::as_multi_threshold_1`]."
                      ]
                    },
                    {
                      "name": "as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 42,
                          "typeName": "u16"
                        },
                        {
                          "name": "other_signatories",
                          "type": 210,
                          "typeName": "Vec<T::AccountId>"
                        },
                        {
                          "name": "maybe_timepoint",
                          "type": 211,
                          "typeName": "Option<Timepoint<BlockNumberFor<T>>>"
                        },
                        {
                          "name": "call",
                          "type": 200,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::as_multi`]."
                      ]
                    },
                    {
                      "name": "approve_as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 42,
                          "typeName": "u16"
                        },
                        {
                          "name": "other_signatories",
                          "type": 210,
                          "typeName": "Vec<T::AccountId>"
                        },
                        {
                          "name": "maybe_timepoint",
                          "type": 211,
                          "typeName": "Option<Timepoint<BlockNumberFor<T>>>"
                        },
                        {
                          "name": "call_hash",
                          "type": 13,
                          "typeName": "[u8; 32]"
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::approve_as_multi`]."
                      ]
                    },
                    {
                      "name": "cancel_as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 42,
                          "typeName": "u16"
                        },
                        {
                          "name": "other_signatories",
                          "type": 210,
                          "typeName": "Vec<T::AccountId>"
                        },
                        {
                          "name": "timepoint",
                          "type": 39,
                          "typeName": "Timepoint<BlockNumberFor<T>>"
                        },
                        {
                          "name": "call_hash",
                          "type": 13,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::cancel_as_multi`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 210,
            "type": {
              "def": {
                "sequence": {
                  "type": 0
                }
              }
            }
          },
          {
            "id": 211,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 39
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 39
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 212,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "proxy",
                      "fields": [
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "force_proxy_type",
                          "type": 213,
                          "typeName": "Option<T::ProxyType>"
                        },
                        {
                          "name": "call",
                          "type": 200,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::proxy`]."
                      ]
                    },
                    {
                      "name": "add_proxy",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "proxy_type",
                          "type": 41,
                          "typeName": "T::ProxyType"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::add_proxy`]."
                      ]
                    },
                    {
                      "name": "remove_proxy",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "proxy_type",
                          "type": 41,
                          "typeName": "T::ProxyType"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::remove_proxy`]."
                      ]
                    },
                    {
                      "name": "remove_proxies",
                      "index": 3,
                      "docs": [
                        "See [`Pallet::remove_proxies`]."
                      ]
                    },
                    {
                      "name": "create_pure",
                      "fields": [
                        {
                          "name": "proxy_type",
                          "type": 41,
                          "typeName": "T::ProxyType"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "index",
                          "type": 42,
                          "typeName": "u16"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::create_pure`]."
                      ]
                    },
                    {
                      "name": "kill_pure",
                      "fields": [
                        {
                          "name": "spawner",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "proxy_type",
                          "type": 41,
                          "typeName": "T::ProxyType"
                        },
                        {
                          "name": "index",
                          "type": 42,
                          "typeName": "u16"
                        },
                        {
                          "name": "height",
                          "type": 63,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "ext_index",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::kill_pure`]."
                      ]
                    },
                    {
                      "name": "announce",
                      "fields": [
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::announce`]."
                      ]
                    },
                    {
                      "name": "remove_announcement",
                      "fields": [
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::remove_announcement`]."
                      ]
                    },
                    {
                      "name": "reject_announcement",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::reject_announcement`]."
                      ]
                    },
                    {
                      "name": "proxy_announced",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "force_proxy_type",
                          "type": 213,
                          "typeName": "Option<T::ProxyType>"
                        },
                        {
                          "name": "call",
                          "type": 200,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::proxy_announced`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 213,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 41
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 41
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 214,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transfer_allow_death",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "value",
                          "type": 66,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::transfer_allow_death`]."
                      ]
                    },
                    {
                      "name": "set_balance_deprecated",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "new_free",
                          "type": 66,
                          "typeName": "T::Balance"
                        },
                        {
                          "name": "old_reserved",
                          "type": 66,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_balance_deprecated`]."
                      ]
                    },
                    {
                      "name": "force_transfer",
                      "fields": [
                        {
                          "name": "source",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "dest",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "value",
                          "type": 66,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::force_transfer`]."
                      ]
                    },
                    {
                      "name": "transfer_keep_alive",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "value",
                          "type": 66,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::transfer_keep_alive`]."
                      ]
                    },
                    {
                      "name": "transfer_all",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "keep_alive",
                          "type": 49,
                          "typeName": "bool"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::transfer_all`]."
                      ]
                    },
                    {
                      "name": "force_unreserve",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::force_unreserve`]."
                      ]
                    },
                    {
                      "name": "upgrade_accounts",
                      "fields": [
                        {
                          "name": "who",
                          "type": 210,
                          "typeName": "Vec<T::AccountId>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::upgrade_accounts`]."
                      ]
                    },
                    {
                      "name": "transfer",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "value",
                          "type": 66,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::transfer`]."
                      ]
                    },
                    {
                      "name": "force_set_balance",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "new_free",
                          "type": 66,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::force_set_balance`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 215,
            "type": {
              "path": [
                "pallet_vesting",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "vest",
                      "index": 0,
                      "docs": [
                        "See [`Pallet::vest`]."
                      ]
                    },
                    {
                      "name": "vest_other",
                      "fields": [
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::vest_other`]."
                      ]
                    },
                    {
                      "name": "vested_transfer",
                      "fields": [
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "schedule",
                          "type": 216,
                          "typeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::vested_transfer`]."
                      ]
                    },
                    {
                      "name": "force_vested_transfer",
                      "fields": [
                        {
                          "name": "source",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "schedule",
                          "type": 216,
                          "typeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::force_vested_transfer`]."
                      ]
                    },
                    {
                      "name": "merge_schedules",
                      "fields": [
                        {
                          "name": "schedule1_index",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "schedule2_index",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::merge_schedules`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 216,
            "type": {
              "path": [
                "pallet_vesting",
                "vesting_info",
                "VestingInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "locked",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "per_block",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "starting_block",
                      "type": 4,
                      "typeName": "BlockNumber"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 217,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_keys",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 218,
                          "typeName": "T::Keys"
                        },
                        {
                          "name": "proof",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_keys`]."
                      ]
                    },
                    {
                      "name": "purge_keys",
                      "index": 1,
                      "docs": [
                        "See [`Pallet::purge_keys`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 218,
            "type": {
              "path": [
                "laos_runtime",
                "SessionKeys"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "aura",
                      "type": 219,
                      "typeName": "<Aura as $crate::BoundToRuntimeAppPublic>::Public"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 219,
            "type": {
              "path": [
                "sp_consensus_aura",
                "sr25519",
                "app_sr25519",
                "Public"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 220,
                      "typeName": "sr25519::Public"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 220,
            "type": {
              "path": [
                "sp_core",
                "sr25519",
                "Public"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 221,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_staking_expectations",
                      "fields": [
                        {
                          "name": "expectations",
                          "type": 222,
                          "typeName": "Range<BalanceOf<T>>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_staking_expectations`]."
                      ]
                    },
                    {
                      "name": "set_inflation",
                      "fields": [
                        {
                          "name": "schedule",
                          "type": 223,
                          "typeName": "Range<Perbill>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_inflation`]."
                      ]
                    },
                    {
                      "name": "set_parachain_bond_account",
                      "fields": [
                        {
                          "name": "new",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_parachain_bond_account`]."
                      ]
                    },
                    {
                      "name": "set_parachain_bond_reserve_percent",
                      "fields": [
                        {
                          "name": "new",
                          "type": 53,
                          "typeName": "Percent"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::set_parachain_bond_reserve_percent`]."
                      ]
                    },
                    {
                      "name": "set_total_selected",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::set_total_selected`]."
                      ]
                    },
                    {
                      "name": "set_collator_commission",
                      "fields": [
                        {
                          "name": "new",
                          "type": 54,
                          "typeName": "Perbill"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::set_collator_commission`]."
                      ]
                    },
                    {
                      "name": "set_blocks_per_round",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::set_blocks_per_round`]."
                      ]
                    },
                    {
                      "name": "join_candidates",
                      "fields": [
                        {
                          "name": "bond",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "candidate_count",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::join_candidates`]."
                      ]
                    },
                    {
                      "name": "schedule_leave_candidates",
                      "fields": [
                        {
                          "name": "candidate_count",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::schedule_leave_candidates`]."
                      ]
                    },
                    {
                      "name": "execute_leave_candidates",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "candidate_delegation_count",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::execute_leave_candidates`]."
                      ]
                    },
                    {
                      "name": "cancel_leave_candidates",
                      "fields": [
                        {
                          "name": "candidate_count",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::cancel_leave_candidates`]."
                      ]
                    },
                    {
                      "name": "go_offline",
                      "index": 11,
                      "docs": [
                        "See [`Pallet::go_offline`]."
                      ]
                    },
                    {
                      "name": "go_online",
                      "index": 12,
                      "docs": [
                        "See [`Pallet::go_online`]."
                      ]
                    },
                    {
                      "name": "candidate_bond_more",
                      "fields": [
                        {
                          "name": "more",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::candidate_bond_more`]."
                      ]
                    },
                    {
                      "name": "schedule_candidate_bond_less",
                      "fields": [
                        {
                          "name": "less",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::schedule_candidate_bond_less`]."
                      ]
                    },
                    {
                      "name": "execute_candidate_bond_less",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::execute_candidate_bond_less`]."
                      ]
                    },
                    {
                      "name": "cancel_candidate_bond_less",
                      "index": 16,
                      "docs": [
                        "See [`Pallet::cancel_candidate_bond_less`]."
                      ]
                    },
                    {
                      "name": "delegate",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "candidate_delegation_count",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "delegation_count",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::delegate`]."
                      ]
                    },
                    {
                      "name": "delegate_with_auto_compound",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "auto_compound",
                          "type": 53,
                          "typeName": "Percent"
                        },
                        {
                          "name": "candidate_delegation_count",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "candidate_auto_compounding_delegation_count",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "delegation_count",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::delegate_with_auto_compound`]."
                      ]
                    },
                    {
                      "name": "removed_call_19",
                      "index": 19,
                      "docs": [
                        "See [`Pallet::removed_call_19`]."
                      ]
                    },
                    {
                      "name": "removed_call_20",
                      "index": 20,
                      "docs": [
                        "See [`Pallet::removed_call_20`]."
                      ]
                    },
                    {
                      "name": "removed_call_21",
                      "index": 21,
                      "docs": [
                        "See [`Pallet::removed_call_21`]."
                      ]
                    },
                    {
                      "name": "schedule_revoke_delegation",
                      "fields": [
                        {
                          "name": "collator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "See [`Pallet::schedule_revoke_delegation`]."
                      ]
                    },
                    {
                      "name": "delegator_bond_more",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "more",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "See [`Pallet::delegator_bond_more`]."
                      ]
                    },
                    {
                      "name": "schedule_delegator_bond_less",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "less",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "See [`Pallet::schedule_delegator_bond_less`]."
                      ]
                    },
                    {
                      "name": "execute_delegation_request",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "See [`Pallet::execute_delegation_request`]."
                      ]
                    },
                    {
                      "name": "cancel_delegation_request",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 26,
                      "docs": [
                        "See [`Pallet::cancel_delegation_request`]."
                      ]
                    },
                    {
                      "name": "set_auto_compound",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "value",
                          "type": 53,
                          "typeName": "Percent"
                        },
                        {
                          "name": "candidate_auto_compounding_delegation_count_hint",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "delegation_count_hint",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 27,
                      "docs": [
                        "See [`Pallet::set_auto_compound`]."
                      ]
                    },
                    {
                      "name": "hotfix_remove_delegation_requests_exited_candidates",
                      "fields": [
                        {
                          "name": "candidates",
                          "type": 210,
                          "typeName": "Vec<T::AccountId>"
                        }
                      ],
                      "index": 28,
                      "docs": [
                        "See [`Pallet::hotfix_remove_delegation_requests_exited_candidates`]."
                      ]
                    },
                    {
                      "name": "notify_inactive_collator",
                      "fields": [
                        {
                          "name": "collator",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 29,
                      "docs": [
                        "See [`Pallet::notify_inactive_collator`]."
                      ]
                    },
                    {
                      "name": "enable_marking_offline",
                      "fields": [
                        {
                          "name": "value",
                          "type": 49,
                          "typeName": "bool"
                        }
                      ],
                      "index": 30,
                      "docs": [
                        "See [`Pallet::enable_marking_offline`]."
                      ]
                    },
                    {
                      "name": "force_join_candidates",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "bond",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "candidate_count",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 31,
                      "docs": [
                        "See [`Pallet::force_join_candidates`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 222,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "inflation",
                "Range"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "min",
                      "type": 6,
                      "typeName": "T"
                    },
                    {
                      "name": "ideal",
                      "type": 6,
                      "typeName": "T"
                    },
                    {
                      "name": "max",
                      "type": 6,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 223,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "inflation",
                "Range"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 54
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "min",
                      "type": 54,
                      "typeName": "T"
                    },
                    {
                      "name": "ideal",
                      "type": 54,
                      "typeName": "T"
                    },
                    {
                      "name": "max",
                      "type": 54,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 224,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "service_overweight",
                      "fields": [
                        {
                          "name": "index",
                          "type": 11,
                          "typeName": "OverweightIndex"
                        },
                        {
                          "name": "weight_limit",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::service_overweight`]."
                      ]
                    },
                    {
                      "name": "suspend_xcm_execution",
                      "index": 1,
                      "docs": [
                        "See [`Pallet::suspend_xcm_execution`]."
                      ]
                    },
                    {
                      "name": "resume_xcm_execution",
                      "index": 2,
                      "docs": [
                        "See [`Pallet::resume_xcm_execution`]."
                      ]
                    },
                    {
                      "name": "update_suspend_threshold",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::update_suspend_threshold`]."
                      ]
                    },
                    {
                      "name": "update_drop_threshold",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::update_drop_threshold`]."
                      ]
                    },
                    {
                      "name": "update_resume_threshold",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::update_resume_threshold`]."
                      ]
                    },
                    {
                      "name": "update_threshold_weight",
                      "fields": [
                        {
                          "name": "new",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::update_threshold_weight`]."
                      ]
                    },
                    {
                      "name": "update_weight_restrict_decay",
                      "fields": [
                        {
                          "name": "new",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::update_weight_restrict_decay`]."
                      ]
                    },
                    {
                      "name": "update_xcmp_max_individual_weight",
                      "fields": [
                        {
                          "name": "new",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::update_xcmp_max_individual_weight`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 225,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "send",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 111,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "message",
                          "type": 226,
                          "typeName": "Box<VersionedXcm<()>>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::send`]."
                      ]
                    },
                    {
                      "name": "teleport_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 111,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 111,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "assets",
                          "type": 97,
                          "typeName": "Box<VersionedMultiAssets>"
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::teleport_assets`]."
                      ]
                    },
                    {
                      "name": "reserve_transfer_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 111,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 111,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "assets",
                          "type": 97,
                          "typeName": "Box<VersionedMultiAssets>"
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::reserve_transfer_assets`]."
                      ]
                    },
                    {
                      "name": "execute",
                      "fields": [
                        {
                          "name": "message",
                          "type": 238,
                          "typeName": "Box<VersionedXcm<<T as SysConfig>::RuntimeCall>>"
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::execute`]."
                      ]
                    },
                    {
                      "name": "force_xcm_version",
                      "fields": [
                        {
                          "name": "location",
                          "type": 60,
                          "typeName": "Box<MultiLocation>"
                        },
                        {
                          "name": "version",
                          "type": 4,
                          "typeName": "XcmVersion"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::force_xcm_version`]."
                      ]
                    },
                    {
                      "name": "force_default_xcm_version",
                      "fields": [
                        {
                          "name": "maybe_xcm_version",
                          "type": 166,
                          "typeName": "Option<XcmVersion>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::force_default_xcm_version`]."
                      ]
                    },
                    {
                      "name": "force_subscribe_version_notify",
                      "fields": [
                        {
                          "name": "location",
                          "type": 111,
                          "typeName": "Box<VersionedMultiLocation>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::force_subscribe_version_notify`]."
                      ]
                    },
                    {
                      "name": "force_unsubscribe_version_notify",
                      "fields": [
                        {
                          "name": "location",
                          "type": 111,
                          "typeName": "Box<VersionedMultiLocation>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::force_unsubscribe_version_notify`]."
                      ]
                    },
                    {
                      "name": "limited_reserve_transfer_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 111,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 111,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "assets",
                          "type": 97,
                          "typeName": "Box<VersionedMultiAssets>"
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "weight_limit",
                          "type": 96,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::limited_reserve_transfer_assets`]."
                      ]
                    },
                    {
                      "name": "limited_teleport_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 111,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 111,
                          "typeName": "Box<VersionedMultiLocation>"
                        },
                        {
                          "name": "assets",
                          "type": 97,
                          "typeName": "Box<VersionedMultiAssets>"
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "weight_limit",
                          "type": 96,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::limited_teleport_assets`]."
                      ]
                    },
                    {
                      "name": "force_suspension",
                      "fields": [
                        {
                          "name": "suspended",
                          "type": 49,
                          "typeName": "bool"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::force_suspension`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 226,
            "type": {
              "path": [
                "staging_xcm",
                "VersionedXcm"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "type": 227,
                          "typeName": "v2::Xcm<RuntimeCall>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "type": 69,
                          "typeName": "v3::Xcm<RuntimeCall>"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 227,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "Xcm"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 228,
                      "typeName": "Vec<Instruction<RuntimeCall>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 228,
            "type": {
              "def": {
                "sequence": {
                  "type": 229
                }
              }
            }
          },
          {
            "id": 229,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "Instruction"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "type": 98,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "type": 98,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "type": 98,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "response",
                          "type": 230,
                          "typeName": "Response"
                        },
                        {
                          "name": "max_weight",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 98,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "beneficiary",
                          "type": 102,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 98,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "dest",
                          "type": 102,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 227,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_type",
                          "type": 90,
                          "typeName": "OriginKind"
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 10,
                          "typeName": "u64"
                        },
                        {
                          "name": "call",
                          "type": 91,
                          "typeName": "DoubleEncoded<RuntimeCall>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "max_message_size",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "max_capacity",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "sender",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "recipient",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "ClearOrigin",
                      "index": 10
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "type": 103,
                          "typeName": "InteriorMultiLocation"
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "dest",
                          "type": 102,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 234,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "max_assets",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "beneficiary",
                          "type": 102,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 234,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "max_assets",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "dest",
                          "type": 102,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 227,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 234,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "receive",
                          "type": 98,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 234,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "reserve",
                          "type": 102,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 227,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 234,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "dest",
                          "type": 102,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 227,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "QueryHolding",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "dest",
                          "type": 102,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "assets",
                          "type": 234,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 100,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "weight_limit",
                          "type": 237,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "RefundSurplus",
                      "index": 20
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "type": 227,
                          "typeName": "Xcm<RuntimeCall>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "type": 227,
                          "typeName": "Xcm<RuntimeCall>"
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "ClearError",
                      "index": 23
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 98,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "ticket",
                          "type": 102,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 25
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "index": 27
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 230,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "Response"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Null",
                      "index": 0
                    },
                    {
                      "name": "Assets",
                      "fields": [
                        {
                          "type": 98,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ExecutionResult",
                      "fields": [
                        {
                          "type": 231,
                          "typeName": "Option<(u32, Error)>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Version",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "super::Version"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 231,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 232
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 232
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 232,
            "type": {
              "def": {
                "tuple": [
                  4,
                  233
                ]
              }
            }
          },
          {
            "id": 233,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "traits",
                "Error"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Overflow",
                      "index": 0
                    },
                    {
                      "name": "Unimplemented",
                      "index": 1
                    },
                    {
                      "name": "UntrustedReserveLocation",
                      "index": 2
                    },
                    {
                      "name": "UntrustedTeleportLocation",
                      "index": 3
                    },
                    {
                      "name": "MultiLocationFull",
                      "index": 4
                    },
                    {
                      "name": "MultiLocationNotInvertible",
                      "index": 5
                    },
                    {
                      "name": "BadOrigin",
                      "index": 6
                    },
                    {
                      "name": "InvalidLocation",
                      "index": 7
                    },
                    {
                      "name": "AssetNotFound",
                      "index": 8
                    },
                    {
                      "name": "FailedToTransactAsset",
                      "index": 9
                    },
                    {
                      "name": "NotWithdrawable",
                      "index": 10
                    },
                    {
                      "name": "LocationCannotHold",
                      "index": 11
                    },
                    {
                      "name": "ExceedsMaxMessageSize",
                      "index": 12
                    },
                    {
                      "name": "DestinationUnsupported",
                      "index": 13
                    },
                    {
                      "name": "Transport",
                      "index": 14
                    },
                    {
                      "name": "Unroutable",
                      "index": 15
                    },
                    {
                      "name": "UnknownClaim",
                      "index": 16
                    },
                    {
                      "name": "FailedToDecode",
                      "index": 17
                    },
                    {
                      "name": "MaxWeightInvalid",
                      "index": 18
                    },
                    {
                      "name": "NotHoldingFees",
                      "index": 19
                    },
                    {
                      "name": "TooExpensive",
                      "index": 20
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "type": 11,
                          "typeName": "u64"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "UnhandledXcmVersion",
                      "index": 22
                    },
                    {
                      "name": "WeightLimitReached",
                      "fields": [
                        {
                          "type": 11,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 23
                    },
                    {
                      "name": "Barrier",
                      "index": 24
                    },
                    {
                      "name": "WeightNotComputable",
                      "index": 25
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 234,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multiasset",
                "MultiAssetFilter"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Definite",
                      "fields": [
                        {
                          "type": 98,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Wild",
                      "fields": [
                        {
                          "type": 235,
                          "typeName": "WildMultiAsset"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 235,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multiasset",
                "WildMultiAsset"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "All",
                      "index": 0
                    },
                    {
                      "name": "AllOf",
                      "fields": [
                        {
                          "name": "id",
                          "type": 101,
                          "typeName": "AssetId"
                        },
                        {
                          "name": "fun",
                          "type": 236,
                          "typeName": "WildFungibility"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 236,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multiasset",
                "WildFungibility"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "index": 0
                    },
                    {
                      "name": "NonFungible",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 237,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "WeightLimit"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unlimited",
                      "index": 0
                    },
                    {
                      "name": "Limited",
                      "fields": [
                        {
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 238,
            "type": {
              "path": [
                "staging_xcm",
                "VersionedXcm"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "type": 239,
                          "typeName": "v2::Xcm<RuntimeCall>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "type": 243,
                          "typeName": "v3::Xcm<RuntimeCall>"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 239,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "Xcm"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 240,
                      "typeName": "Vec<Instruction<RuntimeCall>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 240,
            "type": {
              "def": {
                "sequence": {
                  "type": 241
                }
              }
            }
          },
          {
            "id": 241,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "Instruction"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "type": 98,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "type": 98,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "type": 98,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "response",
                          "type": 230,
                          "typeName": "Response"
                        },
                        {
                          "name": "max_weight",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 98,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "beneficiary",
                          "type": 102,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 98,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "dest",
                          "type": 102,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 227,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_type",
                          "type": 90,
                          "typeName": "OriginKind"
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 10,
                          "typeName": "u64"
                        },
                        {
                          "name": "call",
                          "type": 242,
                          "typeName": "DoubleEncoded<RuntimeCall>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "max_message_size",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "max_capacity",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "sender",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "recipient",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "ClearOrigin",
                      "index": 10
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "type": 103,
                          "typeName": "InteriorMultiLocation"
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "dest",
                          "type": 102,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 234,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "max_assets",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "beneficiary",
                          "type": 102,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 234,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "max_assets",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "dest",
                          "type": 102,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 227,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 234,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "receive",
                          "type": 98,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 234,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "reserve",
                          "type": 102,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 227,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 234,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "dest",
                          "type": 102,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 227,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "QueryHolding",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "dest",
                          "type": 102,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "assets",
                          "type": 234,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 100,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "weight_limit",
                          "type": 237,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "RefundSurplus",
                      "index": 20
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "type": 239,
                          "typeName": "Xcm<RuntimeCall>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "type": 239,
                          "typeName": "Xcm<RuntimeCall>"
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "ClearError",
                      "index": 23
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 98,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "ticket",
                          "type": 102,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 25
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "index": 27
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 242,
            "type": {
              "path": [
                "staging_xcm",
                "double_encoded",
                "DoubleEncoded"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "encoded",
                      "type": 14,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 243,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "Xcm"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 244,
                      "typeName": "Vec<Instruction<Call>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 244,
            "type": {
              "def": {
                "sequence": {
                  "type": 245
                }
              }
            }
          },
          {
            "id": 245,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "Instruction"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "type": 72,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "type": 72,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "type": 72,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "response",
                          "type": 80,
                          "typeName": "Response"
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "querier",
                          "type": 89,
                          "typeName": "Option<MultiLocation>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 72,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "beneficiary",
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 72,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "dest",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 69,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_kind",
                          "type": 90,
                          "typeName": "OriginKind"
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 9,
                          "typeName": "Weight"
                        },
                        {
                          "name": "call",
                          "type": 242,
                          "typeName": "DoubleEncoded<Call>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "max_message_size",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "max_capacity",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "sender",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "recipient",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "ClearOrigin",
                      "index": 10
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "type": 61,
                          "typeName": "InteriorMultiLocation"
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "type": 92,
                          "typeName": "QueryResponseInfo"
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 93,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "beneficiary",
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 93,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "dest",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 69,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 93,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "want",
                          "type": 72,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "maximal",
                          "type": 49,
                          "typeName": "bool"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 93,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "reserve",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 69,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 93,
                          "typeName": "MultiAssetFilter"
                        },
                        {
                          "name": "dest",
                          "type": 60,
                          "typeName": "MultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 69,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "ReportHolding",
                      "fields": [
                        {
                          "name": "response_info",
                          "type": 92,
                          "typeName": "QueryResponseInfo"
                        },
                        {
                          "name": "assets",
                          "type": 93,
                          "typeName": "MultiAssetFilter"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 74,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "weight_limit",
                          "type": 96,
                          "typeName": "WeightLimit"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "RefundSurplus",
                      "index": 20
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "type": 243,
                          "typeName": "Xcm<Call>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "type": 243,
                          "typeName": "Xcm<Call>"
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "ClearError",
                      "index": 23
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 72,
                          "typeName": "MultiAssets"
                        },
                        {
                          "name": "ticket",
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "type": 10,
                          "typeName": "u64"
                        }
                      ],
                      "index": 25
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId"
                        },
                        {
                          "name": "max_response_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "index": 27
                    },
                    {
                      "name": "BurnAsset",
                      "fields": [
                        {
                          "type": 72,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 28
                    },
                    {
                      "name": "ExpectAsset",
                      "fields": [
                        {
                          "type": 72,
                          "typeName": "MultiAssets"
                        }
                      ],
                      "index": 29
                    },
                    {
                      "name": "ExpectOrigin",
                      "fields": [
                        {
                          "type": 89,
                          "typeName": "Option<MultiLocation>"
                        }
                      ],
                      "index": 30
                    },
                    {
                      "name": "ExpectError",
                      "fields": [
                        {
                          "type": 81,
                          "typeName": "Option<(u32, Error)>"
                        }
                      ],
                      "index": 31
                    },
                    {
                      "name": "ExpectTransactStatus",
                      "fields": [
                        {
                          "type": 87,
                          "typeName": "MaybeErrorCode"
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "QueryPallet",
                      "fields": [
                        {
                          "name": "module_name",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "response_info",
                          "type": 92,
                          "typeName": "QueryResponseInfo"
                        }
                      ],
                      "index": 33
                    },
                    {
                      "name": "ExpectPallet",
                      "fields": [
                        {
                          "name": "index",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "name",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "module_name",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "crate_major",
                          "type": 63,
                          "typeName": "u32"
                        },
                        {
                          "name": "min_crate_minor",
                          "type": 63,
                          "typeName": "u32"
                        }
                      ],
                      "index": 34
                    },
                    {
                      "name": "ReportTransactStatus",
                      "fields": [
                        {
                          "type": 92,
                          "typeName": "QueryResponseInfo"
                        }
                      ],
                      "index": 35
                    },
                    {
                      "name": "ClearTransactStatus",
                      "index": 36
                    },
                    {
                      "name": "UniversalOrigin",
                      "fields": [
                        {
                          "type": 62,
                          "typeName": "Junction"
                        }
                      ],
                      "index": 37
                    },
                    {
                      "name": "ExportMessage",
                      "fields": [
                        {
                          "name": "network",
                          "type": 65,
                          "typeName": "NetworkId"
                        },
                        {
                          "name": "destination",
                          "type": 61,
                          "typeName": "InteriorMultiLocation"
                        },
                        {
                          "name": "xcm",
                          "type": 69,
                          "typeName": "Xcm<()>"
                        }
                      ],
                      "index": 38
                    },
                    {
                      "name": "LockAsset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 74,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "unlocker",
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 39
                    },
                    {
                      "name": "UnlockAsset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 74,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "target",
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 40
                    },
                    {
                      "name": "NoteUnlockable",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 74,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "owner",
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 41
                    },
                    {
                      "name": "RequestUnlock",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 74,
                          "typeName": "MultiAsset"
                        },
                        {
                          "name": "locker",
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 42
                    },
                    {
                      "name": "SetFeesMode",
                      "fields": [
                        {
                          "name": "jit_withdraw",
                          "type": 49,
                          "typeName": "bool"
                        }
                      ],
                      "index": 43
                    },
                    {
                      "name": "SetTopic",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 44
                    },
                    {
                      "name": "ClearTopic",
                      "index": 45
                    },
                    {
                      "name": "AliasOrigin",
                      "fields": [
                        {
                          "type": 60,
                          "typeName": "MultiLocation"
                        }
                      ],
                      "index": 46
                    },
                    {
                      "name": "UnpaidExecution",
                      "fields": [
                        {
                          "name": "weight_limit",
                          "type": 96,
                          "typeName": "WeightLimit"
                        },
                        {
                          "name": "check_origin",
                          "type": 89,
                          "typeName": "Option<MultiLocation>"
                        }
                      ],
                      "index": 47
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 246,
            "type": {
              "path": [
                "cumulus_pallet_xcm",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {}
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 247,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "service_overweight",
                      "fields": [
                        {
                          "name": "index",
                          "type": 11,
                          "typeName": "OverweightIndex"
                        },
                        {
                          "name": "weight_limit",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::service_overweight`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 248,
            "type": {
              "path": [
                "pallet_ethereum",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transact",
                      "fields": [
                        {
                          "name": "transaction",
                          "type": 249,
                          "typeName": "Transaction"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::transact`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 249,
            "type": {
              "path": [
                "ethereum",
                "transaction",
                "TransactionV2"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Legacy",
                      "fields": [
                        {
                          "type": 250,
                          "typeName": "LegacyTransaction"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "EIP2930",
                      "fields": [
                        {
                          "type": 254,
                          "typeName": "EIP2930Transaction"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "EIP1559",
                      "fields": [
                        {
                          "type": 257,
                          "typeName": "EIP1559Transaction"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 250,
            "type": {
              "path": [
                "ethereum",
                "transaction",
                "LegacyTransaction"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "nonce",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "gas_price",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "gas_limit",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "action",
                      "type": 251,
                      "typeName": "TransactionAction"
                    },
                    {
                      "name": "value",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "input",
                      "type": 14,
                      "typeName": "Bytes"
                    },
                    {
                      "name": "signature",
                      "type": 252,
                      "typeName": "TransactionSignature"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 251,
            "type": {
              "path": [
                "ethereum",
                "transaction",
                "TransactionAction"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Call",
                      "fields": [
                        {
                          "type": 115,
                          "typeName": "H160"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Create",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 252,
            "type": {
              "path": [
                "ethereum",
                "transaction",
                "TransactionSignature"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "v",
                      "type": 253,
                      "typeName": "TransactionRecoveryId"
                    },
                    {
                      "name": "r",
                      "type": 12,
                      "typeName": "H256"
                    },
                    {
                      "name": "s",
                      "type": 12,
                      "typeName": "H256"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 253,
            "type": {
              "path": [
                "ethereum",
                "transaction",
                "TransactionRecoveryId"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 11,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 254,
            "type": {
              "path": [
                "ethereum",
                "transaction",
                "EIP2930Transaction"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": 11,
                      "typeName": "u64"
                    },
                    {
                      "name": "nonce",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "gas_price",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "gas_limit",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "action",
                      "type": 251,
                      "typeName": "TransactionAction"
                    },
                    {
                      "name": "value",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "input",
                      "type": 14,
                      "typeName": "Bytes"
                    },
                    {
                      "name": "access_list",
                      "type": 255,
                      "typeName": "AccessList"
                    },
                    {
                      "name": "odd_y_parity",
                      "type": 49,
                      "typeName": "bool"
                    },
                    {
                      "name": "r",
                      "type": 12,
                      "typeName": "H256"
                    },
                    {
                      "name": "s",
                      "type": 12,
                      "typeName": "H256"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 255,
            "type": {
              "def": {
                "sequence": {
                  "type": 256
                }
              }
            }
          },
          {
            "id": 256,
            "type": {
              "path": [
                "ethereum",
                "transaction",
                "AccessListItem"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "address",
                      "type": 115,
                      "typeName": "Address"
                    },
                    {
                      "name": "storage_keys",
                      "type": 126,
                      "typeName": "Vec<H256>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 257,
            "type": {
              "path": [
                "ethereum",
                "transaction",
                "EIP1559Transaction"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": 11,
                      "typeName": "u64"
                    },
                    {
                      "name": "nonce",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "max_priority_fee_per_gas",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "max_fee_per_gas",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "gas_limit",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "action",
                      "type": 251,
                      "typeName": "TransactionAction"
                    },
                    {
                      "name": "value",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "input",
                      "type": 14,
                      "typeName": "Bytes"
                    },
                    {
                      "name": "access_list",
                      "type": 255,
                      "typeName": "AccessList"
                    },
                    {
                      "name": "odd_y_parity",
                      "type": 49,
                      "typeName": "bool"
                    },
                    {
                      "name": "r",
                      "type": 12,
                      "typeName": "H256"
                    },
                    {
                      "name": "s",
                      "type": 12,
                      "typeName": "H256"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 258,
            "type": {
              "path": [
                "pallet_evm",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "withdraw",
                      "fields": [
                        {
                          "name": "address",
                          "type": 115,
                          "typeName": "H160"
                        },
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::withdraw`]."
                      ]
                    },
                    {
                      "name": "call",
                      "fields": [
                        {
                          "name": "source",
                          "type": 115,
                          "typeName": "H160"
                        },
                        {
                          "name": "target",
                          "type": 115,
                          "typeName": "H160"
                        },
                        {
                          "name": "input",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "value",
                          "type": 128,
                          "typeName": "U256"
                        },
                        {
                          "name": "gas_limit",
                          "type": 11,
                          "typeName": "u64"
                        },
                        {
                          "name": "max_fee_per_gas",
                          "type": 128,
                          "typeName": "U256"
                        },
                        {
                          "name": "max_priority_fee_per_gas",
                          "type": 259,
                          "typeName": "Option<U256>"
                        },
                        {
                          "name": "nonce",
                          "type": 259,
                          "typeName": "Option<U256>"
                        },
                        {
                          "name": "access_list",
                          "type": 260,
                          "typeName": "Vec<(H160, Vec<H256>)>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::call`]."
                      ]
                    },
                    {
                      "name": "create",
                      "fields": [
                        {
                          "name": "source",
                          "type": 115,
                          "typeName": "H160"
                        },
                        {
                          "name": "init",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "value",
                          "type": 128,
                          "typeName": "U256"
                        },
                        {
                          "name": "gas_limit",
                          "type": 11,
                          "typeName": "u64"
                        },
                        {
                          "name": "max_fee_per_gas",
                          "type": 128,
                          "typeName": "U256"
                        },
                        {
                          "name": "max_priority_fee_per_gas",
                          "type": 259,
                          "typeName": "Option<U256>"
                        },
                        {
                          "name": "nonce",
                          "type": 259,
                          "typeName": "Option<U256>"
                        },
                        {
                          "name": "access_list",
                          "type": 260,
                          "typeName": "Vec<(H160, Vec<H256>)>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::create`]."
                      ]
                    },
                    {
                      "name": "create2",
                      "fields": [
                        {
                          "name": "source",
                          "type": 115,
                          "typeName": "H160"
                        },
                        {
                          "name": "init",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "salt",
                          "type": 12,
                          "typeName": "H256"
                        },
                        {
                          "name": "value",
                          "type": 128,
                          "typeName": "U256"
                        },
                        {
                          "name": "gas_limit",
                          "type": 11,
                          "typeName": "u64"
                        },
                        {
                          "name": "max_fee_per_gas",
                          "type": 128,
                          "typeName": "U256"
                        },
                        {
                          "name": "max_priority_fee_per_gas",
                          "type": 259,
                          "typeName": "Option<U256>"
                        },
                        {
                          "name": "nonce",
                          "type": 259,
                          "typeName": "Option<U256>"
                        },
                        {
                          "name": "access_list",
                          "type": 260,
                          "typeName": "Vec<(H160, Vec<H256>)>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::create2`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 259,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 128
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 128
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 260,
            "type": {
              "def": {
                "sequence": {
                  "type": 261
                }
              }
            }
          },
          {
            "id": 261,
            "type": {
              "def": {
                "tuple": [
                  115,
                  126
                ]
              }
            }
          },
          {
            "id": 262,
            "type": {
              "path": [
                "pallet_base_fee",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_base_fee_per_gas",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 128,
                          "typeName": "U256"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_base_fee_per_gas`]."
                      ]
                    },
                    {
                      "name": "set_elasticity",
                      "fields": [
                        {
                          "name": "elasticity",
                          "type": 130,
                          "typeName": "Permill"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_elasticity`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 263,
            "type": {
              "path": [
                "pallet_laos_evolution",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {}
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 264,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RequireSudo",
                      "index": 0,
                      "docs": [
                        "Sender must be the Sudo account"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the Sudo pallet"
              ]
            }
          },
          {
            "id": 265,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooManyCalls",
                      "index": 0,
                      "docs": [
                        "Too many calls batched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 266,
            "type": {
              "def": {
                "tuple": [
                  0,
                  13
                ]
              }
            }
          },
          {
            "id": 267,
            "type": {
              "path": [
                "pallet_multisig",
                "Multisig"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "MaxApprovals",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "when",
                      "type": 39,
                      "typeName": "Timepoint<BlockNumber>"
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "depositor",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "approvals",
                      "type": 268,
                      "typeName": "BoundedVec<AccountId, MaxApprovals>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 268,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 210,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 269,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MinimumThreshold",
                      "index": 0,
                      "docs": [
                        "Threshold must be 2 or greater."
                      ]
                    },
                    {
                      "name": "AlreadyApproved",
                      "index": 1,
                      "docs": [
                        "Call is already approved by this signatory."
                      ]
                    },
                    {
                      "name": "NoApprovalsNeeded",
                      "index": 2,
                      "docs": [
                        "Call doesn't need any (more) approvals."
                      ]
                    },
                    {
                      "name": "TooFewSignatories",
                      "index": 3,
                      "docs": [
                        "There are too few signatories in the list."
                      ]
                    },
                    {
                      "name": "TooManySignatories",
                      "index": 4,
                      "docs": [
                        "There are too many signatories in the list."
                      ]
                    },
                    {
                      "name": "SignatoriesOutOfOrder",
                      "index": 5,
                      "docs": [
                        "The signatories were provided out of order; they should be ordered."
                      ]
                    },
                    {
                      "name": "SenderInSignatories",
                      "index": 6,
                      "docs": [
                        "The sender was contained in the other signatories; it shouldn't be."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "index": 7,
                      "docs": [
                        "Multisig operation not found when attempting to cancel."
                      ]
                    },
                    {
                      "name": "NotOwner",
                      "index": 8,
                      "docs": [
                        "Only the account that originally created the multisig is able to cancel it."
                      ]
                    },
                    {
                      "name": "NoTimepoint",
                      "index": 9,
                      "docs": [
                        "No timepoint was given, yet the multisig operation is already underway."
                      ]
                    },
                    {
                      "name": "WrongTimepoint",
                      "index": 10,
                      "docs": [
                        "A different timepoint was given to the multisig operation that is underway."
                      ]
                    },
                    {
                      "name": "UnexpectedTimepoint",
                      "index": 11,
                      "docs": [
                        "A timepoint was given, yet no multisig operation is underway."
                      ]
                    },
                    {
                      "name": "MaxWeightTooLow",
                      "index": 12,
                      "docs": [
                        "The maximum weight information provided was too low."
                      ]
                    },
                    {
                      "name": "AlreadyStored",
                      "index": 13,
                      "docs": [
                        "The data to be stored is already stored."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 270,
            "type": {
              "def": {
                "tuple": [
                  271,
                  6
                ]
              }
            }
          },
          {
            "id": 271,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 272
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 273,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 272,
            "type": {
              "path": [
                "pallet_proxy",
                "ProxyDefinition"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "ProxyType",
                  "type": 41
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "delegate",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "proxy_type",
                      "type": 41,
                      "typeName": "ProxyType"
                    },
                    {
                      "name": "delay",
                      "type": 4,
                      "typeName": "BlockNumber"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 273,
            "type": {
              "def": {
                "sequence": {
                  "type": 272
                }
              }
            }
          },
          {
            "id": 274,
            "type": {
              "def": {
                "tuple": [
                  275,
                  6
                ]
              }
            }
          },
          {
            "id": 275,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 276
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 277,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 276,
            "type": {
              "path": [
                "pallet_proxy",
                "Announcement"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Hash",
                  "type": 12
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "real",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "call_hash",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "height",
                      "type": 4,
                      "typeName": "BlockNumber"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 277,
            "type": {
              "def": {
                "sequence": {
                  "type": 276
                }
              }
            }
          },
          {
            "id": 278,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooMany",
                      "index": 0,
                      "docs": [
                        "There are too many proxies registered or too many announcements pending."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "index": 1,
                      "docs": [
                        "Proxy registration not found."
                      ]
                    },
                    {
                      "name": "NotProxy",
                      "index": 2,
                      "docs": [
                        "Sender is not a proxy of the account to be proxied."
                      ]
                    },
                    {
                      "name": "Unproxyable",
                      "index": 3,
                      "docs": [
                        "A call which is incompatible with the proxy type's filter was attempted."
                      ]
                    },
                    {
                      "name": "Duplicate",
                      "index": 4,
                      "docs": [
                        "Account is already a proxy."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "index": 5,
                      "docs": [
                        "Call may not be made by proxy because it may escalate its privileges."
                      ]
                    },
                    {
                      "name": "Unannounced",
                      "index": 6,
                      "docs": [
                        "Announcement, if made at all, was made too recently."
                      ]
                    },
                    {
                      "name": "NoSelfProxy",
                      "index": 7,
                      "docs": [
                        "Cannot add self as proxy."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 279,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 280
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 282,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 280,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "BalanceLock"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 78,
                      "typeName": "LockIdentifier"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "reasons",
                      "type": 281,
                      "typeName": "Reasons"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 281,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "Reasons"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fee",
                      "index": 0
                    },
                    {
                      "name": "Misc",
                      "index": 1
                    },
                    {
                      "name": "All",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 282,
            "type": {
              "def": {
                "sequence": {
                  "type": 280
                }
              }
            }
          },
          {
            "id": 283,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 284
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 285,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 284,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "ReserveData"
              ],
              "params": [
                {
                  "name": "ReserveIdentifier",
                  "type": 78
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 78,
                      "typeName": "ReserveIdentifier"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 285,
            "type": {
              "def": {
                "sequence": {
                  "type": 284
                }
              }
            }
          },
          {
            "id": 286,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 287
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 288,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 287,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "IdAmount"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 35
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 35,
                      "typeName": "Id"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 288,
            "type": {
              "def": {
                "sequence": {
                  "type": 287
                }
              }
            }
          },
          {
            "id": 289,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 290
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 292,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 290,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "IdAmount"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 291
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 291,
                      "typeName": "Id"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 291,
            "type": {
              "path": [
                "laos_runtime",
                "RuntimeFreezeReason"
              ],
              "def": {
                "variant": {}
              }
            }
          },
          {
            "id": 292,
            "type": {
              "def": {
                "sequence": {
                  "type": 290
                }
              }
            }
          },
          {
            "id": 293,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VestingBalance",
                      "index": 0,
                      "docs": [
                        "Vesting balance too high to send value."
                      ]
                    },
                    {
                      "name": "LiquidityRestrictions",
                      "index": 1,
                      "docs": [
                        "Account liquidity restrictions prevent withdrawal."
                      ]
                    },
                    {
                      "name": "InsufficientBalance",
                      "index": 2,
                      "docs": [
                        "Balance too low to send value."
                      ]
                    },
                    {
                      "name": "ExistentialDeposit",
                      "index": 3,
                      "docs": [
                        "Value too low to create account due to existential deposit."
                      ]
                    },
                    {
                      "name": "Expendability",
                      "index": 4,
                      "docs": [
                        "Transfer/payment would kill account."
                      ]
                    },
                    {
                      "name": "ExistingVestingSchedule",
                      "index": 5,
                      "docs": [
                        "A vesting schedule already exists for this account."
                      ]
                    },
                    {
                      "name": "DeadAccount",
                      "index": 6,
                      "docs": [
                        "Beneficiary account must pre-exist."
                      ]
                    },
                    {
                      "name": "TooManyReserves",
                      "index": 7,
                      "docs": [
                        "Number of named reserves exceed `MaxReserves`."
                      ]
                    },
                    {
                      "name": "TooManyHolds",
                      "index": 8,
                      "docs": [
                        "Number of holds exceed `MaxHolds`."
                      ]
                    },
                    {
                      "name": "TooManyFreezes",
                      "index": 9,
                      "docs": [
                        "Number of freezes exceed `MaxFreezes`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 294,
            "type": {
              "path": [
                "sp_arithmetic",
                "fixed_point",
                "FixedU128"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 6,
                      "typeName": "u128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 295,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "Releases"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V1Ancient",
                      "index": 0
                    },
                    {
                      "name": "V2",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 296,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 216
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 297,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 297,
            "type": {
              "def": {
                "sequence": {
                  "type": 216
                }
              }
            }
          },
          {
            "id": 298,
            "type": {
              "path": [
                "pallet_vesting",
                "Releases"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V0",
                      "index": 0
                    },
                    {
                      "name": "V1",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 299,
            "type": {
              "path": [
                "pallet_vesting",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotVesting",
                      "index": 0,
                      "docs": [
                        "The account given is not vesting."
                      ]
                    },
                    {
                      "name": "AtMaxVestingSchedules",
                      "index": 1,
                      "docs": [
                        "The account already has `MaxVestingSchedules` count of schedules and thus",
                        "cannot add another one. Consider merging existing schedules in order to add another."
                      ]
                    },
                    {
                      "name": "AmountLow",
                      "index": 2,
                      "docs": [
                        "Amount being transferred is too low to create a vesting schedule."
                      ]
                    },
                    {
                      "name": "ScheduleIndexOutOfBounds",
                      "index": 3,
                      "docs": [
                        "An index was out of bounds of the vesting schedules."
                      ]
                    },
                    {
                      "name": "InvalidScheduleParams",
                      "index": 4,
                      "docs": [
                        "Failed to create a new schedule because some parameter was invalid."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the vesting pallet."
              ]
            }
          },
          {
            "id": 300,
            "type": {
              "def": {
                "sequence": {
                  "type": 301
                }
              }
            }
          },
          {
            "id": 301,
            "type": {
              "def": {
                "tuple": [
                  0,
                  218
                ]
              }
            }
          },
          {
            "id": 302,
            "type": {
              "def": {
                "sequence": {
                  "type": 4
                }
              }
            }
          },
          {
            "id": 303,
            "type": {
              "def": {
                "tuple": [
                  304,
                  14
                ]
              }
            }
          },
          {
            "id": 304,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "KeyTypeId"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 18,
                      "typeName": "[u8; 4]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 305,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidProof",
                      "index": 0,
                      "docs": [
                        "Invalid ownership proof."
                      ]
                    },
                    {
                      "name": "NoAssociatedValidatorId",
                      "index": 1,
                      "docs": [
                        "No associated validator ID for account."
                      ]
                    },
                    {
                      "name": "DuplicatedKey",
                      "index": 2,
                      "docs": [
                        "Registered duplicate key."
                      ]
                    },
                    {
                      "name": "NoKeys",
                      "index": 3,
                      "docs": [
                        "No keys are associated with this account."
                      ]
                    },
                    {
                      "name": "NoAccount",
                      "index": 4,
                      "docs": [
                        "Key setting account is not live, so it's impossible to associate keys."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the session pallet."
              ]
            }
          },
          {
            "id": 306,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 219
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 307,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 307,
            "type": {
              "def": {
                "sequence": {
                  "type": 219
                }
              }
            }
          },
          {
            "id": 308,
            "type": {
              "path": [
                "sp_consensus_slots",
                "Slot"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 11,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 309,
            "type": {
              "def": {
                "tuple": [
                  308,
                  4
                ]
              }
            }
          },
          {
            "id": 310,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "types",
                "ParachainBondConfig"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "account",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "percent",
                      "type": 53,
                      "typeName": "Percent"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 311,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "types",
                "RoundInfo"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 11
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "current",
                      "type": 4,
                      "typeName": "RoundIndex"
                    },
                    {
                      "name": "first",
                      "type": 11,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "length",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 312,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "types",
                "Delegator"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "delegations",
                      "type": 313,
                      "typeName": "OrderedSet<Bond<AccountId, Balance>>"
                    },
                    {
                      "name": "total",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "less_total",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "status",
                      "type": 316,
                      "typeName": "DelegatorStatus"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 313,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "set",
                "OrderedSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 314
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 315,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 314,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "types",
                "Bond"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "owner",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 315,
            "type": {
              "def": {
                "sequence": {
                  "type": 314
                }
              }
            }
          },
          {
            "id": 316,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "types",
                "DelegatorStatus"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Active",
                      "index": 0
                    },
                    {
                      "name": "Leaving",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "RoundIndex"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 317,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "types",
                "CandidateMetadata"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "bond",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "delegation_count",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "total_counted",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "lowest_top_delegation_amount",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "highest_bottom_delegation_amount",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "lowest_bottom_delegation_amount",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "top_capacity",
                      "type": 318,
                      "typeName": "CapacityStatus"
                    },
                    {
                      "name": "bottom_capacity",
                      "type": 318,
                      "typeName": "CapacityStatus"
                    },
                    {
                      "name": "request",
                      "type": 319,
                      "typeName": "Option<CandidateBondLessRequest<Balance>>"
                    },
                    {
                      "name": "status",
                      "type": 321,
                      "typeName": "CollatorStatus"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 318,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "types",
                "CapacityStatus"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Full",
                      "index": 0
                    },
                    {
                      "name": "Empty",
                      "index": 1
                    },
                    {
                      "name": "Partial",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 319,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 320
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 320
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 320,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "types",
                "CandidateBondLessRequest"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "when_executable",
                      "type": 4,
                      "typeName": "RoundIndex"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 321,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "types",
                "CollatorStatus"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Active",
                      "index": 0
                    },
                    {
                      "name": "Idle",
                      "index": 1
                    },
                    {
                      "name": "Leaving",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "RoundIndex"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 322,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 323
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 324,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 323,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "delegation_requests",
                "ScheduledRequest"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "delegator",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "when_executable",
                      "type": 4,
                      "typeName": "RoundIndex"
                    },
                    {
                      "name": "action",
                      "type": 51,
                      "typeName": "DelegationAction<Balance>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 324,
            "type": {
              "def": {
                "sequence": {
                  "type": 323
                }
              }
            }
          },
          {
            "id": 325,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 326
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 327,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 326,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "auto_compound",
                "AutoCompoundConfig"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "delegator",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "value",
                      "type": 53,
                      "typeName": "Percent"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 327,
            "type": {
              "def": {
                "sequence": {
                  "type": 326
                }
              }
            }
          },
          {
            "id": 328,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "types",
                "Delegations"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "delegations",
                      "type": 315,
                      "typeName": "Vec<Bond<AccountId, Balance>>"
                    },
                    {
                      "name": "total",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 329,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 210,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 330,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "set",
                "BoundedOrderedSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 314
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 331,
                      "typeName": "BoundedVec<T, S>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 331,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 314
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 315,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 332,
            "type": {
              "def": {
                "tuple": [
                  4,
                  0
                ]
              }
            }
          },
          {
            "id": 333,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "types",
                "CollatorSnapshot"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "bond",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "delegations",
                      "type": 334,
                      "typeName": "Vec<BondWithAutoCompound<AccountId, Balance>>"
                    },
                    {
                      "name": "total",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 334,
            "type": {
              "def": {
                "sequence": {
                  "type": 335
                }
              }
            }
          },
          {
            "id": 335,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "types",
                "BondWithAutoCompound"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "owner",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "auto_compound",
                      "type": 53,
                      "typeName": "Percent"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 336,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "types",
                "DelayedPayout"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "round_issuance",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "total_staking_reward",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "collator_commission",
                      "type": 54,
                      "typeName": "Perbill"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 337,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "inflation",
                "InflationInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "expect",
                      "type": 222,
                      "typeName": "Range<Balance>"
                    },
                    {
                      "name": "annual",
                      "type": 223,
                      "typeName": "Range<Perbill>"
                    },
                    {
                      "name": "round",
                      "type": 223,
                      "typeName": "Range<Perbill>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 338,
            "type": {
              "path": [
                "pallet_parachain_staking",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DelegatorDNE",
                      "index": 0
                    },
                    {
                      "name": "DelegatorDNEinTopNorBottom",
                      "index": 1
                    },
                    {
                      "name": "DelegatorDNEInDelegatorSet",
                      "index": 2
                    },
                    {
                      "name": "CandidateDNE",
                      "index": 3
                    },
                    {
                      "name": "DelegationDNE",
                      "index": 4
                    },
                    {
                      "name": "DelegatorExists",
                      "index": 5
                    },
                    {
                      "name": "CandidateExists",
                      "index": 6
                    },
                    {
                      "name": "CandidateBondBelowMin",
                      "index": 7
                    },
                    {
                      "name": "InsufficientBalance",
                      "index": 8
                    },
                    {
                      "name": "DelegatorBondBelowMin",
                      "index": 9
                    },
                    {
                      "name": "DelegationBelowMin",
                      "index": 10
                    },
                    {
                      "name": "AlreadyOffline",
                      "index": 11
                    },
                    {
                      "name": "AlreadyActive",
                      "index": 12
                    },
                    {
                      "name": "DelegatorAlreadyLeaving",
                      "index": 13
                    },
                    {
                      "name": "DelegatorNotLeaving",
                      "index": 14
                    },
                    {
                      "name": "DelegatorCannotLeaveYet",
                      "index": 15
                    },
                    {
                      "name": "CannotDelegateIfLeaving",
                      "index": 16
                    },
                    {
                      "name": "CandidateAlreadyLeaving",
                      "index": 17
                    },
                    {
                      "name": "CandidateNotLeaving",
                      "index": 18
                    },
                    {
                      "name": "CandidateCannotLeaveYet",
                      "index": 19
                    },
                    {
                      "name": "CannotGoOnlineIfLeaving",
                      "index": 20
                    },
                    {
                      "name": "ExceedMaxDelegationsPerDelegator",
                      "index": 21
                    },
                    {
                      "name": "AlreadyDelegatedCandidate",
                      "index": 22
                    },
                    {
                      "name": "InvalidSchedule",
                      "index": 23
                    },
                    {
                      "name": "CannotSetBelowMin",
                      "index": 24
                    },
                    {
                      "name": "RoundLengthMustBeGreaterThanTotalSelectedCollators",
                      "index": 25
                    },
                    {
                      "name": "NoWritingSameValue",
                      "index": 26
                    },
                    {
                      "name": "TooLowCandidateCountWeightHintJoinCandidates",
                      "index": 27
                    },
                    {
                      "name": "TooLowCandidateCountWeightHintCancelLeaveCandidates",
                      "index": 28
                    },
                    {
                      "name": "TooLowCandidateCountToLeaveCandidates",
                      "index": 29
                    },
                    {
                      "name": "TooLowDelegationCountToDelegate",
                      "index": 30
                    },
                    {
                      "name": "TooLowCandidateDelegationCountToDelegate",
                      "index": 31
                    },
                    {
                      "name": "TooLowCandidateDelegationCountToLeaveCandidates",
                      "index": 32
                    },
                    {
                      "name": "TooLowDelegationCountToLeaveDelegators",
                      "index": 33
                    },
                    {
                      "name": "PendingCandidateRequestsDNE",
                      "index": 34
                    },
                    {
                      "name": "PendingCandidateRequestAlreadyExists",
                      "index": 35
                    },
                    {
                      "name": "PendingCandidateRequestNotDueYet",
                      "index": 36
                    },
                    {
                      "name": "PendingDelegationRequestDNE",
                      "index": 37
                    },
                    {
                      "name": "PendingDelegationRequestAlreadyExists",
                      "index": 38
                    },
                    {
                      "name": "PendingDelegationRequestNotDueYet",
                      "index": 39
                    },
                    {
                      "name": "CannotDelegateLessThanOrEqualToLowestBottomWhenFull",
                      "index": 40
                    },
                    {
                      "name": "PendingDelegationRevoke",
                      "index": 41
                    },
                    {
                      "name": "TooLowDelegationCountToAutoCompound",
                      "index": 42
                    },
                    {
                      "name": "TooLowCandidateAutoCompoundingDelegationCountToAutoCompound",
                      "index": 43
                    },
                    {
                      "name": "TooLowCandidateAutoCompoundingDelegationCountToDelegate",
                      "index": 44
                    },
                    {
                      "name": "TooLowCollatorCountToNotifyAsInactive",
                      "index": 45
                    },
                    {
                      "name": "CannotBeNotifiedAsInactive",
                      "index": 46
                    },
                    {
                      "name": "TooLowCandidateAutoCompoundingDelegationCountToLeaveCandidates",
                      "index": 47
                    },
                    {
                      "name": "TooLowCandidateCountWeightHint",
                      "index": 48
                    },
                    {
                      "name": "TooLowCandidateCountWeightHintGoOffline",
                      "index": 49
                    },
                    {
                      "name": "CandidateLimitReached",
                      "index": 50
                    },
                    {
                      "name": "CannotSetAboveMaxCandidates",
                      "index": 51
                    },
                    {
                      "name": "RemovedCall",
                      "index": 52
                    },
                    {
                      "name": "MarkingOfflineNotEnabled",
                      "index": 53
                    },
                    {
                      "name": "CurrentRoundTooLow",
                      "index": 54
                    },
                    {
                      "name": "DeadAccount",
                      "index": 55
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 339,
            "type": {
              "def": {
                "sequence": {
                  "type": 340
                }
              }
            }
          },
          {
            "id": 340,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "InboundChannelDetails"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sender",
                      "type": 57,
                      "typeName": "ParaId"
                    },
                    {
                      "name": "state",
                      "type": 341,
                      "typeName": "InboundState"
                    },
                    {
                      "name": "message_metadata",
                      "type": 342,
                      "typeName": "Vec<(RelayBlockNumber, XcmpMessageFormat)>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 341,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "InboundState"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "index": 0
                    },
                    {
                      "name": "Suspended",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 342,
            "type": {
              "def": {
                "sequence": {
                  "type": 343
                }
              }
            }
          },
          {
            "id": 343,
            "type": {
              "def": {
                "tuple": [
                  4,
                  344
                ]
              }
            }
          },
          {
            "id": 344,
            "type": {
              "path": [
                "polkadot_parachain_primitives",
                "primitives",
                "XcmpMessageFormat"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ConcatenatedVersionedXcm",
                      "index": 0
                    },
                    {
                      "name": "ConcatenatedEncodedBlob",
                      "index": 1
                    },
                    {
                      "name": "Signals",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 345,
            "type": {
              "def": {
                "tuple": [
                  57,
                  4
                ]
              }
            }
          },
          {
            "id": 346,
            "type": {
              "def": {
                "sequence": {
                  "type": 347
                }
              }
            }
          },
          {
            "id": 347,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "OutboundChannelDetails"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "recipient",
                      "type": 57,
                      "typeName": "ParaId"
                    },
                    {
                      "name": "state",
                      "type": 348,
                      "typeName": "OutboundState"
                    },
                    {
                      "name": "signals_exist",
                      "type": 49,
                      "typeName": "bool"
                    },
                    {
                      "name": "first_index",
                      "type": 42,
                      "typeName": "u16"
                    },
                    {
                      "name": "last_index",
                      "type": 42,
                      "typeName": "u16"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 348,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "OutboundState"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "index": 0
                    },
                    {
                      "name": "Suspended",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 349,
            "type": {
              "def": {
                "tuple": [
                  57,
                  42
                ]
              }
            }
          },
          {
            "id": 350,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "QueueConfigData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "suspend_threshold",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "drop_threshold",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "resume_threshold",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "threshold_weight",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "weight_restrict_decay",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "xcmp_max_individual_weight",
                      "type": 9,
                      "typeName": "Weight"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 351,
            "type": {
              "def": {
                "tuple": [
                  57,
                  4,
                  14
                ]
              }
            }
          },
          {
            "id": 352,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FailedToSend",
                      "index": 0,
                      "docs": [
                        "Failed to send XCM message."
                      ]
                    },
                    {
                      "name": "BadXcmOrigin",
                      "index": 1,
                      "docs": [
                        "Bad XCM origin."
                      ]
                    },
                    {
                      "name": "BadXcm",
                      "index": 2,
                      "docs": [
                        "Bad XCM data."
                      ]
                    },
                    {
                      "name": "BadOverweightIndex",
                      "index": 3,
                      "docs": [
                        "Bad overweight index."
                      ]
                    },
                    {
                      "name": "WeightOverLimit",
                      "index": 4,
                      "docs": [
                        "Provided weight is possibly not enough to execute the message."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 353,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "QueryStatus"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Pending",
                      "fields": [
                        {
                          "name": "responder",
                          "type": 111,
                          "typeName": "VersionedMultiLocation"
                        },
                        {
                          "name": "maybe_match_querier",
                          "type": 354,
                          "typeName": "Option<VersionedMultiLocation>"
                        },
                        {
                          "name": "maybe_notify",
                          "type": 355,
                          "typeName": "Option<(u8, u8)>"
                        },
                        {
                          "name": "timeout",
                          "type": 4,
                          "typeName": "BlockNumber"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "VersionNotifier",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 111,
                          "typeName": "VersionedMultiLocation"
                        },
                        {
                          "name": "is_active",
                          "type": 49,
                          "typeName": "bool"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Ready",
                      "fields": [
                        {
                          "name": "response",
                          "type": 357,
                          "typeName": "VersionedResponse"
                        },
                        {
                          "name": "at",
                          "type": 4,
                          "typeName": "BlockNumber"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 354,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 111
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 111
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 355,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 356
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 356
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 356,
            "type": {
              "def": {
                "tuple": [
                  2,
                  2
                ]
              }
            }
          },
          {
            "id": 357,
            "type": {
              "path": [
                "staging_xcm",
                "VersionedResponse"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "type": 230,
                          "typeName": "v2::Response"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "type": 80,
                          "typeName": "v3::Response"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 358,
            "type": {
              "def": {
                "tuple": [
                  4,
                  111
                ]
              }
            }
          },
          {
            "id": 359,
            "type": {
              "def": {
                "tuple": [
                  11,
                  9,
                  4
                ]
              }
            }
          },
          {
            "id": 360,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 361
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 362,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 361,
            "type": {
              "def": {
                "tuple": [
                  111,
                  4
                ]
              }
            }
          },
          {
            "id": 362,
            "type": {
              "def": {
                "sequence": {
                  "type": 361
                }
              }
            }
          },
          {
            "id": 363,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "VersionMigrationStage"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MigrateSupportedVersion",
                      "index": 0
                    },
                    {
                      "name": "MigrateVersionNotifiers",
                      "index": 1
                    },
                    {
                      "name": "NotifyCurrentTargets",
                      "fields": [
                        {
                          "type": 364,
                          "typeName": "Option<Vec<u8>>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "MigrateAndNotifyOldTargets",
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 364,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 14
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 14
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 365,
            "type": {
              "def": {
                "tuple": [
                  4,
                  0,
                  366
                ]
              }
            }
          },
          {
            "id": 366,
            "type": {
              "path": [
                "staging_xcm",
                "VersionedAssetId"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "type": 75,
                          "typeName": "v3::AssetId"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 367,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "RemoteLockedFungibleRecord"
              ],
              "params": [
                {
                  "name": "ConsumerIdentifier",
                  "type": 35
                },
                {
                  "name": "MaxConsumers",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "u128"
                    },
                    {
                      "name": "owner",
                      "type": 111,
                      "typeName": "VersionedMultiLocation"
                    },
                    {
                      "name": "locker",
                      "type": 111,
                      "typeName": "VersionedMultiLocation"
                    },
                    {
                      "name": "consumers",
                      "type": 368,
                      "typeName": "BoundedVec<(ConsumerIdentifier, u128), MaxConsumers>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 368,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 369
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 370,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 369,
            "type": {
              "def": {
                "tuple": [
                  35,
                  6
                ]
              }
            }
          },
          {
            "id": 370,
            "type": {
              "def": {
                "sequence": {
                  "type": 369
                }
              }
            }
          },
          {
            "id": 371,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 372
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 373,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 372,
            "type": {
              "def": {
                "tuple": [
                  6,
                  111
                ]
              }
            }
          },
          {
            "id": 373,
            "type": {
              "def": {
                "sequence": {
                  "type": 372
                }
              }
            }
          },
          {
            "id": 374,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unreachable",
                      "index": 0,
                      "docs": [
                        "The desired destination was unreachable, generally because there is a no way of routing",
                        "to it."
                      ]
                    },
                    {
                      "name": "SendFailure",
                      "index": 1,
                      "docs": [
                        "There was some other issue (i.e. not to do with routing) in sending the message.",
                        "Perhaps a lack of space for buffering the message."
                      ]
                    },
                    {
                      "name": "Filtered",
                      "index": 2,
                      "docs": [
                        "The message execution fails the filter."
                      ]
                    },
                    {
                      "name": "UnweighableMessage",
                      "index": 3,
                      "docs": [
                        "The message's weight could not be determined."
                      ]
                    },
                    {
                      "name": "DestinationNotInvertible",
                      "index": 4,
                      "docs": [
                        "The destination `MultiLocation` provided cannot be inverted."
                      ]
                    },
                    {
                      "name": "Empty",
                      "index": 5,
                      "docs": [
                        "The assets to be sent are empty."
                      ]
                    },
                    {
                      "name": "CannotReanchor",
                      "index": 6,
                      "docs": [
                        "Could not re-anchor the assets to declare the fees for the destination chain."
                      ]
                    },
                    {
                      "name": "TooManyAssets",
                      "index": 7,
                      "docs": [
                        "Too many assets have been attempted for transfer."
                      ]
                    },
                    {
                      "name": "InvalidOrigin",
                      "index": 8,
                      "docs": [
                        "Origin is invalid for sending."
                      ]
                    },
                    {
                      "name": "BadVersion",
                      "index": 9,
                      "docs": [
                        "The version of the `Versioned` value used is not able to be interpreted."
                      ]
                    },
                    {
                      "name": "BadLocation",
                      "index": 10,
                      "docs": [
                        "The given location could not be used (e.g. because it cannot be expressed in the",
                        "desired version of XCM)."
                      ]
                    },
                    {
                      "name": "NoSubscription",
                      "index": 11,
                      "docs": [
                        "The referenced subscription could not be found."
                      ]
                    },
                    {
                      "name": "AlreadySubscribed",
                      "index": 12,
                      "docs": [
                        "The location is invalid since it already has a subscription from us."
                      ]
                    },
                    {
                      "name": "InvalidAsset",
                      "index": 13,
                      "docs": [
                        "Invalid asset for the operation."
                      ]
                    },
                    {
                      "name": "LowBalance",
                      "index": 14,
                      "docs": [
                        "The owner does not own (all) of the asset that they wish to do the operation on."
                      ]
                    },
                    {
                      "name": "TooManyLocks",
                      "index": 15,
                      "docs": [
                        "The asset owner has too many locks on the asset."
                      ]
                    },
                    {
                      "name": "AccountNotSovereign",
                      "index": 16,
                      "docs": [
                        "The given account is not an identifiable sovereign account for any location."
                      ]
                    },
                    {
                      "name": "FeesNotMet",
                      "index": 17,
                      "docs": [
                        "The operation required fees to be paid which the initiator could not meet."
                      ]
                    },
                    {
                      "name": "LockNotFound",
                      "index": 18,
                      "docs": [
                        "A remote lock with the corresponding data could not be found."
                      ]
                    },
                    {
                      "name": "InUse",
                      "index": 19,
                      "docs": [
                        "The unlock operation cannot succeed because there are still consumers of the lock."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 375,
            "type": {
              "path": [
                "cumulus_pallet_xcm",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {}
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 376,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "ConfigData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_individual",
                      "type": 9,
                      "typeName": "Weight"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 377,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "PageIndexData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "begin_used",
                      "type": 4,
                      "typeName": "PageCounter"
                    },
                    {
                      "name": "end_used",
                      "type": 4,
                      "typeName": "PageCounter"
                    },
                    {
                      "name": "overweight_count",
                      "type": 11,
                      "typeName": "OverweightIndex"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 378,
            "type": {
              "def": {
                "sequence": {
                  "type": 379
                }
              }
            }
          },
          {
            "id": 379,
            "type": {
              "def": {
                "tuple": [
                  4,
                  14
                ]
              }
            }
          },
          {
            "id": 380,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unknown",
                      "index": 0,
                      "docs": [
                        "The message index given is unknown."
                      ]
                    },
                    {
                      "name": "OverLimit",
                      "index": 1,
                      "docs": [
                        "The amount of weight given is possibly not enough for executing the message."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 381,
            "type": {
              "def": {
                "sequence": {
                  "type": 382
                }
              }
            }
          },
          {
            "id": 382,
            "type": {
              "def": {
                "tuple": [
                  249,
                  383,
                  388
                ]
              }
            }
          },
          {
            "id": 383,
            "type": {
              "path": [
                "fp_rpc",
                "TransactionStatus"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "transaction_hash",
                      "type": 12,
                      "typeName": "H256"
                    },
                    {
                      "name": "transaction_index",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "from",
                      "type": 115,
                      "typeName": "H160"
                    },
                    {
                      "name": "to",
                      "type": 384,
                      "typeName": "Option<H160>"
                    },
                    {
                      "name": "contract_address",
                      "type": 384,
                      "typeName": "Option<H160>"
                    },
                    {
                      "name": "logs",
                      "type": 385,
                      "typeName": "Vec<Log>"
                    },
                    {
                      "name": "logs_bloom",
                      "type": 386,
                      "typeName": "Bloom"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 384,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 115
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 115
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 385,
            "type": {
              "def": {
                "sequence": {
                  "type": 125
                }
              }
            }
          },
          {
            "id": 386,
            "type": {
              "path": [
                "ethbloom",
                "Bloom"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 387,
                      "typeName": "[u8; BLOOM_SIZE]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 387,
            "type": {
              "def": {
                "array": {
                  "len": 256,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 388,
            "type": {
              "path": [
                "ethereum",
                "receipt",
                "ReceiptV3"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Legacy",
                      "fields": [
                        {
                          "type": 389,
                          "typeName": "EIP658ReceiptData"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "EIP2930",
                      "fields": [
                        {
                          "type": 389,
                          "typeName": "EIP2930ReceiptData"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "EIP1559",
                      "fields": [
                        {
                          "type": 389,
                          "typeName": "EIP1559ReceiptData"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 389,
            "type": {
              "path": [
                "ethereum",
                "receipt",
                "EIP658ReceiptData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "status_code",
                      "type": 2,
                      "typeName": "u8"
                    },
                    {
                      "name": "used_gas",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "logs_bloom",
                      "type": 386,
                      "typeName": "Bloom"
                    },
                    {
                      "name": "logs",
                      "type": 385,
                      "typeName": "Vec<Log>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 390,
            "type": {
              "path": [
                "ethereum",
                "block",
                "Block"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 249
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "header",
                      "type": 391,
                      "typeName": "Header"
                    },
                    {
                      "name": "transactions",
                      "type": 393,
                      "typeName": "Vec<T>"
                    },
                    {
                      "name": "ommers",
                      "type": 394,
                      "typeName": "Vec<Header>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 391,
            "type": {
              "path": [
                "ethereum",
                "header",
                "Header"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parent_hash",
                      "type": 12,
                      "typeName": "H256"
                    },
                    {
                      "name": "ommers_hash",
                      "type": 12,
                      "typeName": "H256"
                    },
                    {
                      "name": "beneficiary",
                      "type": 115,
                      "typeName": "H160"
                    },
                    {
                      "name": "state_root",
                      "type": 12,
                      "typeName": "H256"
                    },
                    {
                      "name": "transactions_root",
                      "type": 12,
                      "typeName": "H256"
                    },
                    {
                      "name": "receipts_root",
                      "type": 12,
                      "typeName": "H256"
                    },
                    {
                      "name": "logs_bloom",
                      "type": 386,
                      "typeName": "Bloom"
                    },
                    {
                      "name": "difficulty",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "number",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "gas_limit",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "gas_used",
                      "type": 128,
                      "typeName": "U256"
                    },
                    {
                      "name": "timestamp",
                      "type": 11,
                      "typeName": "u64"
                    },
                    {
                      "name": "extra_data",
                      "type": 14,
                      "typeName": "Bytes"
                    },
                    {
                      "name": "mix_hash",
                      "type": 12,
                      "typeName": "H256"
                    },
                    {
                      "name": "nonce",
                      "type": 392,
                      "typeName": "H64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 392,
            "type": {
              "path": [
                "ethereum_types",
                "hash",
                "H64"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 78,
                      "typeName": "[u8; 8]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 393,
            "type": {
              "def": {
                "sequence": {
                  "type": 249
                }
              }
            }
          },
          {
            "id": 394,
            "type": {
              "def": {
                "sequence": {
                  "type": 391
                }
              }
            }
          },
          {
            "id": 395,
            "type": {
              "def": {
                "sequence": {
                  "type": 388
                }
              }
            }
          },
          {
            "id": 396,
            "type": {
              "def": {
                "sequence": {
                  "type": 383
                }
              }
            }
          },
          {
            "id": 397,
            "type": {
              "path": [
                "pallet_ethereum",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidSignature",
                      "index": 0,
                      "docs": [
                        "Signature is invalid."
                      ]
                    },
                    {
                      "name": "PreLogExists",
                      "index": 1,
                      "docs": [
                        "Pre-log is present, therefore transact is not allowed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 398,
            "type": {
              "path": [
                "pallet_evm",
                "CodeMetadata"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "size",
                      "type": 11,
                      "typeName": "u64"
                    },
                    {
                      "name": "hash",
                      "type": 12,
                      "typeName": "H256"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 399,
            "type": {
              "def": {
                "tuple": [
                  115,
                  12
                ]
              }
            }
          },
          {
            "id": 400,
            "type": {
              "path": [
                "pallet_evm",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BalanceLow",
                      "index": 0,
                      "docs": [
                        "Not enough balance to perform action"
                      ]
                    },
                    {
                      "name": "FeeOverflow",
                      "index": 1,
                      "docs": [
                        "Calculating total fee overflowed"
                      ]
                    },
                    {
                      "name": "PaymentOverflow",
                      "index": 2,
                      "docs": [
                        "Calculating total payment overflowed"
                      ]
                    },
                    {
                      "name": "WithdrawFailed",
                      "index": 3,
                      "docs": [
                        "Withdraw fee failed"
                      ]
                    },
                    {
                      "name": "GasPriceTooLow",
                      "index": 4,
                      "docs": [
                        "Gas price is too low."
                      ]
                    },
                    {
                      "name": "InvalidNonce",
                      "index": 5,
                      "docs": [
                        "Nonce is invalid"
                      ]
                    },
                    {
                      "name": "GasLimitTooLow",
                      "index": 6,
                      "docs": [
                        "Gas limit is too low."
                      ]
                    },
                    {
                      "name": "GasLimitTooHigh",
                      "index": 7,
                      "docs": [
                        "Gas limit is too high."
                      ]
                    },
                    {
                      "name": "Undefined",
                      "index": 8,
                      "docs": [
                        "Undefined error."
                      ]
                    },
                    {
                      "name": "Reentrancy",
                      "index": 9,
                      "docs": [
                        "EVM reentrancy"
                      ]
                    },
                    {
                      "name": "TransactionMustComeFromEOA",
                      "index": 10,
                      "docs": [
                        "EIP-3607,"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 401,
            "type": {
              "def": {
                "tuple": [
                  11,
                  128
                ]
              }
            }
          },
          {
            "id": 402,
            "type": {
              "path": [
                "pallet_laos_evolution",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CollectionDoesNotExist",
                      "index": 0,
                      "docs": [
                        "Collection does not exist"
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "index": 1,
                      "docs": [
                        "Not the owner of the collection"
                      ]
                    },
                    {
                      "name": "AlreadyMinted",
                      "index": 2,
                      "docs": [
                        "[`Slot`] is already minted"
                      ]
                    },
                    {
                      "name": "SlotOverflow",
                      "index": 3,
                      "docs": [
                        "This happens when `Slot` is larger than 96 bits"
                      ]
                    },
                    {
                      "name": "AssetDoesNotExist",
                      "index": 4,
                      "docs": [
                        "Asset does not exist"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 403,
            "type": {
              "def": {
                "tuple": [
                  134,
                  4
                ]
              }
            }
          },
          {
            "id": 404,
            "type": {
              "def": {
                "tuple": [
                  0,
                  134
                ]
              }
            }
          },
          {
            "id": 405,
            "type": {
              "path": [
                "pallet_asset_metadata_extender",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ExtensionAlreadyExists",
                      "index": 0,
                      "docs": [
                        "A claimer can perform one extension for a given universal location"
                      ]
                    },
                    {
                      "name": "ExtensionDoesNotExist",
                      "index": 1,
                      "docs": [
                        "A claimer can update an extension only if it exists"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Customs errors for this pallet"
              ]
            }
          },
          {
            "id": 406,
            "type": {
              "path": [
                "fp_account",
                "EthereumSignature"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 407,
                      "typeName": "ecdsa::Signature"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 407,
            "type": {
              "path": [
                "sp_core",
                "ecdsa",
                "Signature"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 408,
                      "typeName": "[u8; 65]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 408,
            "type": {
              "def": {
                "array": {
                  "len": 65,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 409,
            "type": {
              "def": {
                "tuple": [
                  410,
                  411,
                  412,
                  413,
                  414,
                  416,
                  417,
                  418
                ]
              }
            }
          },
          {
            "id": 410,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_non_zero_sender",
                "CheckNonZeroSender"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 411,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_spec_version",
                "CheckSpecVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 412,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_tx_version",
                "CheckTxVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 413,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_genesis",
                "CheckGenesis"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 414,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_mortality",
                "CheckMortality"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 415,
                      "typeName": "Era"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 415,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "era",
                "Era"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Immortal",
                      "index": 0
                    },
                    {
                      "name": "Mortal1",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Mortal2",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Mortal3",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Mortal4",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Mortal5",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Mortal6",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Mortal7",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Mortal8",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "Mortal9",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "Mortal10",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "Mortal11",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "Mortal12",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "Mortal13",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "Mortal14",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "Mortal15",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "Mortal16",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "Mortal17",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "Mortal18",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "Mortal19",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "Mortal20",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "Mortal21",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "Mortal22",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "Mortal23",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 23
                    },
                    {
                      "name": "Mortal24",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "Mortal25",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 25
                    },
                    {
                      "name": "Mortal26",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "Mortal27",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 27
                    },
                    {
                      "name": "Mortal28",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 28
                    },
                    {
                      "name": "Mortal29",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 29
                    },
                    {
                      "name": "Mortal30",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 30
                    },
                    {
                      "name": "Mortal31",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 31
                    },
                    {
                      "name": "Mortal32",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "Mortal33",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 33
                    },
                    {
                      "name": "Mortal34",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 34
                    },
                    {
                      "name": "Mortal35",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 35
                    },
                    {
                      "name": "Mortal36",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 36
                    },
                    {
                      "name": "Mortal37",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 37
                    },
                    {
                      "name": "Mortal38",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 38
                    },
                    {
                      "name": "Mortal39",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 39
                    },
                    {
                      "name": "Mortal40",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 40
                    },
                    {
                      "name": "Mortal41",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 41
                    },
                    {
                      "name": "Mortal42",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 42
                    },
                    {
                      "name": "Mortal43",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 43
                    },
                    {
                      "name": "Mortal44",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 44
                    },
                    {
                      "name": "Mortal45",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 45
                    },
                    {
                      "name": "Mortal46",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 46
                    },
                    {
                      "name": "Mortal47",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 47
                    },
                    {
                      "name": "Mortal48",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 48
                    },
                    {
                      "name": "Mortal49",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 49
                    },
                    {
                      "name": "Mortal50",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 50
                    },
                    {
                      "name": "Mortal51",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 51
                    },
                    {
                      "name": "Mortal52",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 52
                    },
                    {
                      "name": "Mortal53",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 53
                    },
                    {
                      "name": "Mortal54",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 54
                    },
                    {
                      "name": "Mortal55",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 55
                    },
                    {
                      "name": "Mortal56",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 56
                    },
                    {
                      "name": "Mortal57",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 57
                    },
                    {
                      "name": "Mortal58",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 58
                    },
                    {
                      "name": "Mortal59",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 59
                    },
                    {
                      "name": "Mortal60",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 60
                    },
                    {
                      "name": "Mortal61",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 61
                    },
                    {
                      "name": "Mortal62",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 62
                    },
                    {
                      "name": "Mortal63",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 63
                    },
                    {
                      "name": "Mortal64",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 64
                    },
                    {
                      "name": "Mortal65",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 65
                    },
                    {
                      "name": "Mortal66",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 66
                    },
                    {
                      "name": "Mortal67",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 67
                    },
                    {
                      "name": "Mortal68",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 68
                    },
                    {
                      "name": "Mortal69",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 69
                    },
                    {
                      "name": "Mortal70",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 70
                    },
                    {
                      "name": "Mortal71",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 71
                    },
                    {
                      "name": "Mortal72",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 72
                    },
                    {
                      "name": "Mortal73",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 73
                    },
                    {
                      "name": "Mortal74",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 74
                    },
                    {
                      "name": "Mortal75",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 75
                    },
                    {
                      "name": "Mortal76",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 76
                    },
                    {
                      "name": "Mortal77",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 77
                    },
                    {
                      "name": "Mortal78",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 78
                    },
                    {
                      "name": "Mortal79",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 79
                    },
                    {
                      "name": "Mortal80",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 80
                    },
                    {
                      "name": "Mortal81",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 81
                    },
                    {
                      "name": "Mortal82",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 82
                    },
                    {
                      "name": "Mortal83",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 83
                    },
                    {
                      "name": "Mortal84",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 84
                    },
                    {
                      "name": "Mortal85",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 85
                    },
                    {
                      "name": "Mortal86",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 86
                    },
                    {
                      "name": "Mortal87",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 87
                    },
                    {
                      "name": "Mortal88",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 88
                    },
                    {
                      "name": "Mortal89",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 89
                    },
                    {
                      "name": "Mortal90",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 90
                    },
                    {
                      "name": "Mortal91",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 91
                    },
                    {
                      "name": "Mortal92",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 92
                    },
                    {
                      "name": "Mortal93",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 93
                    },
                    {
                      "name": "Mortal94",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 94
                    },
                    {
                      "name": "Mortal95",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 95
                    },
                    {
                      "name": "Mortal96",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 96
                    },
                    {
                      "name": "Mortal97",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 97
                    },
                    {
                      "name": "Mortal98",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 98
                    },
                    {
                      "name": "Mortal99",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 99
                    },
                    {
                      "name": "Mortal100",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 100
                    },
                    {
                      "name": "Mortal101",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 101
                    },
                    {
                      "name": "Mortal102",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 102
                    },
                    {
                      "name": "Mortal103",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 103
                    },
                    {
                      "name": "Mortal104",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 104
                    },
                    {
                      "name": "Mortal105",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 105
                    },
                    {
                      "name": "Mortal106",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 106
                    },
                    {
                      "name": "Mortal107",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 107
                    },
                    {
                      "name": "Mortal108",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 108
                    },
                    {
                      "name": "Mortal109",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 109
                    },
                    {
                      "name": "Mortal110",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 110
                    },
                    {
                      "name": "Mortal111",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 111
                    },
                    {
                      "name": "Mortal112",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 112
                    },
                    {
                      "name": "Mortal113",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 113
                    },
                    {
                      "name": "Mortal114",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 114
                    },
                    {
                      "name": "Mortal115",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 115
                    },
                    {
                      "name": "Mortal116",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 116
                    },
                    {
                      "name": "Mortal117",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 117
                    },
                    {
                      "name": "Mortal118",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 118
                    },
                    {
                      "name": "Mortal119",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 119
                    },
                    {
                      "name": "Mortal120",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 120
                    },
                    {
                      "name": "Mortal121",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 121
                    },
                    {
                      "name": "Mortal122",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 122
                    },
                    {
                      "name": "Mortal123",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 123
                    },
                    {
                      "name": "Mortal124",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 124
                    },
                    {
                      "name": "Mortal125",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 125
                    },
                    {
                      "name": "Mortal126",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 126
                    },
                    {
                      "name": "Mortal127",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 127
                    },
                    {
                      "name": "Mortal128",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 128
                    },
                    {
                      "name": "Mortal129",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 129
                    },
                    {
                      "name": "Mortal130",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 130
                    },
                    {
                      "name": "Mortal131",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 131
                    },
                    {
                      "name": "Mortal132",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 132
                    },
                    {
                      "name": "Mortal133",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 133
                    },
                    {
                      "name": "Mortal134",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 134
                    },
                    {
                      "name": "Mortal135",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 135
                    },
                    {
                      "name": "Mortal136",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 136
                    },
                    {
                      "name": "Mortal137",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 137
                    },
                    {
                      "name": "Mortal138",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 138
                    },
                    {
                      "name": "Mortal139",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 139
                    },
                    {
                      "name": "Mortal140",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 140
                    },
                    {
                      "name": "Mortal141",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 141
                    },
                    {
                      "name": "Mortal142",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 142
                    },
                    {
                      "name": "Mortal143",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 143
                    },
                    {
                      "name": "Mortal144",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 144
                    },
                    {
                      "name": "Mortal145",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 145
                    },
                    {
                      "name": "Mortal146",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 146
                    },
                    {
                      "name": "Mortal147",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 147
                    },
                    {
                      "name": "Mortal148",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 148
                    },
                    {
                      "name": "Mortal149",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 149
                    },
                    {
                      "name": "Mortal150",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 150
                    },
                    {
                      "name": "Mortal151",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 151
                    },
                    {
                      "name": "Mortal152",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 152
                    },
                    {
                      "name": "Mortal153",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 153
                    },
                    {
                      "name": "Mortal154",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 154
                    },
                    {
                      "name": "Mortal155",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 155
                    },
                    {
                      "name": "Mortal156",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 156
                    },
                    {
                      "name": "Mortal157",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 157
                    },
                    {
                      "name": "Mortal158",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 158
                    },
                    {
                      "name": "Mortal159",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 159
                    },
                    {
                      "name": "Mortal160",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 160
                    },
                    {
                      "name": "Mortal161",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 161
                    },
                    {
                      "name": "Mortal162",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 162
                    },
                    {
                      "name": "Mortal163",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 163
                    },
                    {
                      "name": "Mortal164",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 164
                    },
                    {
                      "name": "Mortal165",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 165
                    },
                    {
                      "name": "Mortal166",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 166
                    },
                    {
                      "name": "Mortal167",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 167
                    },
                    {
                      "name": "Mortal168",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 168
                    },
                    {
                      "name": "Mortal169",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 169
                    },
                    {
                      "name": "Mortal170",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 170
                    },
                    {
                      "name": "Mortal171",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 171
                    },
                    {
                      "name": "Mortal172",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 172
                    },
                    {
                      "name": "Mortal173",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 173
                    },
                    {
                      "name": "Mortal174",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 174
                    },
                    {
                      "name": "Mortal175",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 175
                    },
                    {
                      "name": "Mortal176",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 176
                    },
                    {
                      "name": "Mortal177",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 177
                    },
                    {
                      "name": "Mortal178",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 178
                    },
                    {
                      "name": "Mortal179",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 179
                    },
                    {
                      "name": "Mortal180",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 180
                    },
                    {
                      "name": "Mortal181",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 181
                    },
                    {
                      "name": "Mortal182",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 182
                    },
                    {
                      "name": "Mortal183",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 183
                    },
                    {
                      "name": "Mortal184",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 184
                    },
                    {
                      "name": "Mortal185",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 185
                    },
                    {
                      "name": "Mortal186",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 186
                    },
                    {
                      "name": "Mortal187",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 187
                    },
                    {
                      "name": "Mortal188",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 188
                    },
                    {
                      "name": "Mortal189",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 189
                    },
                    {
                      "name": "Mortal190",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 190
                    },
                    {
                      "name": "Mortal191",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 191
                    },
                    {
                      "name": "Mortal192",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 192
                    },
                    {
                      "name": "Mortal193",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 193
                    },
                    {
                      "name": "Mortal194",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 194
                    },
                    {
                      "name": "Mortal195",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 195
                    },
                    {
                      "name": "Mortal196",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 196
                    },
                    {
                      "name": "Mortal197",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 197
                    },
                    {
                      "name": "Mortal198",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 198
                    },
                    {
                      "name": "Mortal199",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 199
                    },
                    {
                      "name": "Mortal200",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 200
                    },
                    {
                      "name": "Mortal201",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 201
                    },
                    {
                      "name": "Mortal202",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 202
                    },
                    {
                      "name": "Mortal203",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 203
                    },
                    {
                      "name": "Mortal204",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 204
                    },
                    {
                      "name": "Mortal205",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 205
                    },
                    {
                      "name": "Mortal206",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 206
                    },
                    {
                      "name": "Mortal207",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 207
                    },
                    {
                      "name": "Mortal208",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 208
                    },
                    {
                      "name": "Mortal209",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 209
                    },
                    {
                      "name": "Mortal210",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 210
                    },
                    {
                      "name": "Mortal211",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 211
                    },
                    {
                      "name": "Mortal212",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 212
                    },
                    {
                      "name": "Mortal213",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 213
                    },
                    {
                      "name": "Mortal214",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 214
                    },
                    {
                      "name": "Mortal215",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 215
                    },
                    {
                      "name": "Mortal216",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 216
                    },
                    {
                      "name": "Mortal217",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 217
                    },
                    {
                      "name": "Mortal218",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 218
                    },
                    {
                      "name": "Mortal219",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 219
                    },
                    {
                      "name": "Mortal220",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 220
                    },
                    {
                      "name": "Mortal221",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 221
                    },
                    {
                      "name": "Mortal222",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 222
                    },
                    {
                      "name": "Mortal223",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 223
                    },
                    {
                      "name": "Mortal224",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 224
                    },
                    {
                      "name": "Mortal225",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 225
                    },
                    {
                      "name": "Mortal226",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 226
                    },
                    {
                      "name": "Mortal227",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 227
                    },
                    {
                      "name": "Mortal228",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 228
                    },
                    {
                      "name": "Mortal229",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 229
                    },
                    {
                      "name": "Mortal230",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 230
                    },
                    {
                      "name": "Mortal231",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 231
                    },
                    {
                      "name": "Mortal232",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 232
                    },
                    {
                      "name": "Mortal233",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 233
                    },
                    {
                      "name": "Mortal234",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 234
                    },
                    {
                      "name": "Mortal235",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 235
                    },
                    {
                      "name": "Mortal236",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 236
                    },
                    {
                      "name": "Mortal237",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 237
                    },
                    {
                      "name": "Mortal238",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 238
                    },
                    {
                      "name": "Mortal239",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 239
                    },
                    {
                      "name": "Mortal240",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 240
                    },
                    {
                      "name": "Mortal241",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 241
                    },
                    {
                      "name": "Mortal242",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 242
                    },
                    {
                      "name": "Mortal243",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 243
                    },
                    {
                      "name": "Mortal244",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 244
                    },
                    {
                      "name": "Mortal245",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 245
                    },
                    {
                      "name": "Mortal246",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 246
                    },
                    {
                      "name": "Mortal247",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 247
                    },
                    {
                      "name": "Mortal248",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 248
                    },
                    {
                      "name": "Mortal249",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 249
                    },
                    {
                      "name": "Mortal250",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 250
                    },
                    {
                      "name": "Mortal251",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 251
                    },
                    {
                      "name": "Mortal252",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 252
                    },
                    {
                      "name": "Mortal253",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 253
                    },
                    {
                      "name": "Mortal254",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 254
                    },
                    {
                      "name": "Mortal255",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 255
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 416,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_nonce",
                "CheckNonce"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 63,
                      "typeName": "T::Nonce"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 417,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_weight",
                "CheckWeight"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 418,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "ChargeTransactionPayment"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 66,
                      "typeName": "BalanceOf<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 419,
            "type": {
              "path": [
                "laos_runtime",
                "Runtime"
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 420,
            "type": {
              "path": [
                "laos_runtime",
                "RuntimeError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "type": 154,
                          "typeName": "frame_system::Error<Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ParachainSystem",
                      "fields": [
                        {
                          "type": 196,
                          "typeName": "cumulus_pallet_parachain_system::Error<Runtime>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Sudo",
                      "fields": [
                        {
                          "type": 264,
                          "typeName": "pallet_sudo::Error<Runtime>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "type": 265,
                          "typeName": "pallet_utility::Error<Runtime>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Multisig",
                      "fields": [
                        {
                          "type": 269,
                          "typeName": "pallet_multisig::Error<Runtime>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Proxy",
                      "fields": [
                        {
                          "type": 278,
                          "typeName": "pallet_proxy::Error<Runtime>"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "type": 293,
                          "typeName": "pallet_balances::Error<Runtime>"
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "Vesting",
                      "fields": [
                        {
                          "type": 299,
                          "typeName": "pallet_vesting::Error<Runtime>"
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "type": 305,
                          "typeName": "pallet_session::Error<Runtime>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "ParachainStaking",
                      "fields": [
                        {
                          "type": 338,
                          "typeName": "pallet_parachain_staking::Error<Runtime>"
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "XcmpQueue",
                      "fields": [
                        {
                          "type": 352,
                          "typeName": "cumulus_pallet_xcmp_queue::Error<Runtime>"
                        }
                      ],
                      "index": 30
                    },
                    {
                      "name": "PolkadotXcm",
                      "fields": [
                        {
                          "type": 374,
                          "typeName": "pallet_xcm::Error<Runtime>"
                        }
                      ],
                      "index": 31
                    },
                    {
                      "name": "CumulusXcm",
                      "fields": [
                        {
                          "type": 375,
                          "typeName": "cumulus_pallet_xcm::Error<Runtime>"
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "DmpQueue",
                      "fields": [
                        {
                          "type": 380,
                          "typeName": "cumulus_pallet_dmp_queue::Error<Runtime>"
                        }
                      ],
                      "index": 33
                    },
                    {
                      "name": "Ethereum",
                      "fields": [
                        {
                          "type": 397,
                          "typeName": "pallet_ethereum::Error<Runtime>"
                        }
                      ],
                      "index": 50
                    },
                    {
                      "name": "EVM",
                      "fields": [
                        {
                          "type": 400,
                          "typeName": "pallet_evm::Error<Runtime>"
                        }
                      ],
                      "index": 51
                    },
                    {
                      "name": "LaosEvolution",
                      "fields": [
                        {
                          "type": 402,
                          "typeName": "pallet_laos_evolution::Error<Runtime>"
                        }
                      ],
                      "index": 100
                    },
                    {
                      "name": "AssetMetadataExtender",
                      "fields": [
                        {
                          "type": 405,
                          "typeName": "pallet_asset_metadata_extender::Error<Runtime>"
                        }
                      ],
                      "index": 101
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "pallets": [
        {
          "name": "System",
          "storage": {
            "prefix": "System",
            "entries": [
              {
                "name": "Account",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 3
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  128
                ],
                "docs": [
                  " The full account information for a particular account ID."
                ]
              },
              {
                "name": "ExtrinsicCount",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " Total extrinsics count for the current block."
                ]
              },
              {
                "name": "BlockWeight",
                "modifier": "Default",
                "ty": {
                  "Plain": 8
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current weight for the block."
                ]
              },
              {
                "name": "AllExtrinsicsLen",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " Total length (in bytes) for all extrinsics put together, for the current block."
                ]
              },
              {
                "name": "BlockHash",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 12
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Map of block numbers to block hashes."
                ]
              },
              {
                "name": "ExtrinsicData",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 14
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Extrinsics data for the current block (maps an extrinsic's index to its data)."
                ]
              },
              {
                "name": "Number",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current block number being processed. Set by `execute_block`."
                ]
              },
              {
                "name": "ParentHash",
                "modifier": "Default",
                "ty": {
                  "Plain": 12
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Hash of the previous block."
                ]
              },
              {
                "name": "Digest",
                "modifier": "Default",
                "ty": {
                  "Plain": 15
                },
                "default": [
                  0
                ],
                "docs": [
                  " Digest of the current block, also part of the block header."
                ]
              },
              {
                "name": "Events",
                "modifier": "Default",
                "ty": {
                  "Plain": 19
                },
                "default": [
                  0
                ],
                "docs": [
                  " Events deposited for the current block.",
                  "",
                  " NOTE: The item is unbound and should therefore never be read on chain.",
                  " It could otherwise inflate the PoV size of a block.",
                  "",
                  " Events have a large in-memory size. Box the events to not go out-of-memory",
                  " just in case someone still reads them from within the runtime."
                ]
              },
              {
                "name": "EventCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The number of events in the `Events<T>` list."
                ]
              },
              {
                "name": "EventTopics",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 12,
                    "value": 136
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Mapping between a topic (represented by T::Hash) and a vector of indexes",
                  " of events in the `<Events<T>>` list.",
                  "",
                  " All topic vectors have deterministic storage locations depending on the topic. This",
                  " allows light-clients to leverage the changes trie storage tracking mechanism and",
                  " in case of changes fetch the list of events of interest.",
                  "",
                  " The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just",
                  " the `EventIndex` then in case if the topic has the same contents on the next block",
                  " no notification will be triggered thus the event might be lost."
                ]
              },
              {
                "name": "LastRuntimeUpgrade",
                "modifier": "Optional",
                "ty": {
                  "Plain": 138
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."
                ]
              },
              {
                "name": "UpgradedToU32RefCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 49
                },
                "default": [
                  0
                ],
                "docs": [
                  " True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."
                ]
              },
              {
                "name": "UpgradedToTripleRefCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 49
                },
                "default": [
                  0
                ],
                "docs": [
                  " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
                  " (default) if not."
                ]
              },
              {
                "name": "ExecutionPhase",
                "modifier": "Optional",
                "ty": {
                  "Plain": 135
                },
                "default": [
                  0
                ],
                "docs": [
                  " The execution phase of the block."
                ]
              }
            ]
          },
          "calls": {
            "ty": 139
          },
          "event": {
            "ty": 22
          },
          "constants": [
            {
              "name": "BlockWeights",
              "ty": 143,
              "value": [
                2,
                91,
                31,
                93,
                0,
                7,
                0,
                136,
                82,
                106,
                116,
                2,
                0,
                64,
                1,
                194,
                160,
                169,
                29,
                0,
                1,
                7,
                208,
                9,
                24,
                164,
                75,
                2,
                0,
                208,
                0,
                1,
                7,
                0,
                230,
                189,
                79,
                87,
                2,
                0,
                240,
                0,
                1,
                0,
                0,
                194,
                160,
                169,
                29,
                0,
                1,
                7,
                208,
                171,
                172,
                190,
                104,
                2,
                0,
                32,
                1,
                1,
                7,
                0,
                136,
                82,
                106,
                116,
                2,
                0,
                64,
                1,
                1,
                7,
                0,
                162,
                148,
                26,
                29,
                2,
                0,
                80,
                0,
                194,
                160,
                169,
                29,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Block & extrinsics weights: base values and limits."
              ]
            },
            {
              "name": "BlockLength",
              "ty": 147,
              "value": [
                0,
                0,
                60,
                0,
                0,
                0,
                80,
                0,
                0,
                0,
                80,
                0
              ],
              "docs": [
                " The maximum length of a block (in bytes)."
              ]
            },
            {
              "name": "BlockHashCount",
              "ty": 4,
              "value": [
                0,
                1,
                0,
                0
              ],
              "docs": [
                " Maximum number of block number to block hash mappings to keep (oldest pruned first)."
              ]
            },
            {
              "name": "DbWeight",
              "ty": 149,
              "value": [
                64,
                120,
                125,
                1,
                0,
                0,
                0,
                0,
                0,
                225,
                245,
                5,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The weight of runtime database operations the runtime can invoke."
              ]
            },
            {
              "name": "Version",
              "ty": 150,
              "value": [
                16,
                108,
                97,
                111,
                115,
                16,
                108,
                97,
                111,
                115,
                1,
                0,
                0,
                0,
                121,
                5,
                0,
                0,
                0,
                0,
                0,
                0,
                52,
                221,
                113,
                141,
                92,
                197,
                50,
                98,
                212,
                1,
                0,
                0,
                0,
                223,
                106,
                203,
                104,
                153,
                7,
                96,
                155,
                4,
                0,
                0,
                0,
                55,
                227,
                151,
                252,
                124,
                145,
                245,
                228,
                2,
                0,
                0,
                0,
                64,
                254,
                58,
                212,
                1,
                248,
                149,
                154,
                6,
                0,
                0,
                0,
                210,
                188,
                152,
                151,
                238,
                208,
                143,
                21,
                3,
                0,
                0,
                0,
                247,
                139,
                39,
                139,
                229,
                63,
                69,
                76,
                2,
                0,
                0,
                0,
                171,
                60,
                5,
                114,
                41,
                31,
                235,
                139,
                1,
                0,
                0,
                0,
                188,
                157,
                137,
                144,
                79,
                91,
                146,
                63,
                1,
                0,
                0,
                0,
                88,
                34,
                17,
                246,
                91,
                177,
                75,
                137,
                5,
                0,
                0,
                0,
                230,
                91,
                0,
                228,
                108,
                237,
                208,
                170,
                2,
                0,
                0,
                0,
                55,
                200,
                187,
                19,
                80,
                169,
                162,
                168,
                4,
                0,
                0,
                0,
                243,
                255,
                20,
                213,
                171,
                82,
                112,
                89,
                3,
                0,
                0,
                0,
                234,
                147,
                227,
                241,
                111,
                61,
                105,
                98,
                2,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                1
              ],
              "docs": [
                " Get the chain's current version."
              ]
            },
            {
              "name": "SS58Prefix",
              "ty": 42,
              "value": [
                42,
                0
              ],
              "docs": [
                " The designated SS58 prefix of this chain.",
                "",
                " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
                " that the runtime should know about the prefix in order to make use of it as",
                " an identifier of the chain."
              ]
            }
          ],
          "error": {
            "ty": 154
          },
          "index": 0,
          "docs": []
        },
        {
          "name": "ParachainSystem",
          "storage": {
            "prefix": "ParachainSystem",
            "entries": [
              {
                "name": "UnincludedSegment",
                "modifier": "Default",
                "ty": {
                  "Plain": 155
                },
                "default": [
                  0
                ],
                "docs": [
                  " Latest included block descendants the runtime accepted. In other words, these are",
                  " ancestors of the currently executing block which have not been included in the observed",
                  " relay-chain state.",
                  "",
                  " The segment length is limited by the capacity returned from the [`ConsensusHook`] configured",
                  " in the pallet."
                ]
              },
              {
                "name": "AggregatedUnincludedSegment",
                "modifier": "Optional",
                "ty": {
                  "Plain": 165
                },
                "default": [
                  0
                ],
                "docs": [
                  " Storage field that keeps track of bandwidth used by the unincluded segment along with the",
                  " latest the latest HRMP watermark. Used for limiting the acceptance of new blocks with",
                  " respect to relay chain constraints."
                ]
              },
              {
                "name": "PendingValidationCode",
                "modifier": "Default",
                "ty": {
                  "Plain": 14
                },
                "default": [
                  0
                ],
                "docs": [
                  " In case of a scheduled upgrade, this storage field contains the validation code to be",
                  " applied.",
                  "",
                  " As soon as the relay chain gives us the go-ahead signal, we will overwrite the",
                  " [`:code`][sp_core::storage::well_known_keys::CODE] which will result the next block process",
                  " with the new validation code. This concludes the upgrade process."
                ]
              },
              {
                "name": "NewValidationCode",
                "modifier": "Optional",
                "ty": {
                  "Plain": 14
                },
                "default": [
                  0
                ],
                "docs": [
                  " Validation code that is set by the parachain and is to be communicated to collator and",
                  " consequently the relay-chain.",
                  "",
                  " This will be cleared in `on_initialize` of each new block if no other pallet already set",
                  " the value."
                ]
              },
              {
                "name": "ValidationData",
                "modifier": "Optional",
                "ty": {
                  "Plain": 167
                },
                "default": [
                  0
                ],
                "docs": [
                  " The [`PersistedValidationData`] set for this block.",
                  " This value is expected to be set only once per block and it's never stored",
                  " in the trie."
                ]
              },
              {
                "name": "DidSetValidationCode",
                "modifier": "Default",
                "ty": {
                  "Plain": 49
                },
                "default": [
                  0
                ],
                "docs": [
                  " Were the validation data set to notify the relay chain?"
                ]
              },
              {
                "name": "LastRelayChainBlockNumber",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The relay chain block number associated with the last parachain block."
                ]
              },
              {
                "name": "UpgradeRestrictionSignal",
                "modifier": "Default",
                "ty": {
                  "Plain": 169
                },
                "default": [
                  0
                ],
                "docs": [
                  " An option which indicates if the relay-chain restricts signalling a validation code upgrade.",
                  " In other words, if this is `Some` and [`NewValidationCode`] is `Some` then the produced",
                  " candidate will be invalid.",
                  "",
                  " This storage item is a mirror of the corresponding value for the current parachain from the",
                  " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
                  " set after the inherent."
                ]
              },
              {
                "name": "UpgradeGoAhead",
                "modifier": "Default",
                "ty": {
                  "Plain": 163
                },
                "default": [
                  0
                ],
                "docs": [
                  " Optional upgrade go-ahead signal from the relay-chain.",
                  "",
                  " This storage item is a mirror of the corresponding value for the current parachain from the",
                  " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
                  " set after the inherent."
                ]
              },
              {
                "name": "RelayStateProof",
                "modifier": "Optional",
                "ty": {
                  "Plain": 171
                },
                "default": [
                  0
                ],
                "docs": [
                  " The state proof for the last relay parent block.",
                  "",
                  " This field is meant to be updated each block with the validation data inherent. Therefore,",
                  " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                  "",
                  " This data is also absent from the genesis."
                ]
              },
              {
                "name": "RelevantMessagingState",
                "modifier": "Optional",
                "ty": {
                  "Plain": 173
                },
                "default": [
                  0
                ],
                "docs": [
                  " The snapshot of some state related to messaging relevant to the current parachain as per",
                  " the relay parent.",
                  "",
                  " This field is meant to be updated each block with the validation data inherent. Therefore,",
                  " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                  "",
                  " This data is also absent from the genesis."
                ]
              },
              {
                "name": "HostConfiguration",
                "modifier": "Optional",
                "ty": {
                  "Plain": 178
                },
                "default": [
                  0
                ],
                "docs": [
                  " The parachain host configuration that was obtained from the relay parent.",
                  "",
                  " This field is meant to be updated each block with the validation data inherent. Therefore,",
                  " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                  "",
                  " This data is also absent from the genesis."
                ]
              },
              {
                "name": "LastDmqMqcHead",
                "modifier": "Default",
                "ty": {
                  "Plain": 180
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The last downward message queue chain head we have observed.",
                  "",
                  " This value is loaded before and saved after processing inbound downward messages carried",
                  " by the system inherent."
                ]
              },
              {
                "name": "LastHrmpMqcHeads",
                "modifier": "Default",
                "ty": {
                  "Plain": 181
                },
                "default": [
                  0
                ],
                "docs": [
                  " The message queue chain heads we have observed per each channel incoming channel.",
                  "",
                  " This value is loaded before and saved after processing inbound downward messages carried",
                  " by the system inherent."
                ]
              },
              {
                "name": "ProcessedDownwardMessages",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Number of downward messages processed in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "HrmpWatermark",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " HRMP watermark that was set in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "HrmpOutboundMessages",
                "modifier": "Default",
                "ty": {
                  "Plain": 184
                },
                "default": [
                  0
                ],
                "docs": [
                  " HRMP messages that were sent in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "UpwardMessages",
                "modifier": "Default",
                "ty": {
                  "Plain": 142
                },
                "default": [
                  0
                ],
                "docs": [
                  " Upward messages that were sent in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "PendingUpwardMessages",
                "modifier": "Default",
                "ty": {
                  "Plain": 142
                },
                "default": [
                  0
                ],
                "docs": [
                  " Upward messages that are still pending and not yet send to the relay chain."
                ]
              },
              {
                "name": "AnnouncedHrmpMessagesPerCandidate",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The number of HRMP messages we observed in `on_initialize` and thus used that number for",
                  " announcing the weight of `on_initialize` and `on_finalize`."
                ]
              },
              {
                "name": "ReservedXcmpWeightOverride",
                "modifier": "Optional",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0
                ],
                "docs": [
                  " The weight we reserve at the beginning of the block for processing XCMP messages. This",
                  " overrides the amount set in the Config trait."
                ]
              },
              {
                "name": "ReservedDmpWeightOverride",
                "modifier": "Optional",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0
                ],
                "docs": [
                  " The weight we reserve at the beginning of the block for processing DMP messages. This",
                  " overrides the amount set in the Config trait."
                ]
              },
              {
                "name": "AuthorizedUpgrade",
                "modifier": "Optional",
                "ty": {
                  "Plain": 186
                },
                "default": [
                  0
                ],
                "docs": [
                  " The next authorized upgrade, if there is one."
                ]
              },
              {
                "name": "CustomValidationHeadData",
                "modifier": "Optional",
                "ty": {
                  "Plain": 14
                },
                "default": [
                  0
                ],
                "docs": [
                  " A custom head data that should be returned as result of `validate_block`.",
                  "",
                  " See `Pallet::set_custom_validation_head_data` for more information."
                ]
              }
            ]
          },
          "calls": {
            "ty": 187
          },
          "event": {
            "ty": 31
          },
          "constants": [],
          "error": {
            "ty": 196
          },
          "index": 1,
          "docs": []
        },
        {
          "name": "Timestamp",
          "storage": {
            "prefix": "Timestamp",
            "entries": [
              {
                "name": "Now",
                "modifier": "Default",
                "ty": {
                  "Plain": 11
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Current time for the current block."
                ]
              },
              {
                "name": "DidUpdate",
                "modifier": "Default",
                "ty": {
                  "Plain": 49
                },
                "default": [
                  0
                ],
                "docs": [
                  " Did the timestamp get updated in this block?"
                ]
              }
            ]
          },
          "calls": {
            "ty": 197
          },
          "event": null,
          "constants": [
            {
              "name": "MinimumPeriod",
              "ty": 11,
              "value": [
                112,
                23,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The minimum period between blocks. Beware that this is different to the *expected*",
                " period that the block production apparatus provides. Your chosen consensus system will",
                " generally work with this to determine a sensible block time. e.g. For Aura, it will be",
                " double this period on default settings."
              ]
            }
          ],
          "error": null,
          "index": 2,
          "docs": []
        },
        {
          "name": "ParachainInfo",
          "storage": {
            "prefix": "ParachainInfo",
            "entries": [
              {
                "name": "ParachainId",
                "modifier": "Default",
                "ty": {
                  "Plain": 57
                },
                "default": [
                  100,
                  0,
                  0,
                  0
                ],
                "docs": []
              }
            ]
          },
          "calls": {
            "ty": 198
          },
          "event": null,
          "constants": [],
          "error": null,
          "index": 3,
          "docs": []
        },
        {
          "name": "Sudo",
          "storage": {
            "prefix": "Sudo",
            "entries": [
              {
                "name": "Key",
                "modifier": "Optional",
                "ty": {
                  "Plain": 0
                },
                "default": [
                  0
                ],
                "docs": [
                  " The `AccountId` of the sudo key."
                ]
              }
            ]
          },
          "calls": {
            "ty": 199
          },
          "event": {
            "ty": 33
          },
          "constants": [],
          "error": {
            "ty": 264
          },
          "index": 4,
          "docs": []
        },
        {
          "name": "Utility",
          "storage": null,
          "calls": {
            "ty": 201
          },
          "event": {
            "ty": 37
          },
          "constants": [
            {
              "name": "batched_calls_limit",
              "ty": 4,
              "value": [
                170,
                42,
                0,
                0
              ],
              "docs": [
                " The limit on the number of batched calls."
              ]
            }
          ],
          "error": {
            "ty": 265
          },
          "index": 5,
          "docs": []
        },
        {
          "name": "Multisig",
          "storage": {
            "prefix": "Multisig",
            "entries": [
              {
                "name": "Multisigs",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 266,
                    "value": 267
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The set of open multisig operations."
                ]
              }
            ]
          },
          "calls": {
            "ty": 209
          },
          "event": {
            "ty": 38
          },
          "constants": [
            {
              "name": "DepositBase",
              "ty": 6,
              "value": [
                0,
                0,
                32,
                252,
                12,
                168,
                140,
                146,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The base amount of currency needed to reserve for creating a multisig execution or to",
                " store a dispatch call for later.",
                "",
                " This is held for an additional storage item whose value size is",
                " `4 + sizeof((BlockNumber, Balance, AccountId))` bytes and whose key size is",
                " `32 + sizeof(AccountId)` bytes."
              ]
            },
            {
              "name": "DepositFactor",
              "ty": 6,
              "value": [
                0,
                0,
                32,
                248,
                77,
                222,
                112,
                4,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount of currency needed per unit threshold when creating a multisig execution.",
                "",
                " This is held for adding 32 bytes more into a pre-existing storage value."
              ]
            },
            {
              "name": "MaxSignatories",
              "ty": 4,
              "value": [
                20,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum amount of signatories allowed in the multisig."
              ]
            }
          ],
          "error": {
            "ty": 269
          },
          "index": 6,
          "docs": []
        },
        {
          "name": "Proxy",
          "storage": {
            "prefix": "Proxy",
            "entries": [
              {
                "name": "Proxies",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 270
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The set of account proxies. Maps the account which has delegated to the accounts",
                  " which are being delegated to, together with the amount held on deposit."
                ]
              },
              {
                "name": "Announcements",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 274
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The announcements made by the proxy (key)."
                ]
              }
            ]
          },
          "calls": {
            "ty": 212
          },
          "event": {
            "ty": 40
          },
          "constants": [
            {
              "name": "ProxyDepositBase",
              "ty": 6,
              "value": [
                0,
                0,
                240,
                7,
                152,
                90,
                227,
                139,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The base amount of currency needed to reserve for creating a proxy.",
                "",
                " This is held for an additional storage item whose value size is",
                " `sizeof(Balance)` bytes and whose key size is `sizeof(AccountId)` bytes."
              ]
            },
            {
              "name": "ProxyDepositFactor",
              "ty": 6,
              "value": [
                0,
                0,
                213,
                42,
                227,
                17,
                234,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount of currency needed per proxy added.",
                "",
                " This is held for adding 32 bytes plus an instance of `ProxyType` more into a",
                " pre-existing storage value. Thus, when configuring `ProxyDepositFactor` one should take",
                " into account `32 + proxy_type.encode().len()` bytes of data."
              ]
            },
            {
              "name": "MaxProxies",
              "ty": 4,
              "value": [
                32,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum amount of proxies allowed for a single account."
              ]
            },
            {
              "name": "MaxPending",
              "ty": 4,
              "value": [
                32,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum amount of time-delayed announcements that are allowed to be pending."
              ]
            },
            {
              "name": "AnnouncementDepositBase",
              "ty": 6,
              "value": [
                0,
                0,
                240,
                7,
                152,
                90,
                227,
                139,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The base amount of currency needed to reserve for creating an announcement.",
                "",
                " This is held when a new storage item holding a `Balance` is created (typically 16",
                " bytes)."
              ]
            },
            {
              "name": "AnnouncementDepositFactor",
              "ty": 6,
              "value": [
                0,
                0,
                56,
                114,
                8,
                133,
                197,
                7,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount of currency needed per announcement made.",
                "",
                " This is held for adding an `AccountId`, `Hash` and `BlockNumber` (typically 68 bytes)",
                " into a pre-existing storage value."
              ]
            }
          ],
          "error": {
            "ty": 278
          },
          "index": 7,
          "docs": []
        },
        {
          "name": "Balances",
          "storage": {
            "prefix": "Balances",
            "entries": [
              {
                "name": "TotalIssuance",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The total units issued in the system."
                ]
              },
              {
                "name": "InactiveIssuance",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The total units of outstanding deactivated balance in the system."
                ]
              },
              {
                "name": "Account",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 5
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  128
                ],
                "docs": [
                  " The Balances pallet example of storing the balance of an account.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>",
                  "  }",
                  " ```",
                  "",
                  " You can also store the balance of an account in the `System` pallet.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "   type AccountStore = System",
                  "  }",
                  " ```",
                  "",
                  " But this comes with tradeoffs, storing account balances in the system pallet stores",
                  " `frame_system` data alongside the account data contrary to storing account balances in the",
                  " `Balances` pallet, which uses a `StorageMap` to store balances data only.",
                  " NOTE: This is only used in the case that this pallet is used to store balances."
                ]
              },
              {
                "name": "Locks",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 279
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Any liquidity locks on some account balances.",
                  " NOTE: Should only be accessed when setting, changing and freeing a lock."
                ]
              },
              {
                "name": "Reserves",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 283
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Named reserves on some account balances."
                ]
              },
              {
                "name": "Holds",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 286
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Holds on account balances."
                ]
              },
              {
                "name": "Freezes",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 289
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Freeze locks on account balances."
                ]
              }
            ]
          },
          "calls": {
            "ty": 214
          },
          "event": {
            "ty": 43
          },
          "constants": [
            {
              "name": "ExistentialDeposit",
              "ty": 6,
              "value": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!",
                "",
                " If you *really* need it to be zero, you can enable the feature `insecure_zero_ed` for",
                " this pallet. However, you do so at your own risk: this will open up a major DoS vector.",
                " In case you have multiple sources of provider references, you may also get unexpected",
                " behaviour if you set this to zero.",
                "",
                " Bottom line: Do yourself a favour and make it at least one!"
              ]
            },
            {
              "name": "MaxLocks",
              "ty": 4,
              "value": [
                50,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of locks that should exist on an account.",
                " Not strictly enforced, but used for weight estimation."
              ]
            },
            {
              "name": "MaxReserves",
              "ty": 4,
              "value": [
                50,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of named reserves that can exist on an account."
              ]
            },
            {
              "name": "MaxHolds",
              "ty": 4,
              "value": [
                50,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of holds that can exist on an account at any time."
              ]
            },
            {
              "name": "MaxFreezes",
              "ty": 4,
              "value": [
                50,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of individual freeze locks that can exist on an account at any time."
              ]
            }
          ],
          "error": {
            "ty": 293
          },
          "index": 10,
          "docs": []
        },
        {
          "name": "TransactionPayment",
          "storage": {
            "prefix": "TransactionPayment",
            "entries": [
              {
                "name": "NextFeeMultiplier",
                "modifier": "Default",
                "ty": {
                  "Plain": 294
                },
                "default": [
                  0,
                  0,
                  100,
                  167,
                  179,
                  182,
                  224,
                  13,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "StorageVersion",
                "modifier": "Default",
                "ty": {
                  "Plain": 295
                },
                "default": [
                  0
                ],
                "docs": []
              }
            ]
          },
          "calls": null,
          "event": {
            "ty": 45
          },
          "constants": [
            {
              "name": "OperationalFeeMultiplier",
              "ty": 2,
              "value": [
                5
              ],
              "docs": [
                " A fee mulitplier for `Operational` extrinsics to compute \"virtual tip\" to boost their",
                " `priority`",
                "",
                " This value is multipled by the `final_fee` to obtain a \"virtual tip\" that is later",
                " added to a tip component in regular `priority` calculations.",
                " It means that a `Normal` transaction can front-run a similarly-sized `Operational`",
                " extrinsic (with no tip), by including a tip value greater than the virtual tip.",
                "",
                " ```rust,ignore",
                " // For `Normal`",
                " let priority = priority_calc(tip);",
                "",
                " // For `Operational`",
                " let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;",
                " let priority = priority_calc(tip + virtual_tip);",
                " ```",
                "",
                " Note that since we use `final_fee` the multiplier applies also to the regular `tip`",
                " sent with the transaction. So, not only does the transaction get a priority bump based",
                " on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`",
                " transactions."
              ]
            }
          ],
          "error": null,
          "index": 11,
          "docs": []
        },
        {
          "name": "Vesting",
          "storage": {
            "prefix": "Vesting",
            "entries": [
              {
                "name": "Vesting",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 296
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Information regarding the vesting of a given account."
                ]
              },
              {
                "name": "StorageVersion",
                "modifier": "Default",
                "ty": {
                  "Plain": 298
                },
                "default": [
                  0
                ],
                "docs": [
                  " Storage version of the pallet.",
                  "",
                  " New networks start with latest version, as determined by the genesis build."
                ]
              }
            ]
          },
          "calls": {
            "ty": 215
          },
          "event": {
            "ty": 46
          },
          "constants": [
            {
              "name": "MinVestedTransfer",
              "ty": 6,
              "value": [
                0,
                0,
                100,
                167,
                179,
                182,
                224,
                13,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The minimum amount transferred to call `vested_transfer`."
              ]
            },
            {
              "name": "MaxVestingSchedules",
              "ty": 4,
              "value": [
                28,
                0,
                0,
                0
              ],
              "docs": []
            }
          ],
          "error": {
            "ty": 299
          },
          "index": 12,
          "docs": []
        },
        {
          "name": "Authorship",
          "storage": {
            "prefix": "Authorship",
            "entries": [
              {
                "name": "Author",
                "modifier": "Optional",
                "ty": {
                  "Plain": 0
                },
                "default": [
                  0
                ],
                "docs": [
                  " Author of current block."
                ]
              }
            ]
          },
          "calls": null,
          "event": null,
          "constants": [],
          "error": null,
          "index": 20,
          "docs": []
        },
        {
          "name": "Session",
          "storage": {
            "prefix": "Session",
            "entries": [
              {
                "name": "Validators",
                "modifier": "Default",
                "ty": {
                  "Plain": 210
                },
                "default": [
                  0
                ],
                "docs": [
                  " The current set of validators."
                ]
              },
              {
                "name": "CurrentIndex",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Current index of the session."
                ]
              },
              {
                "name": "QueuedChanged",
                "modifier": "Default",
                "ty": {
                  "Plain": 49
                },
                "default": [
                  0
                ],
                "docs": [
                  " True if the underlying economic identities or weighting behind the validators",
                  " has changed in the queued validator set."
                ]
              },
              {
                "name": "QueuedKeys",
                "modifier": "Default",
                "ty": {
                  "Plain": 300
                },
                "default": [
                  0
                ],
                "docs": [
                  " The queued keys for the next session. When the next session begins, these keys",
                  " will be used to determine the validator's session keys."
                ]
              },
              {
                "name": "DisabledValidators",
                "modifier": "Default",
                "ty": {
                  "Plain": 302
                },
                "default": [
                  0
                ],
                "docs": [
                  " Indices of disabled validators.",
                  "",
                  " The vec is always kept sorted so that we can find whether a given validator is",
                  " disabled using binary search. It gets cleared when `on_session_ending` returns",
                  " a new set of identities."
                ]
              },
              {
                "name": "NextKeys",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 218
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The next session keys for a validator."
                ]
              },
              {
                "name": "KeyOwner",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 303,
                    "value": 0
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The owner of a key. The key is the `KeyTypeId` + the encoded key."
                ]
              }
            ]
          },
          "calls": {
            "ty": 217
          },
          "event": {
            "ty": 47
          },
          "constants": [],
          "error": {
            "ty": 305
          },
          "index": 21,
          "docs": []
        },
        {
          "name": "Aura",
          "storage": {
            "prefix": "Aura",
            "entries": [
              {
                "name": "Authorities",
                "modifier": "Default",
                "ty": {
                  "Plain": 306
                },
                "default": [
                  0
                ],
                "docs": [
                  " The current authority set."
                ]
              },
              {
                "name": "CurrentSlot",
                "modifier": "Default",
                "ty": {
                  "Plain": 308
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current slot of this block.",
                  "",
                  " This will be set in `on_initialize`."
                ]
              }
            ]
          },
          "calls": null,
          "event": null,
          "constants": [],
          "error": null,
          "index": 22,
          "docs": []
        },
        {
          "name": "AuraExt",
          "storage": {
            "prefix": "AuraExt",
            "entries": [
              {
                "name": "Authorities",
                "modifier": "Default",
                "ty": {
                  "Plain": 306
                },
                "default": [
                  0
                ],
                "docs": [
                  " Serves as cache for the authorities.",
                  "",
                  " The authorities in AuRa are overwritten in `on_initialize` when we switch to a new session,",
                  " but we require the old authorities to verify the seal when validating a PoV. This will",
                  " always be updated to the latest AuRa authorities in `on_finalize`."
                ]
              },
              {
                "name": "SlotInfo",
                "modifier": "Optional",
                "ty": {
                  "Plain": 309
                },
                "default": [
                  0
                ],
                "docs": [
                  " Current slot paired with a number of authored blocks.",
                  "",
                  " Updated on each block initialization."
                ]
              }
            ]
          },
          "calls": null,
          "event": null,
          "constants": [],
          "error": null,
          "index": 23,
          "docs": []
        },
        {
          "name": "ParachainStaking",
          "storage": {
            "prefix": "ParachainStaking",
            "entries": [
              {
                "name": "CollatorCommission",
                "modifier": "Default",
                "ty": {
                  "Plain": 54
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Commission percent taken off of rewards for all collators"
                ]
              },
              {
                "name": "TotalSelected",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The total candidates selected every round"
                ]
              },
              {
                "name": "ParachainBondInfo",
                "modifier": "Default",
                "ty": {
                  "Plain": 310
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Parachain bond config info { account, percent_of_inflation }"
                ]
              },
              {
                "name": "Round",
                "modifier": "Default",
                "ty": {
                  "Plain": 311
                },
                "default": [
                  1,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  20,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Current round index and next round scheduled transition"
                ]
              },
              {
                "name": "DelegatorState",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 312
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Get delegator state associated with an account if account is delegating else None"
                ]
              },
              {
                "name": "CandidateInfo",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 317
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Get collator candidate info associated with an account if account is candidate else None"
                ]
              },
              {
                "name": "DelegationScheduledRequests",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 322
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores outstanding delegation requests per collator."
                ]
              },
              {
                "name": "AutoCompoundingDelegations",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 325
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores auto-compounding configuration per collator."
                ]
              },
              {
                "name": "TopDelegations",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 328
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Top delegations for collator candidate"
                ]
              },
              {
                "name": "BottomDelegations",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 328
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Bottom delegations for collator candidate"
                ]
              },
              {
                "name": "SelectedCandidates",
                "modifier": "Default",
                "ty": {
                  "Plain": 329
                },
                "default": [
                  0
                ],
                "docs": [
                  " The collator candidates selected for the current round"
                ]
              },
              {
                "name": "Total",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Total capital locked by this staking pallet"
                ]
              },
              {
                "name": "CandidatePool",
                "modifier": "Default",
                "ty": {
                  "Plain": 330
                },
                "default": [
                  0
                ],
                "docs": [
                  " The pool of collator candidates, each with their total backing stake"
                ]
              },
              {
                "name": "AtStake",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 332,
                    "value": 333
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Snapshot of collator delegation stake at the start of the round"
                ]
              },
              {
                "name": "DelayedPayouts",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 336
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Delayed payouts"
                ]
              },
              {
                "name": "Staked",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 6
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Total counted stake for selected candidates in the round"
                ]
              },
              {
                "name": "InflationConfig",
                "modifier": "Default",
                "ty": {
                  "Plain": 337
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Inflation configuration"
                ]
              },
              {
                "name": "Points",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 4
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Total points awarded to collators for block production in the round"
                ]
              },
              {
                "name": "AwardedPts",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 332,
                    "value": 4
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Points for each collator per round"
                ]
              },
              {
                "name": "EnableMarkingOffline",
                "modifier": "Default",
                "ty": {
                  "Plain": 49
                },
                "default": [
                  0
                ],
                "docs": [
                  " Killswitch to enable/disable marking offline feature."
                ]
              },
              {
                "name": "RewardsAccount",
                "modifier": "Optional",
                "ty": {
                  "Plain": 0
                },
                "default": [
                  0
                ],
                "docs": [
                  " Source of rewards for block producers"
                ]
              }
            ]
          },
          "calls": {
            "ty": 221
          },
          "event": {
            "ty": 48
          },
          "constants": [
            {
              "name": "MinBlocksPerRound",
              "ty": 4,
              "value": [
                10,
                0,
                0,
                0
              ],
              "docs": [
                " Minimum number of blocks per round"
              ]
            },
            {
              "name": "MaxOfflineRounds",
              "ty": 4,
              "value": [
                1,
                0,
                0,
                0
              ],
              "docs": [
                " If a collator doesn't produce any block on this number of rounds, it is notified as",
                " inactive. This value must be less than or equal to RewardPaymentDelay."
              ]
            },
            {
              "name": "LeaveCandidatesDelay",
              "ty": 4,
              "value": [
                28,
                0,
                0,
                0
              ],
              "docs": [
                " Number of rounds that candidates remain bonded before exit request is executable"
              ]
            },
            {
              "name": "CandidateBondLessDelay",
              "ty": 4,
              "value": [
                28,
                0,
                0,
                0
              ],
              "docs": [
                " Number of rounds candidate requests to decrease self-bond must wait to be executable"
              ]
            },
            {
              "name": "LeaveDelegatorsDelay",
              "ty": 4,
              "value": [
                28,
                0,
                0,
                0
              ],
              "docs": [
                " Number of rounds that delegators remain bonded before exit request is executable"
              ]
            },
            {
              "name": "RevokeDelegationDelay",
              "ty": 4,
              "value": [
                28,
                0,
                0,
                0
              ],
              "docs": [
                " Number of rounds that delegations remain bonded before revocation request is executable"
              ]
            },
            {
              "name": "DelegationBondLessDelay",
              "ty": 4,
              "value": [
                28,
                0,
                0,
                0
              ],
              "docs": [
                " Number of rounds that delegation less requests must wait before executable"
              ]
            },
            {
              "name": "RewardPaymentDelay",
              "ty": 4,
              "value": [
                2,
                0,
                0,
                0
              ],
              "docs": [
                " Number of rounds after which block authors are rewarded"
              ]
            },
            {
              "name": "MinSelectedCandidates",
              "ty": 4,
              "value": [
                5,
                0,
                0,
                0
              ],
              "docs": [
                " Minimum number of selected candidates every round"
              ]
            },
            {
              "name": "MaxTopDelegationsPerCandidate",
              "ty": 4,
              "value": [
                44,
                1,
                0,
                0
              ],
              "docs": [
                " Maximum top delegations counted per candidate"
              ]
            },
            {
              "name": "MaxBottomDelegationsPerCandidate",
              "ty": 4,
              "value": [
                50,
                0,
                0,
                0
              ],
              "docs": [
                " Maximum bottom delegations (not counted) per candidate"
              ]
            },
            {
              "name": "MaxDelegationsPerDelegator",
              "ty": 4,
              "value": [
                100,
                0,
                0,
                0
              ],
              "docs": [
                " Maximum delegations per delegator"
              ]
            },
            {
              "name": "MinCandidateStk",
              "ty": 6,
              "value": [
                0,
                0,
                128,
                100,
                117,
                147,
                193,
                51,
                60,
                4,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Minimum stake required for any account to be a collator candidate"
              ]
            },
            {
              "name": "MinDelegation",
              "ty": 6,
              "value": [
                0,
                0,
                80,
                239,
                226,
                214,
                228,
                26,
                27,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Minimum stake for any registered on-chain account to delegate"
              ]
            },
            {
              "name": "MaxCandidates",
              "ty": 4,
              "value": [
                200,
                0,
                0,
                0
              ],
              "docs": [
                " Maximum candidates"
              ]
            }
          ],
          "error": {
            "ty": 338
          },
          "index": 24,
          "docs": []
        },
        {
          "name": "XcmpQueue",
          "storage": {
            "prefix": "XcmpQueue",
            "entries": [
              {
                "name": "InboundXcmpStatus",
                "modifier": "Default",
                "ty": {
                  "Plain": 339
                },
                "default": [
                  0
                ],
                "docs": [
                  " Status of the inbound XCMP channels."
                ]
              },
              {
                "name": "InboundXcmpMessages",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Twox64Concat"
                    ],
                    "key": 345,
                    "value": 14
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Inbound aggregate XCMP messages. It can only be one per ParaId/block."
                ]
              },
              {
                "name": "OutboundXcmpStatus",
                "modifier": "Default",
                "ty": {
                  "Plain": 346
                },
                "default": [
                  0
                ],
                "docs": [
                  " The non-empty XCMP channels in order of becoming non-empty, and the index of the first",
                  " and last outbound message. If the two indices are equal, then it indicates an empty",
                  " queue and there must be a non-`Ok` `OutboundStatus`. We assume queues grow no greater",
                  " than 65535 items. Queue indices for normal messages begin at one; zero is reserved in",
                  " case of the need to send a high-priority signal message this block.",
                  " The bool is true if there is a signal message waiting to be sent."
                ]
              },
              {
                "name": "OutboundXcmpMessages",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Twox64Concat"
                    ],
                    "key": 349,
                    "value": 14
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The messages outbound in a given XCMP channel."
                ]
              },
              {
                "name": "SignalMessages",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 57,
                    "value": 14
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Any signal messages waiting to be sent."
                ]
              },
              {
                "name": "QueueConfig",
                "modifier": "Default",
                "ty": {
                  "Plain": 350
                },
                "default": [
                  2,
                  0,
                  0,
                  0,
                  5,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  130,
                  26,
                  6,
                  0,
                  0,
                  8,
                  0,
                  7,
                  0,
                  200,
                  23,
                  168,
                  4,
                  2,
                  0,
                  4,
                  0
                ],
                "docs": [
                  " The configuration which controls the dynamics of the outbound queue."
                ]
              },
              {
                "name": "Overweight",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 11,
                    "value": 351
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The messages that exceeded max individual message weight budget.",
                  "",
                  " These message stay in this storage map until they are manually dispatched via",
                  " `service_overweight`."
                ]
              },
              {
                "name": "CounterForOverweight",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "OverweightCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 11
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The number of overweight messages ever recorded in `Overweight`. Also doubles as the next",
                  " available free overweight index."
                ]
              },
              {
                "name": "QueueSuspended",
                "modifier": "Default",
                "ty": {
                  "Plain": 49
                },
                "default": [
                  0
                ],
                "docs": [
                  " Whether or not the XCMP queue is suspended from executing incoming XCMs or not."
                ]
              }
            ]
          },
          "calls": {
            "ty": 224
          },
          "event": {
            "ty": 55
          },
          "constants": [],
          "error": {
            "ty": 352
          },
          "index": 30,
          "docs": []
        },
        {
          "name": "PolkadotXcm",
          "storage": {
            "prefix": "PolkadotXcm",
            "entries": [
              {
                "name": "QueryCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 11
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The latest available query index."
                ]
              },
              {
                "name": "Queries",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 11,
                    "value": 353
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The ongoing queries."
                ]
              },
              {
                "name": "AssetTraps",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 4
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The existing asset traps.",
                  "",
                  " Key is the blake2 256 hash of (origin, versioned `MultiAssets`) pair. Value is the number of",
                  " times this pair has been trapped (usually just 1 if it exists at all)."
                ]
              },
              {
                "name": "SafeXcmVersion",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " Default version to encode XCM when latest version of destination is unknown. If `None`,",
                  " then the destinations whose XCM version is unknown are considered unreachable."
                ]
              },
              {
                "name": "SupportedVersion",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 358,
                    "value": 4
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The Latest versions that we know various locations support."
                ]
              },
              {
                "name": "VersionNotifiers",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 358,
                    "value": 11
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " All locations that we have requested version notifications from."
                ]
              },
              {
                "name": "VersionNotifyTargets",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 358,
                    "value": 359
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The target locations that are subscribed to our version changes, as well as the most recent",
                  " of our versions we informed them of."
                ]
              },
              {
                "name": "VersionDiscoveryQueue",
                "modifier": "Default",
                "ty": {
                  "Plain": 360
                },
                "default": [
                  0
                ],
                "docs": [
                  " Destinations whose latest XCM version we would like to know. Duplicates not allowed, and",
                  " the `u32` counter is the number of times that a send to the destination has been attempted,",
                  " which is used as a prioritization."
                ]
              },
              {
                "name": "CurrentMigration",
                "modifier": "Optional",
                "ty": {
                  "Plain": 363
                },
                "default": [
                  0
                ],
                "docs": [
                  " The current migration's stage, if any."
                ]
              },
              {
                "name": "RemoteLockedFungibles",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 365,
                    "value": 367
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Fungible assets which we know are locked on a remote chain."
                ]
              },
              {
                "name": "LockedFungibles",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 371
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Fungible assets which we know are locked on this chain."
                ]
              },
              {
                "name": "XcmExecutionSuspended",
                "modifier": "Default",
                "ty": {
                  "Plain": 49
                },
                "default": [
                  0
                ],
                "docs": [
                  " Global suspension state of the XCM executor."
                ]
              }
            ]
          },
          "calls": {
            "ty": 225
          },
          "event": {
            "ty": 58
          },
          "constants": [],
          "error": {
            "ty": 374
          },
          "index": 31,
          "docs": []
        },
        {
          "name": "CumulusXcm",
          "storage": null,
          "calls": {
            "ty": 246
          },
          "event": {
            "ty": 112
          },
          "constants": [],
          "error": {
            "ty": 375
          },
          "index": 32,
          "docs": []
        },
        {
          "name": "DmpQueue",
          "storage": {
            "prefix": "DmpQueue",
            "entries": [
              {
                "name": "Configuration",
                "modifier": "Default",
                "ty": {
                  "Plain": 376
                },
                "default": [
                  7,
                  0,
                  228,
                  11,
                  84,
                  2,
                  2,
                  0,
                  4,
                  0
                ],
                "docs": [
                  " The configuration."
                ]
              },
              {
                "name": "PageIndex",
                "modifier": "Default",
                "ty": {
                  "Plain": 377
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The page index."
                ]
              },
              {
                "name": "Pages",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 378
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The queue pages."
                ]
              },
              {
                "name": "Overweight",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 11,
                    "value": 379
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The overweight messages."
                ]
              },
              {
                "name": "CounterForOverweight",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  "Counter for the related counted storage map"
                ]
              }
            ]
          },
          "calls": {
            "ty": 247
          },
          "event": {
            "ty": 113
          },
          "constants": [],
          "error": {
            "ty": 380
          },
          "index": 33,
          "docs": []
        },
        {
          "name": "Ethereum",
          "storage": {
            "prefix": "Ethereum",
            "entries": [
              {
                "name": "Pending",
                "modifier": "Default",
                "ty": {
                  "Plain": 381
                },
                "default": [
                  0
                ],
                "docs": [
                  " Current building block's transactions and receipts."
                ]
              },
              {
                "name": "CurrentBlock",
                "modifier": "Optional",
                "ty": {
                  "Plain": 390
                },
                "default": [
                  0
                ],
                "docs": [
                  " The current Ethereum block."
                ]
              },
              {
                "name": "CurrentReceipts",
                "modifier": "Optional",
                "ty": {
                  "Plain": 395
                },
                "default": [
                  0
                ],
                "docs": [
                  " The current Ethereum receipts."
                ]
              },
              {
                "name": "CurrentTransactionStatuses",
                "modifier": "Optional",
                "ty": {
                  "Plain": 396
                },
                "default": [
                  0
                ],
                "docs": [
                  " The current transaction statuses."
                ]
              },
              {
                "name": "BlockHash",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 128,
                    "value": 12
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              }
            ]
          },
          "calls": {
            "ty": 248
          },
          "event": {
            "ty": 114
          },
          "constants": [],
          "error": {
            "ty": 397
          },
          "index": 50,
          "docs": []
        },
        {
          "name": "EVM",
          "storage": {
            "prefix": "EVM",
            "entries": [
              {
                "name": "AccountCodes",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 115,
                    "value": 14
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "AccountCodesMetadata",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 115,
                    "value": 398
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "AccountStorages",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 399,
                    "value": 12
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "Suicided",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 115,
                    "value": 35
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              }
            ]
          },
          "calls": {
            "ty": 258
          },
          "event": {
            "ty": 124
          },
          "constants": [],
          "error": {
            "ty": 400
          },
          "index": 51,
          "docs": []
        },
        {
          "name": "EVMChainId",
          "storage": {
            "prefix": "EVMChainId",
            "entries": [
              {
                "name": "ChainId",
                "modifier": "Default",
                "ty": {
                  "Plain": 11
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The EVM chain ID."
                ]
              }
            ]
          },
          "calls": null,
          "event": null,
          "constants": [],
          "error": null,
          "index": 52,
          "docs": []
        },
        {
          "name": "BaseFee",
          "storage": {
            "prefix": "BaseFee",
            "entries": [
              {
                "name": "BaseFeePerGas",
                "modifier": "Default",
                "ty": {
                  "Plain": 128
                },
                "default": [
                  0,
                  202,
                  154,
                  59,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "Elasticity",
                "modifier": "Default",
                "ty": {
                  "Plain": 130
                },
                "default": [
                  72,
                  232,
                  1,
                  0
                ],
                "docs": []
              }
            ]
          },
          "calls": {
            "ty": 262
          },
          "event": {
            "ty": 127
          },
          "constants": [],
          "error": null,
          "index": 53,
          "docs": []
        },
        {
          "name": "LaosEvolution",
          "storage": {
            "prefix": "LaosEvolution",
            "entries": [
              {
                "name": "CollectionCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 11
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Collection counter"
                ]
              },
              {
                "name": "CollectionOwner",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 11,
                    "value": 0
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Storage for the ownership of collections"
                ]
              },
              {
                "name": "CollectionPublicMintingEnabled",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 11,
                    "value": 35
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Storage for the public minting policy of collections  "
                ]
              },
              {
                "name": "TokenURI",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 401,
                    "value": 132
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Token URI which can override the default URI scheme and set explicitly",
                  " This will contain external URI in a raw form"
                ]
              }
            ]
          },
          "calls": {
            "ty": 263
          },
          "event": {
            "ty": 131
          },
          "constants": [
            {
              "name": "MaxTokenUriLength",
              "ty": 4,
              "value": [
                0,
                2,
                0,
                0
              ],
              "docs": [
                " Limit for the length of `token_uri`"
              ]
            }
          ],
          "error": {
            "ty": 402
          },
          "index": 100,
          "docs": []
        },
        {
          "name": "AssetMetadataExtender",
          "storage": {
            "prefix": "AssetMetadataExtender",
            "entries": [
              {
                "name": "ExtensionsCounter",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 134,
                    "value": 4
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Extensions counter for a given location"
                ]
              },
              {
                "name": "ClaimersByLocationAndIndex",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 403,
                    "value": 0
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Records all claimers with index that performed an extension for a given asset location"
                ]
              },
              {
                "name": "TokenUrisByClaimerAndLocation",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 404,
                    "value": 132
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Records all the token uris associated with a universal location performed by a claimer."
                ]
              }
            ]
          },
          "calls": null,
          "event": {
            "ty": 133
          },
          "constants": [
            {
              "name": "MaxTokenUriLength",
              "ty": 4,
              "value": [
                0,
                2,
                0,
                0
              ],
              "docs": [
                " Limit for the length of `token_uri`"
              ]
            },
            {
              "name": "MaxUniversalLocationLength",
              "ty": 4,
              "value": [
                0,
                2,
                0,
                0
              ],
              "docs": [
                " Limit for the length of `universal_location`"
              ]
            }
          ],
          "error": {
            "ty": 405
          },
          "index": 101,
          "docs": []
        }
      ],
      "extrinsic": {
        "version": 4,
        "address_ty": 0,
        "call_ty": 200,
        "signature_ty": 406,
        "extra_ty": 409,
        "signed_extensions": [
          {
            "identifier": "CheckNonZeroSender",
            "ty": 410,
            "additional_signed": 35
          },
          {
            "identifier": "CheckSpecVersion",
            "ty": 411,
            "additional_signed": 4
          },
          {
            "identifier": "CheckTxVersion",
            "ty": 412,
            "additional_signed": 4
          },
          {
            "identifier": "CheckGenesis",
            "ty": 413,
            "additional_signed": 12
          },
          {
            "identifier": "CheckMortality",
            "ty": 414,
            "additional_signed": 12
          },
          {
            "identifier": "CheckNonce",
            "ty": 416,
            "additional_signed": 35
          },
          {
            "identifier": "CheckWeight",
            "ty": 417,
            "additional_signed": 35
          },
          {
            "identifier": "ChargeTransactionPayment",
            "ty": 418,
            "additional_signed": 35
          }
        ]
      },
      "ty": 419,
      "apis": [],
      "outer_enums": {
        "call_enum_ty": 200,
        "event_enum_ty": 21,
        "error_enum_ty": 420
      },
      "custom": {
        "map": {}
      }
    }
  }
]